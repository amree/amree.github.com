<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>qt on Amree Zaid</title><link>https://amree.github.io/tags/qt/</link><description>Recent content in qt on Amree Zaid</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Jul 2011 00:00:00 +0000</lastBuildDate><atom:link href="https://amree.github.io/tags/qt/index.xml" rel="self" type="application/rss+xml"/><item><title>How to enable MySQL Support in Qt SDK for Windows</title><link>https://amree.github.io/posts/how-to-enable-mysql-support-in-qt-sdk-for-windows/</link><pubDate>Mon, 11 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/posts/how-to-enable-mysql-support-in-qt-sdk-for-windows/</guid><description>&lt;p>It has been quite a while since I wrote the previous guide. Since that
particular post gained a lot of visitors, I decided to write a new guide based
on the new Qt SDK and MySQL so that it will help people with new version for
both softwares.&lt;/p></description><content>&lt;p>It has been quite a while since I wrote the previous guide. Since that
particular post gained a lot of visitors, I decided to write a new guide based
on the new Qt SDK and MySQL so that it will help people with new version for
both softwares.&lt;/p>
&lt;p>Download Qt SDK and install it. In my case, I installed it at &lt;code>C:\QtSDK&lt;/code>. You
must make sure that you’ve chosen to install Qt Sources. If you have Qt SDK
installed but you haven’t install Qt sources, just go to this path to install
it.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Start &amp;gt; All Programs &amp;gt; Qt SDK &amp;gt; Maintain Qt SDK
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://amree.github.io/images/posts/2011-07-11-qt.png" alt="image">&lt;/p>
&lt;p>Download MySQL and install it. In my case, I choose to install it at:&lt;/p>
&lt;p>C:\Program Files (x86)\MySQL\MySQL Server 5.5.&lt;/p>
&lt;p>You don’t need to install everything if you want to compile the plugin. Make
sure you will at least choose to install Client C API Library.&lt;/p>
&lt;p>&lt;img src="https://amree.github.io/images/posts/2011-07-11-mysql.png" alt="image">&lt;/p>
&lt;p>Open:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Start &amp;gt; All Programs &amp;gt; Qt SDK &amp;gt; Desktop &amp;gt; Qt 4.7.3 for Desktop (MingW)**
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run these commands (change according to your environment):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bat" data-lang="bat">&lt;span style="color:#66d9ef">set&lt;/span> mysql=C:\PROGRA~2\MySQL\MYSQLS~1.5
&lt;span style="color:#66d9ef">cd&lt;/span> \
&lt;span style="color:#66d9ef">cd&lt;/span> QtSDK\QtSources\4.7.3\src\plugins\sqldrivers\mysql\
qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\include&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\lib\libmysql.lib&amp;#34;&lt;/span> -o Makefile mysql.pro
mingw32-make
qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\include&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\lib\libmysql.lib&amp;#34;&lt;/span> -o Makefile mysql.pro &lt;span style="color:#e6db74">&amp;#34;CONFIG+=release&amp;#34;&lt;/span>
mingw32-make
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should be able to run these commands &lt;strong>without any error&lt;/strong>.&lt;/p>
&lt;p>You’ll find two directories (&lt;strong>debug&lt;/strong> and &lt;strong>release&lt;/strong>) created in the current
directory.&lt;/p>
&lt;p>In &lt;strong>debug&lt;/strong> directory, you’ll find &lt;code>libqsqlmysqld4.a&lt;/code> and &lt;code>qsqlmysqld4.dll&lt;/code>.&lt;/p>
&lt;p>Meanwhile, in &lt;strong>release&lt;/strong> directory, you’ll find &lt;code>libqsqlmysql4.a&lt;/code> and
&lt;code>qsqlmysql4.dll&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Copy all these 4 files into&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">C:\QtSDK\Desktop\Qt\4.7.3\mingw\plugins\sqldrivers
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Copy &lt;code>libmysql.dll&lt;/code> (found in your MySQL installation directory) into C:\Windows.&lt;/p>
&lt;p>Create new project and put these codes to test your new plugin&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QApplication&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QtSql&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[])
{
QCoreApplication a(argc, argv);
qDebug() &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> QSqlDatabase&lt;span style="color:#f92672">::&lt;/span>drivers();
&lt;span style="color:#66d9ef">return&lt;/span> a.exec();
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you have QtSql Module in your project configuration file (.pro file)&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">QT += sql
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You’ll get these outputs showing that your Qt has supports for MySQL:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(&amp;#34;QSQLITE&amp;#34;, &amp;#34;QMYSQL3&amp;#34;, &amp;#34;QMYSQL&amp;#34;, &amp;#34;QODBC3&amp;#34;, &amp;#34;QODBC&amp;#34;)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Things to watch out for:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>You can’t use MySQL 64 Bit (at the moment)&lt;/strong> to compile the plugin.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make sure you’ll &lt;strong>use short path&lt;/strong> type if you’ve installed MySQL into directory’s name containing spaces.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Load sql module&lt;/strong> in your .pro file.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>11/7/2011 – Windows 64 Bit, MySQL Server 5.5.1 32 Bit (Community Version) and Qt 4.7.3.&lt;/li>
&lt;/ul></content></item><item><title>A Simple Working Example for Qt NCReport</title><link>https://amree.github.io/posts/a-simple-working-example-for-qt-ncreport/</link><pubDate>Sat, 09 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/posts/a-simple-working-example-for-qt-ncreport/</guid><description>&lt;p>This should help you with NCReport in Qt.&lt;/p></description><content>&lt;p>This should help you with NCReport in Qt.&lt;/p>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Download NCReport with MingW for Windows.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install NCReport at&lt;/p>
&lt;pre>&lt;code>C:\NCReport\2.6.1.mingw.eval
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Get the full &lt;a href="https://github.com/amree/ncreport-example">source code&lt;/a> of the project at my Github.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go to Projects (bar at the left) &amp;gt; Run Settings &amp;gt; Click Details on the Run
Environment &amp;gt; Edit PATH’s variable and append the following line at the end
of the string.&lt;/p>
&lt;pre>&lt;code>;C:\NCReport\2.6.1.mingw.eval\bin
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Run the project in &lt;strong>Debug&lt;/strong> and &lt;strong>Release&lt;/strong> mode. You should be able to run the report by clicking the button.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>Windows 7 (64 bit)&lt;/li>
&lt;li>NCReport 2.6.1 with MingW for Windows&lt;/li>
&lt;li>QtSDK 1.1.2&lt;/li>
&lt;li>Qt 4.7.3&lt;/li>
&lt;li>Qt Creator 2.2.1&lt;/li>
&lt;/ul>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Download NCReport for Linux.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install NCReport at &lt;code>/opt/ncreport&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get the full &lt;a href="https://github.com/amree/ncreport-example">source code&lt;/a> of the project at my Github.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run the project in &lt;strong>Debug&lt;/strong> and &lt;strong>Release&lt;/strong> mode. You should be able to run the report by clicking the button.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>Slackware 13.37 (32 Bit)&lt;/li>
&lt;li>NCReport 2.6.1 for Linux&lt;/li>
&lt;li>QtSDK 1.1.2&lt;/li>
&lt;li>Qt 4.7.3&lt;/li>
&lt;li>Qt Creator 2.2.1&lt;/li>
&lt;/ul></content></item><item><title>How to Enable MySQL Support in Qt SDK for Linux</title><link>https://amree.github.io/posts/how-to-enable-mysql-support-in-qt-sdk-for-linux/</link><pubDate>Wed, 22 Jul 2009 00:00:00 +0000</pubDate><guid>https://amree.github.io/posts/how-to-enable-mysql-support-in-qt-sdk-for-linux/</guid><description>&lt;p>Known to work with:&lt;/p>
&lt;ul>
&lt;li>Slackware v13.37&lt;/li>
&lt;li>Qt SDK v1.1.5 (32 bit)&lt;/li>
&lt;li>Qt v4.8.0&lt;/li>
&lt;li>MySQL v5.5.18&lt;/li>
&lt;/ul></description><content>&lt;p>Known to work with:&lt;/p>
&lt;ul>
&lt;li>Slackware v13.37&lt;/li>
&lt;li>Qt SDK v1.1.5 (32 bit)&lt;/li>
&lt;li>Qt v4.8.0&lt;/li>
&lt;li>MySQL v5.5.18&lt;/li>
&lt;/ul>
&lt;p>Please follow this guide properly:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download Qt SDK for Linux/X11 at Qt Software.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install it anywhere you want, just make sure you remember the path. I installed mine at &lt;code>/opt&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To build MySQL as a plugin, you need to know two other paths:&lt;/p>
&lt;p>MySQL header directory&amp;rsquo;s files example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">decimal.h m_string.h my_dbug.h my_list.h my_sys.h mysql_embed.h mysqld_error.h sql_state.h typelib.h
errmsg.h my_alloc.h my_dir.h my_net.h my_xml.h mysql_time.h raid.h sslopt-case.h
keycache.h my_attribute.h my_getopt.h my_no_pthread.h mysql.h mysql_version.h readline.h sslopt-longopts.h
m_ctype.h my_config.h my_global.h my_pthread.h mysql_com.h mysqld_ername.h sql_common.h sslopt-vars.h
&lt;/code>&lt;/pre>&lt;/div>&lt;p>MySQL library directory&amp;rsquo;s files example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">libdbug.a libmyisammrg.a libmysqlclient.so@ libmysqlclient_r.a libmysqlclient_r.so.15@ libmysys.a
libheap.a libmysqlclient.a libmysqlclient.so.15@ libmysqlclient_r.la* libmysqlclient_r.so.15.0.0* libvio.a
libmyisam.a libmysqlclient.la* libmysqlclient.so.15.0.0* libmysqlclient_r.so@ libmystrings.a
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>I installed my MySQL at &lt;code>/opt&lt;/code>, so those files will be in:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># Headers directory&lt;/span>
/opt/mysql-5.5.18-linux2.6-i686/include/
&lt;span style="color:#75715e"># Libraries directory&lt;/span>
/opt/mysql-5.5.18-linux2.6-i686/lib
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Go to your main Qt SDK installation&amp;rsquo;s path:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /opt/QtSDK/
cd QtSources/4.8.0/src/plugins/sqldrivers
&lt;span style="color:#75715e"># Replace all the path based on your computer environment.&lt;/span>
/opt/QtSDK/Desktop/Qt/4.8.0/gcc/bin/qmake -o Makefile &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=/opt/mysql-5.5.18-linux2.6-i686/include/&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=-L/opt/mysql-5.5.18-linux2.6-i686/lib -lmysqlclient&amp;#34;&lt;/span> mysql.pro
make
/opt/QtSDK/Desktop/Qt/4.8.0/gcc/bin/qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=/opt/mysql-5.5.18-linux2.6-i686/include/&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=-L/opt/mysql-5.5.18-linux2.6-i686/lib -lmysqlclient_r&amp;#34;&lt;/span> mysql.pro
make
make install
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Some files with &lt;code>mysql&lt;/code> in the name will be copied in your sqldrivers path:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">/opt/QtSDK/Desktop/Qt/4.8.0/gcc/plugins/sqldrivers
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Before trying your MySQL coding, please make sure &lt;code>libmysqlclient.so&lt;/code> is in
the &lt;code>LD_LIBRARY_PATH&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new project and put these codes to test your new plugin.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">QT += core sql
QT -= gui
TARGET = mysql
CONFIG += console
CONFIG -= app_bundle
TEMPLATE = app
SOURCES += main.cpp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you have &lt;code>mysql&lt;/code> included in your &lt;code>.pro&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QCoreApplication&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QtSql&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[])
{
QCoreApplication a(argc, argv);
qDebug() &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> QSqlDatabase&lt;span style="color:#f92672">::&lt;/span>drivers();
&lt;span style="color:#66d9ef">return&lt;/span> a.exec();
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get &lt;code>QMYSQL&lt;/code> in the outputs when you ran the application:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(&amp;#34;QSQLITE&amp;#34;, &amp;#34;QMYSQL3&amp;#34;, &amp;#34;QMYSQL&amp;#34;)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can find my info at &lt;a href="http://qt-project.org/doc/qt-4.8/sql-driver.html">http://qt-project.org/doc/qt-4.8/sql-driver.html&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol></content></item></channel></rss>