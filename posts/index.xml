<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Amree Zaid</title><link>https://amree.github.io/posts/</link><description>Recent content in Posts on Amree Zaid</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 09 May 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://amree.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Speed Up Ruby on Rails Development Environment</title><link>https://amree.github.io/2021/05/09/speed-up-ruby-on-rails-development-environment/</link><pubDate>Sun, 09 May 2021 00:00:00 +0000</pubDate><guid>https://amree.github.io/2021/05/09/speed-up-ruby-on-rails-development-environment/</guid><description>&lt;p>There will be a time when your Rails development environment started to become
very slow due to multiple reasons, but mostly because your codebase is very big
and the monolith architecture is just too sweet for you to pass on.&lt;/p></description><content>&lt;p>There will be a time when your Rails development environment started to become
very slow due to multiple reasons, but mostly because your codebase is very big
and the monolith architecture is just too sweet for you to pass on.&lt;/p>
&lt;p>An example of this is you have to wait like 10 seconds (or worse) when you
change something in your Rails code and hit that refresh button. Normally,
starting Rails console/server also can be affected.&lt;/p>
&lt;p>What works for me might not work for you, but it should help you to get started.
BTW, I&amp;rsquo;m optimizing 7 years old codebase. So here are some tips for speed
improvements.&lt;/p>
&lt;p>Get a baseline first on how slow it is so that you know you are actually
improving it instead of just using your feeling:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">time bundle exec rake environment
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This should show you the load time without spring. Any changes we make should
make the numbers better than before. Alright, now we need to identify what&amp;rsquo;s
causing the slowness. We can use
&lt;a href="https://github.com/nevir/Bumbler">https://github.com/nevir/Bumbler&lt;/a> gem for
this. Just run this command first:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bumbler
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It will show you gems that are taking time to be loaded/require.&lt;/p>
&lt;p>But what can you do with that output? Start from the bottom and see if you put
your gem in the right development. You don&amp;rsquo;t have to put your server monitoring
gem in the development environment, right?&lt;/p>
&lt;p>You can also do &lt;code>require: false&lt;/code> in your Gemfile for certain gems that are being
used rarely, but you need to &lt;code>require&lt;/code> it manually when you want to use it.&lt;/p>
&lt;p>Use your judgment wisely. Check out how
&lt;a href="https://github.com/discourse/discourse/blob/master/Gemfile">https://github.com/discourse/discourse/blob/master/Gemfile&lt;/a>
is doing it&lt;/p>
&lt;p>Next, run:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bumbler --initializers
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will show you the load time of initializers.&lt;/p>
&lt;p>In my case, it was the routes (we have thousands of routes due to our support of
multiple languages). So, reducing the routes will help but we can&amp;rsquo;t remove the
routes, it&amp;rsquo;s one of our best features.&lt;/p>
&lt;p>Since you won&amp;rsquo;t always be using ALL of them in the development, so you can do
this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">config&lt;span style="color:#f92672">.&lt;/span>i8n&lt;span style="color:#f92672">.&lt;/span>available_locales &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#e6db74">:en&lt;/span>&lt;span style="color:#f92672">]&lt;/span> &lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#66d9ef">ENV&lt;/span>&lt;span style="color:#f92672">.&lt;/span>fetch(&lt;span style="color:#e6db74">&amp;#34;MIN_LOCALE&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span>) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#34;1&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>What does it do? By default, it will use all of the languages except when you
have that &lt;code>MIN_LOCALE&lt;/code> environment variable which you would only put in your
local development.&lt;/p>
&lt;p>Another place to check would be your Admin routes. Again, you are not accessing
your Admin routes all the time, so, you can use the same trick in your
&lt;code>routes.rb&lt;/code>. Try optimizing your codebase based on what bumbler told you.&lt;/p>
&lt;p>One last tip would be to do some cleanup on your gems. Remove gems that are not
being used. Sometimes we just forgot that we don&amp;rsquo;t need it anymore.&lt;/p>
&lt;p>That&amp;rsquo;s it, folks. Here is my result from this exercise:&lt;/p>
&lt;ul>
&lt;li>Reduce slow requires by 41%&lt;/li>
&lt;li>Reduce Initialize require by 72%&lt;/li>
&lt;li>Reduce the number of routes by 91%&lt;/li>
&lt;li>Reduce rake time by 55%&lt;/li>
&lt;/ul>
&lt;p>Thanks for reading&lt;/p></content></item><item><title>How to Integrate TradingView's HTML5 Charting Library with Ruby on Rails v6</title><link>https://amree.github.io/2020/11/23/how-to-integrate-tradingviews-html5-charting-library-with-ruby-on-rails-v6/</link><pubDate>Mon, 23 Nov 2020 00:00:00 +0000</pubDate><guid>https://amree.github.io/2020/11/23/how-to-integrate-tradingviews-html5-charting-library-with-ruby-on-rails-v6/</guid><description>&lt;p>As you probably know, the charting library is not accessible publicly. You need
to request access from them. So, I can&amp;rsquo;t really give a complete repo as an
example. I did however open a PR at
&lt;a href="https://github.com/tradingview/charting-library-examples/pull/197,">https://github.com/tradingview/charting-library-examples/pull/197,&lt;/a> but I&amp;rsquo;m not
sure if it&amp;rsquo;s going to be accepted.&lt;/p></description><content>&lt;p>As you probably know, the charting library is not accessible publicly. You need
to request access from them. So, I can&amp;rsquo;t really give a complete repo as an
example. I did however open a PR at
&lt;a href="https://github.com/tradingview/charting-library-examples/pull/197,">https://github.com/tradingview/charting-library-examples/pull/197,&lt;/a> but I&amp;rsquo;m not
sure if it&amp;rsquo;s going to be accepted.&lt;/p>
&lt;p>Anyway, the given example is using asset pipeline and the modern Ruby on Rails
application is using webpacker. So after trying out a few times, I figured a
working way to load the sample chart.&lt;/p>
&lt;p>It&amp;rsquo;s not straight forward for me, so maybe this will help someone else in the
future. However, I&amp;rsquo;m not sure if it&amp;rsquo;s the best way to load it, however, it works
😁&lt;/p>
&lt;p>I&amp;rsquo;m going to assume you&amp;rsquo;re using the Ruby on Rails v6.0.3.4. Once you&amp;rsquo;ve cloned
the library into &lt;code>charting_library&lt;/code> directory, you can do these steps:&lt;/p>
&lt;ul>
&lt;li>Copy &lt;code>charting_library/charting_library.js&lt;/code> into &lt;code>app/javascript/packs/charting_library/charting_library.js&lt;/code>&lt;/li>
&lt;li>Copy &lt;code>datafeeds/udf/dist/*.js&lt;/code> into &lt;code>app/javascript/packs/datafeeds/&lt;/code>&lt;/li>
&lt;li>Copy &lt;code>charting_library/*.html&lt;/code> into &lt;code>public/charting_library/&lt;/code>&lt;/li>
&lt;li>Copy &lt;code>charting_library/bundles&lt;/code> into &lt;code>public/charting_library/bundles&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Don&amp;rsquo;t worry about serving outdated files just because you put it in the public
directory as the charting library will use a new hash on the files every time
there&amp;rsquo;s a new update.&lt;/p>
&lt;p>Once we got the files in the correct places, we can use this code to load the
sample:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// app/javascript/packs/application.js
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;@rails/ujs&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>()
&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;turbolinks&amp;#34;&lt;/span>).&lt;span style="color:#a6e22e">start&lt;/span>()
&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;channels&amp;#34;&lt;/span>)
&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;packs/datafeeds/polyfills&amp;#34;&lt;/span>)
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">Datafeeds&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;packs/datafeeds/bundle&amp;#34;&lt;/span>)
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">TradingView&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;packs/charting_library/charting_library&amp;#34;&lt;/span>)
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">getLanguageFromURL&lt;/span>() {
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">regex&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> RegExp(&lt;span style="color:#e6db74">&amp;#39;[\\?&amp;amp;]lang=([^&amp;amp;#]*)&amp;#39;&lt;/span>);
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">results&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">regex&lt;/span>.&lt;span style="color:#a6e22e">exec&lt;/span>(&lt;span style="color:#a6e22e">location&lt;/span>.&lt;span style="color:#a6e22e">search&lt;/span>);
&lt;span style="color:#66d9ef">return&lt;/span> &lt;span style="color:#a6e22e">results&lt;/span> &lt;span style="color:#f92672">===&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">?&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> &lt;span style="color:#f92672">:&lt;/span> decodeURIComponent(&lt;span style="color:#a6e22e">results&lt;/span>[&lt;span style="color:#ae81ff">1&lt;/span>].&lt;span style="color:#a6e22e">replace&lt;/span>(&lt;span style="color:#e6db74">/\+/g&lt;/span>, &lt;span style="color:#e6db74">&amp;#39; &amp;#39;&lt;/span>));
}
&lt;span style="color:#66d9ef">function&lt;/span> &lt;span style="color:#a6e22e">initOnReady&lt;/span>() {
&lt;span style="color:#66d9ef">var&lt;/span> &lt;span style="color:#a6e22e">widget&lt;/span> &lt;span style="color:#f92672">=&lt;/span> window.&lt;span style="color:#a6e22e">tvWidget&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">TradingView&lt;/span>.&lt;span style="color:#a6e22e">widget&lt;/span>({
&lt;span style="color:#a6e22e">symbol&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;AAPL&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">datafeed&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Datafeeds&lt;/span>.&lt;span style="color:#a6e22e">UDFCompatibleDatafeed&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;https://demo_feed.tradingview.com&amp;#39;&lt;/span>),
&lt;span style="color:#a6e22e">interval&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;D&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">container_id&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;tv_chart_container&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">library_path&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;/charting_library/&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">locale&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#a6e22e">getLanguageFromURL&lt;/span>() &lt;span style="color:#f92672">||&lt;/span> &lt;span style="color:#e6db74">&amp;#39;en&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">disabled_features&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;use_localstorage_for_settings&amp;#39;&lt;/span>],
&lt;span style="color:#a6e22e">enabled_features&lt;/span>&lt;span style="color:#f92672">:&lt;/span> [&lt;span style="color:#e6db74">&amp;#39;study_templates&amp;#39;&lt;/span>],
&lt;span style="color:#a6e22e">charts_storage_url&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;https://saveload.tradingview.com&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">charts_storage_api_version&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;1.1&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">client_id&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;tradingview.com&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">user_id&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;public_user_id&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">fullscreen&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>,
&lt;span style="color:#a6e22e">autosize&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>,
&lt;span style="color:#a6e22e">studies_overrides&lt;/span>&lt;span style="color:#f92672">:&lt;/span> {},
});
&lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">onChartReady&lt;/span>(() =&amp;gt; {
&lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">headerReady&lt;/span>().&lt;span style="color:#a6e22e">then&lt;/span>(() =&amp;gt; {
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">button&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">createButton&lt;/span>();
&lt;span style="color:#a6e22e">button&lt;/span>.&lt;span style="color:#a6e22e">setAttribute&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;title&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">&amp;#39;Click to show a notification popup&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">button&lt;/span>.&lt;span style="color:#a6e22e">classList&lt;/span>.&lt;span style="color:#a6e22e">add&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;apply-common-tooltip&amp;#39;&lt;/span>);
&lt;span style="color:#a6e22e">button&lt;/span>.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;click&amp;#39;&lt;/span>, () =&amp;gt; &lt;span style="color:#a6e22e">widget&lt;/span>.&lt;span style="color:#a6e22e">showNoticeDialog&lt;/span>({
&lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Notification&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">body&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;TradingView Charting Library API works correctly&amp;#39;&lt;/span>,
&lt;span style="color:#a6e22e">callback&lt;/span>&lt;span style="color:#f92672">:&lt;/span> () =&amp;gt; {
&lt;span style="color:#a6e22e">console&lt;/span>.&lt;span style="color:#a6e22e">log&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Noticed!&amp;#39;&lt;/span>);
},
}));
&lt;span style="color:#a6e22e">button&lt;/span>.&lt;span style="color:#a6e22e">innerHTML&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;Check API&amp;#39;&lt;/span>;
});
});
};
window.&lt;span style="color:#a6e22e">addEventListener&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;DOMContentLoaded&amp;#39;&lt;/span>, &lt;span style="color:#a6e22e">initOnReady&lt;/span>, &lt;span style="color:#66d9ef">false&lt;/span>);
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The code is actually coming from the sample with slight modifications.&lt;/p>
&lt;p>Create a view and put this HTML in:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">div&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;page-tv-chart-container&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">id&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tv_chart_container&amp;#34;&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">div&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>TradingView will use that ID to load the chart.&lt;/p>
&lt;p>Just start your server and that&amp;rsquo;s it. You should have a working TradingView
chart by now 👍&lt;/p></content></item><item><title>Exporting data from RDS to S3 using AWS Glue</title><link>https://amree.github.io/2020/10/05/exporting-data-from-rds-to-s3-using-aws-glue/</link><pubDate>Mon, 05 Oct 2020 00:00:00 +0000</pubDate><guid>https://amree.github.io/2020/10/05/exporting-data-from-rds-to-s3-using-aws-glue/</guid><description>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Why would we even want to do this? Just imagine if you have data that are
infrequently accessed. Keeping it in your RDS might costs you more than it
should. Besides, having big table is gonna cause you a bigger headache with your
database maintenance (indexing, auto vacuum, etc).&lt;/p></description><content>&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>Why would we even want to do this? Just imagine if you have data that are
infrequently accessed. Keeping it in your RDS might costs you more than it
should. Besides, having big table is gonna cause you a bigger headache with your
database maintenance (indexing, auto vacuum, etc).&lt;/p>
&lt;p>What if we can store those data somewhere where it&amp;rsquo;s gonna cost less and it&amp;rsquo;s in
an even smaller size? You can read more about the cost-saving part
&lt;a href="https://dev.to/cloudforecast/using-parquet-on-athena-to-save-money-on-aws-3fac">here&lt;/a>.
I&amp;rsquo;ll be focusing on the how and not the why in this post.&lt;/p>
&lt;p>Exporting data from RDS to S3 through AWS Glue and viewing it through AWS Athena
requires a lot of steps. But it’s important to understand the process from the
higher level.&lt;/p>
&lt;p>IMHO, I think we can visualize the whole process as two parts, which are:&lt;/p>
&lt;ul>
&lt;li>Input: This is the process where we’ll get the data from RDS into S3 using AWS
Glue&lt;/li>
&lt;li>Output: This is where we’ll use AWS Athena to view the data in S3&lt;/li>
&lt;/ul>
&lt;p>It’s important to note both processes require almost similar steps. We need to
specify the database and table for both of them.&lt;/p>
&lt;p>Database and table don’t exactly carry the same meaning as our normal
PostgreSQL. The database in this context is more like containers for the tables
and doesn’t really have any extra configurations.&lt;/p>
&lt;p>The table is a little bit different as it has a schema attached to it. The table
in AWS Glue is just the metadata definition that represents your data and it
doesn’t have data inside it. The data is available somewhere else. It can be in
RDS/S3/other places.&lt;/p>
&lt;p>How do we create a table? We can either create it manually or use Crawlers in
AWS Glue for that. We can also create a table from AWS Athena itself.&lt;/p>
&lt;p>The database and tables that you see in AWS Glue will also be available in AWS
Athena.&lt;/p>
&lt;h2 id="recommendations">Recommendations&lt;/h2>
&lt;ul>
&lt;li>In order not to confuse ourselves, I think it’d better if we use different
database names for the input and output. We need to differentiate between
what’s the input and output for easier reference when we set up the AWS Glue
Job.&lt;/li>
&lt;li>More will be added&lt;/li>
&lt;/ul>
&lt;h2 id="steps">Steps&lt;/h2>
&lt;h3 id="prerequisite">Prerequisite&lt;/h3>
&lt;h4 id="security">Security&lt;/h4>
&lt;blockquote>
&lt;p>These security configurations are required to prevent errors when we ran AWS
Glue&lt;/p>
&lt;/blockquote>
&lt;p>Amazon VPC Endpoints for Amazon S3:&lt;/p>
&lt;ul>
&lt;li>Go to VPC &amp;gt; Endpoints&lt;/li>
&lt;li>Create Endpoint&lt;/li>
&lt;li>Search by Services: S3 (com.amazonaws.ap-southeast-1.s3)&lt;/li>
&lt;li>Select your VPC&lt;/li>
&lt;li>Tick a Route Table ID&lt;/li>
&lt;li>Choose Full Access&lt;/li>
&lt;li>Create Endpoint&lt;/li>
&lt;/ul>
&lt;p>The result will be shown in the “Route Tables &amp;gt; Routes” page. There’ll be a new
route added with VPC as the target and S3 service as the destination&lt;/p>
&lt;p>Reference: &lt;a href="https://docs.aws.amazon.com/glue/latest/dg/vpc-endpoints-s3.html">https://docs.aws.amazon.com/glue/latest/dg/vpc-endpoints-s3.html&lt;/a>&lt;/p>
&lt;p>RDS Security Group:&lt;/p>
&lt;ul>
&lt;li>Select the security group of the database that you want to use&lt;/li>
&lt;li>Edit inbound rules&lt;/li>
&lt;li>Add rule&lt;/li>
&lt;li>Type: All TCP&lt;/li>
&lt;li>Source: Custom and search for the security group name itself&lt;/li>
&lt;li>Save rules&lt;/li>
&lt;/ul>
&lt;h4 id="roles">Roles&lt;/h4>
&lt;p>This will allow Glue to call AWS service on our behalf&lt;/p>
&lt;ul>
&lt;li>Go to IAM &amp;gt; Roles &amp;gt; Create role&lt;/li>
&lt;li>Type of trusted identity: AWS Service&lt;/li>
&lt;li>Service: Glue&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Search and select AWSGlueServiceRole&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>We can skip adding tags&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Roles: AWSGlueServiceDefault (can be anything)&lt;/li>
&lt;li>Create Role&lt;/li>
&lt;/ul>
&lt;h4 id="add-database-connections-for-input">Add Database Connections (for Input)&lt;/h4>
&lt;ul>
&lt;li>Go to AWS Glue &amp;gt; Databases &amp;gt; Connections&lt;/li>
&lt;li>Click “Add Connection”&lt;/li>
&lt;li>Connection type: Amazon RDS&lt;/li>
&lt;li>Database Engine: PostgreSQL&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Instance: Choose an RDS&lt;/li>
&lt;li>Put the database details: name, username, and password&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Review and click Finish&lt;/li>
&lt;li>Use “Test Connection” in the “Connections” page to test it out (this might
take a while)&lt;/li>
&lt;/ul>
&lt;h4 id="setup-s3-access-for-output">Setup S3 access (for Output)&lt;/h4>
&lt;ul>
&lt;li>Go to AWS Glue &amp;gt; Databases &amp;gt; Connections&lt;/li>
&lt;li>Click “Add Connection”&lt;/li>
&lt;li>Connection type: Network&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>VPC: Select the same one as the RDS*&lt;/li>
&lt;li>Subnet: Select the same one as the RDS*&lt;/li>
&lt;li>Security Group: default*&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Review and click Finish&lt;/li>
&lt;/ul>
&lt;p>(*) Other options might work too, but I didn’t try them out.&lt;/p>
&lt;h3 id="add-databases">Add Databases&lt;/h3>
&lt;p>This will be the parent/container for the table. A table might come from the
input and output.&lt;/p>
&lt;ul>
&lt;li>Go to AWS Glue &amp;gt; Databases &amp;gt; Add database&lt;/li>
&lt;li>Database name: anything will do&lt;/li>
&lt;/ul>
&lt;p>I created for both. E.g: &lt;code>myapp_input&lt;/code> and &lt;code>myapp_output&lt;/code>&lt;/p>
&lt;h3 id="add-crawlers">Add Crawlers&lt;/h3>
&lt;p>Before we create a job to import the data, we need to set up our input table’s
schema. This schema will be used for the data input in the Job later.&lt;/p>
&lt;p>Naming is hard. I decided to go with this format:
&lt;code>rds_db_name_env_table_name_crawler&lt;/code>. It’s easier if we can grasp what the
crawler does from the name even though we can have a shorter name and put the
details in the description.&lt;/p>
&lt;ul>
&lt;li>Go to AWS Glue &amp;gt; Tables &amp;gt; Add tables &amp;gt; Add tables using a crawler&lt;/li>
&lt;li>Crawler name: Anything&lt;/li>
&lt;li>Crawler source type: Data stores&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Choose a data store: JDBC&lt;/li>
&lt;li>Connection: Choose the one we created above&lt;/li>
&lt;li>Include path: &lt;code>db_name/public/table_name&lt;/code> (assuming we want to take data from
table table_nameas we can use % as the wild card)&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Add another data store: No&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>IAM role: Choose the one we created above (AWSGlueServiceDefault)&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Frequency&lt;/li>
&lt;li>Use Run on demand&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Configure the crawler’s output&lt;/li>
&lt;li>Database: Choose database for the crawler output (this will be the source for
our Job later)&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Review and click Finish&lt;/li>
&lt;/ul>
&lt;p>The crawler that we’ve just defined is just to create a table with a schema
based on the RDS’s table that we just specified.&lt;/p>
&lt;p>Let’s run it to see the output. Just go to the Crawlers page and select “Run
crawler”. It’ll take a moment before it starts and there’s no log when it’s
running (or at least I can’t find it yet). However, there’ll be a log once it’s
done. The only thing you can do to monitor its progress is to keep clicking the
Refresh icon on the Crawlers page.&lt;/p>
&lt;p>Once it’s done, you’ll see the table created automatically in the Tables
section. You can filter out the list of the tables by going through Databases
first. You should see a table with defined schema similar to what you have in
RDS.&lt;/p>
&lt;p>We need to add another crawler that will define the schema of our output. But
this time it’ll be for our S3 (which is the output)&lt;/p>
&lt;ul>
&lt;li>Go to AWS Glue &amp;gt; Tables &amp;gt; Add tables &amp;gt; Add tables using a crawler&lt;/li>
&lt;li>Crawler name: Anything (I chose &lt;code>s3_db_name_env_table_name_crawler&lt;/code>)&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Crawler source type: Data stores&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Choose a data store: S3&lt;/li>
&lt;li>Connection: Use connection declared before for S3 access&lt;/li>
&lt;li>Crawl data in: Specified path in my account&lt;/li>
&lt;li>Include path: &lt;code>s3://you-data-path/&lt;/code>. This will be the path where you’ll store
the output from Job that you’ll create later. The output here means the Apache
Parquet files. I chose: &lt;code>s3://glue-dir/env/database_name/table_name/&lt;/code>&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Add another data store: No&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Choose IAM role&lt;/li>
&lt;li>Choose an existing IAM role&lt;/li>
&lt;li>IAM role: AWSGlueServiceRoleDefault&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Create a schedule for this crawler:&lt;/li>
&lt;li>Frequency: Run on demand&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Configure the crawler’s output:&lt;/li>
&lt;li>Database: A database where you’ll store the output from S3&lt;/li>
&lt;li>Next&lt;/li>
&lt;li>Review and click Finish&lt;/li>
&lt;/ul>
&lt;p>We’re not going to run this crawler yet as the S3 directory is empty. We’ll run
it once we’ve exported RDS data to S3.&lt;/p>
&lt;h3 id="add-a-job">Add a job&lt;/h3>
&lt;p>For some unknown reason, I couldn’t get this to work without using AWS Glue
Studio. Maybe I’ll figure it out once I have more time. But I’ll just use AWS
Glue Studio for now:&lt;/p>
&lt;ul>
&lt;li>Open AWS Glue Studio in ETL section&lt;/li>
&lt;li>Choose &amp;ldquo;Create and manage jobs&amp;rdquo;&lt;/li>
&lt;li>Source: RDS&lt;/li>
&lt;li>Target: S3&lt;/li>
&lt;li>Click Create&lt;/li>
&lt;li>Click on the “Data source - JDBC” node&lt;/li>
&lt;li>Database: Use the database that we defined earlier for the input&lt;/li>
&lt;li>Table: Choose the input table (should be coming from the same database)&lt;/li>
&lt;li>You’ll notice that the node will now have a green check&lt;/li>
&lt;li>Click on the “Data target - S3 bucket” node&lt;/li>
&lt;li>Format: Glue Parquet&lt;/li>
&lt;li>Compression type: Snappy&lt;/li>
&lt;li>S3 Target location: This will the place where the parquet files will be
generated. This path should also be the same as what we defined in our crawler
for the output before. Remember, this is for the data, not for the schema. The
crawler is responsible for the schema. I chose to use
&lt;code>s3://glue-dir/env/database_name/table_name&lt;/code>&lt;/li>
&lt;li>You’ll notice that the node will now have a green check&lt;/li>
&lt;li>Now go to “Job details” tab&lt;/li>
&lt;li>Name: Can be anything, I chose &lt;code>rds_to_s3_db_name_env_table_name&lt;/code>&lt;/li>
&lt;li>IAM Role: Choose the role that we created before - AWSGlueServiceRoleDefault&lt;/li>
&lt;li>Expand “Advanced Properties”&lt;/li>
&lt;li>We’re going to specify some paths so that it won’t litter our top-level s3&lt;/li>
&lt;li>Script path: &lt;code>s3://glue-dir/scripts/&lt;/code>&lt;/li>
&lt;li>Spark UI logs path: &lt;code>s3://glue-dir/sparkHistoryLogs/&lt;/code>&lt;/li>
&lt;li>Temporary path: &lt;code>s3://glue-dir/temporary/&lt;/code>&lt;/li>
&lt;li>Click Save&lt;/li>
&lt;li>Click “Run” to run the script. You can see the log in “Run details” tab. If
everything is working as expected, you should files generated in
&lt;code>s3://glue-dir/env/database_name/table_name&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="viewing-the-record-using-aws-athena">Viewing the record using AWS Athena&lt;/h3>
&lt;p>Before we can view the output, we need to create a table/schema for those
parquet files. This is the job for the crawler (you can also create the table
manually if you want to). That’s what the second crawler does. Just run the
crawler and you’ll get a new table created if it’s new. Refer to previous steps
on how we run the first crawler.&lt;/p>
&lt;p>To confirm the table has been created, just go to the database for the output
and then click on the “Tables ..” link. You should see it there. There’s also an
alert at the top of the Crawler index page once it has finished the job.&lt;/p>
&lt;p>To view the record:&lt;/p>
&lt;ul>
&lt;li>Go to AWS Athena&lt;/li>
&lt;li>Select your database and table.&lt;/li>
&lt;li>Click on the three dots on the right side of the table name and choose Preview
Table&lt;/li>
&lt;li>You’ll see some data in the Results&lt;/li>
&lt;/ul>
&lt;h2 id="references">References&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://github.com/aws-samples/aws-glue-samples/blob/master/FAQ_and_How_to.md">https://github.com/aws-samples/aws-glue-samples/blob/master/FAQ_and_How_to.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://spark.apache.org/docs/2.1.0/sql-programming-guide.html">https://spark.apache.org/docs/2.1.0/sql-programming-guide.html&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://aws.amazon.com/blogs/big-data/how-to-access-and-analyze-on-premises-data-stores-using-aws-glue/">https://aws.amazon.com/blogs/big-data/how-to-access-and-analyze-on-premises-data-stores-using-aws-glue/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://stackoverflow.com/questions/34948296/using-pyspark-to-connect-to-postgresql">https://stackoverflow.com/questions/34948296/using-pyspark-to-connect-to-postgresql&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/cloudforecast/watch-out-for-unexpected-s3-cost-when-using-athena-5hdm">https://dev.to/cloudforecast/watch-out-for-unexpected-s3-cost-when-using-athena-5hdm&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Order Update with Two-Step Payment</title><link>https://amree.github.io/2020/05/09/order-update-with-two-step-payment/</link><pubDate>Sat, 09 May 2020 00:00:00 +0000</pubDate><guid>https://amree.github.io/2020/05/09/order-update-with-two-step-payment/</guid><description>&lt;p>I was asked about this from my latest job application. Didn&amp;rsquo;t realize it&amp;rsquo;s going
to be this long so I thought I should share it publicly, easier for me to show
it to the next interviewer. The exact question was:&lt;/p></description><content>&lt;p>I was asked about this from my latest job application. Didn&amp;rsquo;t realize it&amp;rsquo;s going
to be this long so I thought I should share it publicly, easier for me to show
it to the next interviewer. The exact question was:&lt;/p>
&lt;blockquote>
&lt;p>Describe a recent technical solution or achievement that you are proud of.
Anything goes, from a tiny one hour ticket to a large system, we are just
interested in how you think.&lt;/p>
&lt;/blockquote>
&lt;p>The answer:&lt;/p>
&lt;p>It&amp;rsquo;s just order updating, how complex can it be? I realized I was wrong about
the complexity when I started my investigation. The complexity comes from the
two-step payment system that we&amp;rsquo;re going to implement to make sure the whole
order editing work smoothly. It was actually my first time hearing the two-step
payment words.&lt;/p>
&lt;p>In case you didn&amp;rsquo;t know: A two-step payment system is where you hold a certain
amount of money on someone&amp;rsquo;s credit card. Depending on the requirement, you&amp;rsquo;ll
charge the credit card later. We&amp;rsquo;re using Stripe for our payment system.&lt;/p>
&lt;p>A little bit of background: We don&amp;rsquo;t want to charge the credit card until the
cut-off date of the food delivery, which will then allow the customer to change
their order online without contacting us. So, a customer can keep on changing
the menu (which will affect the price) as much as he wanted without us having to
deal with the credit card refund and charge manually.&lt;/p>
&lt;p>The simplest workflow would be:&lt;/p>
&lt;ul>
&lt;li>Customer checkout from our websites with a date far in the future&lt;/li>
&lt;li>We&amp;rsquo;ll queue the card authorization 7 days before the cut off date&lt;/li>
&lt;li>Customer didn&amp;rsquo;t make any changes&lt;/li>
&lt;li>When the time comes, we authorized the amount, queue another job for the card capture process&lt;/li>
&lt;li>On the day of the cut off date, we&amp;rsquo;ll capture the amount automatically&lt;/li>
&lt;li>No order update from the web will be allowed at this point. They need to contact our customer support for this&lt;/li>
&lt;/ul>
&lt;p>The complexity keeps on compounding as you need to think about these scenarios:&lt;/p>
&lt;ul>
&lt;li>During the checkout we need to know whether we should authorize, capture, or
process the card immediately (one-step payment).&lt;/li>
&lt;li>The biggest one would be the editing part. We need to think what&amp;rsquo;s the current
state of the order and what action that was made. Is the order in the
authorized state? Capture state? When is the cut off date? Do we need to
refund everything? Do we need to do a partial refund? Do we need to refund and
charge a new amount?&lt;/li>
&lt;/ul>
&lt;p>So, I was given this task alone (we don&amp;rsquo;t have many devs last time). There were
too many things that need to be done, so I had to break it up by phases:&lt;/p>
&lt;ul>
&lt;li>Update existing checkout to support two-step payment system (this is when the
order was created)&lt;/li>
&lt;li>I need to update/add the code to handle cancel, refund, authorize and capture
the card. Each action has its own complexity, but that&amp;rsquo;s the high overview.&lt;/li>
&lt;li>Alter the database to support the new payment state&lt;/li>
&lt;li>Figure out the best time to capture the payment (e.g: cut off date - weekend).
I also need to give some buffer for the customer support to handle if there&amp;rsquo;s
an error during any of the processes above.&lt;/li>
&lt;/ul>
&lt;p>At the end of the project, I got helps from my awesome team for things like
mailers and other kinds of updates. So, I still need to work on the core parts.
I don&amp;rsquo;t think I can meet the deadline without those helps lol.&lt;/p>
&lt;p>I&amp;rsquo;d love to tell you more about the whole process, but it was pretty long. But
you can see the branch conditions that I&amp;rsquo;ve drawn here:&lt;/p>
&lt;p>&lt;img src="https://amree.github.io/images/posts/2020-05-09-two-step-payment.jpg" alt="diagram">&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">P = Pending Authorization
A = Authorized
C = Capture
R = Refund
H = Amount higher
L = Amount lower
&lt;/code>&lt;/pre>&lt;/div>&lt;p>But the biggest thing I learned with this project is that visualization will
help a lot. It doesn&amp;rsquo;t have to be in a standard format like when you study in
the university. Just draw however you want as long it can help you see the
problem and possible blockers.&lt;/p>
&lt;p>In terms of the code itself, I had to dive into React and Redux to implement the
whole update (we have complex menu selections). Of course, testing is very
important. With lots of new and updated code, I need to make sure none were
broken every time I added/updated new ones. At first, I mocked a lot of API
requests, but it doesn&amp;rsquo;t feel safe, so I used VCR library to record the
interactions and the result feels more accurate and safe. For the front end
part, I used Capybara/Chrome for the feature tests.&lt;/p>
&lt;p>Together with a feature flag in place, I can safely deploy the changes every day
without having to do one big rollout. In terms of the backend code, I used a lot
of service objects to keep the classes small. It&amp;rsquo;s also easier to read and find,
e.g: ChargeProcessor, AuthorizeProcessor, etc. Everything was also namespaced to
ensure I don&amp;rsquo;t pollute the main service directory.&lt;/p>
&lt;p>With this feature implemented, we improved further with other features as well
such as the ability to save and delete credit cards. The checkout is also easier
as the customer can just select from the previous credit card. The support
couldn&amp;rsquo;t be happier as well as they don&amp;rsquo;t have to handle manual order updates.&lt;/p>
&lt;p>I think I better stop here lol&lt;/p></content></item><item><title>Rails 6 with Bootstrap (Webpacker for JS, Asset Pipeline for CSS)</title><link>https://amree.github.io/2020/02/02/rails-6-with-bootstrap-webpacker-for-js-asset-pipeline-for-css/</link><pubDate>Sun, 02 Feb 2020 00:00:00 +0000</pubDate><guid>https://amree.github.io/2020/02/02/rails-6-with-bootstrap-webpacker-for-js-asset-pipeline-for-css/</guid><description>&lt;p>I haven&amp;rsquo;t really worked on Rails for a while so I decided to take a sneak peek
on what&amp;rsquo;s going in Ruby on Rails land.&lt;/p>
&lt;p>The first thing I want to try is to integrate Rails with Bootstrap. It seems
like a lot of tutorials are focusing on how to use webpack for CSS and JS.&lt;/p></description><content>&lt;p>I haven&amp;rsquo;t really worked on Rails for a while so I decided to take a sneak peek
on what&amp;rsquo;s going in Ruby on Rails land.&lt;/p>
&lt;p>The first thing I want to try is to integrate Rails with Bootstrap. It seems
like a lot of tutorials are focusing on how to use webpack for CSS and JS.&lt;/p>
&lt;p>But for this article, I&amp;rsquo;m going to try Bootstrap&amp;rsquo;s integration with Rails with
the asset pipeline for the CSS and webpack for the JavaScript. A snippet from
webpacker&amp;rsquo;s README:&lt;/p>
&lt;blockquote>
&lt;p>Webpacker makes it easy to use the JavaScript pre-processor and bundler
webpack 4.x.x+ to manage application-like JavaScript in Rails. It coexists with
the asset pipeline, as the primary purpose for webpack is app-like JavaScript,
not images, CSS, or even JavaScript Sprinkles (that all continues to live in
app/assets).&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>However, it is possible to use Webpacker for CSS, images and fonts assets as
well, in which case you may not even need the asset pipeline. This is mostly
relevant when exclusively using component-based JavaScript frameworks.&lt;/p>
&lt;/blockquote>
&lt;p>Let&amp;rsquo;s start by creating new rails app first:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rails new random_app
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure we can see the welcome page first&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rails db:prepare
rails s
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open &lt;a href="https://localhost:3000">https://localhost:3000&lt;/a> and verify that you can
see the Rails famous welcome page.&lt;/p>
&lt;p>Add bootstrap package and its dependencies:&lt;/p>
&lt;pre>&lt;code>yarn add bootstrap jquery popper.js
&lt;/code>&lt;/pre>&lt;p>From the &lt;a href="https://getbootstrap.com/docs/4.4/getting-started/javascript/#dependencies">Bootstrap&amp;rsquo;s documentation&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>Also note that all plugins depend on jQuery (this means jQuery must be
included before the plugin files). Consult our package.json to see which
versions of jQuery are supported. Our dropdowns, popovers and tooltips also
depend on Popper.js.&lt;/p>
&lt;/blockquote>
&lt;p>Alright, we have all of the required packages installed so the next step would
be loading them.&lt;/p>
&lt;p>But before we do that, we need to have a page that will confirm all the setup is
correct once we&amp;rsquo;ve done with all of these.&lt;/p>
&lt;p>Create a controller with a view:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rails g controller Home index
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s put some Bootstrap&amp;rsquo;s related code in there so that we can test the
JavaScript and CSS is actually working.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html"># app/views/home/index.html.erb
&amp;lt;&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;Home#index&amp;lt;/&lt;span style="color:#f92672">h1&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;Find me in app/views/home/index.html.erb&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">button&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;button&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;btn btn-secondary&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">data-toggle&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;tooltip&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">data-placement&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;top&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">title&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Tooltip on top&amp;#34;&lt;/span>&amp;gt;
Tooltip on top
&amp;lt;/&lt;span style="color:#f92672">button&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It doesn&amp;rsquo;t work right now but making it works will be our target.&lt;/p>
&lt;p>Next, we&amp;rsquo;ll take a look at &lt;code>app/assets/stylesheets/application.css&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-css" data-lang="css">&lt;span style="color:#75715e">/*
&lt;/span>&lt;span style="color:#75715e"> * ...
&lt;/span>&lt;span style="color:#75715e"> *
&lt;/span>&lt;span style="color:#75715e"> *= require_tree .
&lt;/span>&lt;span style="color:#75715e"> *= require_self
&lt;/span>&lt;span style="color:#75715e"> */&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>require_tree&lt;/code> means it&amp;rsquo;ll load everything insider &lt;code>app/assets/stylesheets&lt;/code> and
it sub directories as well. &lt;code>require_self&lt;/code> will load anything we defined in
&lt;code>application.scss&lt;/code> at the bottom of the output file (as it&amp;rsquo;s declared in the
last line).&lt;/p>
&lt;p>From &lt;a href="https://guides.rubyonrails.org/asset_pipeline.html#manifest-files-and-directives">Ruby on Rails Guides&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>In this example, require_self is used. This puts the CSS contained within the
file (if any) at the precise location of the require_self call.&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>If you want to use multiple Sass files, you should generally use the Sass
@import rule instead of these Sprockets directives. When using Sprockets
directives, Sass files exist within their own scope, making variables or mixins
only available within the document they were defined in.&lt;/p>
&lt;/blockquote>
&lt;p>Depending on what you (or your team) are comfortable with, but I prefer to
explicitly specify my files.&lt;/p>
&lt;p>So, I&amp;rsquo;ll change &lt;code>application.css&lt;/code> to a SCSS file so that I can use &lt;code>@import&lt;/code>
directive:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mv app/assets/stylesheets/application.css app/assets/stylesheets/application.scss
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the content to:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap&amp;#39;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a new file at &lt;code>app/assets/stylesheets/bootstrap.scss&lt;/code> and update the file
with:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/bootstrap&amp;#39;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reload our &lt;code>Home#index&lt;/code> and you&amp;rsquo;ll see that Bootstrap&amp;rsquo;s styles have been loaded
correctly. However, the tooltip is not working yet. That&amp;rsquo;s the JavaScript part.&lt;/p>
&lt;p>Optional: You might be wondering why I didn&amp;rsquo;t just do &lt;code>@import&lt;/code> in the
&lt;code>application.scss&lt;/code> itself. Well, the main reason is that I want to customize
which part of Bootstrap I want to use. This will help in terms of file size
later. But current code will still load everything, so, let&amp;rsquo;s change it to:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">&lt;span style="color:#75715e">// Required
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/functions&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/variables&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/mixins&amp;#39;&lt;/span>;
&lt;span style="color:#75715e">// Optional
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/root&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/reboot&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/type&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/images&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/code&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/grid&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/tables&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/forms&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/buttons&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/transitions&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/dropdown&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/button-group&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/input-group&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/custom-forms&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/nav&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/navbar&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/card&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/breadcrumb&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/pagination&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/badge&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/jumbotron&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/alert&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/progress&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/media&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/list-group&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/close&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/toasts&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/modal&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/tooltip&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/popover&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/carousel&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/spinners&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/utilities&amp;#39;&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#39;bootstrap/scss/print&amp;#39;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is based on what we have in the original
&lt;a href="https://github.com/twbs/bootstrap/blob/v4.4.1/scss/bootstrap.scss">bootstrap.scss&lt;/a>.
One of the downside with this approach is that you need to check if this file
changed whenever you upgrade Bootstrap as it&amp;rsquo;s like using a private method 😁&lt;/p>
&lt;p>Our Bootstrap&amp;rsquo;s stylesheet is working as expected so the next step would be
getting the JavaScript to work and for this tutorial, we&amp;rsquo;re going to focus on
the tooltip part.&lt;/p>
&lt;p>Let&amp;rsquo;s import Bootstrap&amp;rsquo;s JS files:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// app/javascript/packs/application.js
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We&amp;rsquo;ll initialize tooltip by adding these code at the end of the file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#66d9ef">function&lt;/span> () {
&lt;span style="color:#a6e22e">$&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;[data-toggle=&amp;#34;tooltip&amp;#34;]&amp;#39;&lt;/span>).&lt;span style="color:#a6e22e">tooltip&lt;/span>()
})
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In our intialization, we&amp;rsquo;re using &lt;code>$&lt;/code> for &lt;code>jQuery&lt;/code> so we need to make it
available globally. We can use these to automatically load the modules instead
of &lt;code>import&lt;/code> or &lt;code>require&lt;/code> them:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// config/webpack/environment.js
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">const&lt;/span> { &lt;span style="color:#a6e22e">environment&lt;/span> } &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;@rails/webpacker&amp;#39;&lt;/span>)
&lt;span style="color:#66d9ef">const&lt;/span> &lt;span style="color:#a6e22e">webpack&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;webpack&amp;#39;&lt;/span>)
&lt;span style="color:#a6e22e">environment&lt;/span>.&lt;span style="color:#a6e22e">plugins&lt;/span>.&lt;span style="color:#a6e22e">append&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;Provide&amp;#39;&lt;/span>, &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">webpack&lt;/span>.&lt;span style="color:#a6e22e">ProvidePlugin&lt;/span>({
&lt;span style="color:#a6e22e">$&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#e6db74">&amp;#39;jquery&amp;#39;&lt;/span>,
}))
&lt;span style="color:#a6e22e">module&lt;/span>.&lt;span style="color:#a6e22e">exports&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#a6e22e">environment&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Refresh your &lt;code>Home#index&lt;/code> and you should be able to see the tooltip when you
hover on the button.&lt;/p>
&lt;p>Optional: If you want to specify which JS component that you want to load, you
can use these steps:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// app/javascript/packs/application.js
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#a6e22e">require&lt;/span>(&lt;span style="color:#e6db74">&amp;#34;./bootstrap&amp;#34;&lt;/span>)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>and&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="color:#75715e">// app/javascript/packs/bootstrap/index.js
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/alert&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/button&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/carousel&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/collapse&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/dropdown&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/modal&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/popover&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/scrollspy&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/tab&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/toast&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap/js/src/tooltip&amp;#34;&lt;/span>
&lt;span style="color:#75715e">// Tooltip/Other components initialization here
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And for our tutorial, we just use the last line which is &lt;code>tooltip&lt;/code> and comment
out everything else. It&amp;rsquo;ll reduce the size of the final JS (not much different
though).&lt;/p>
&lt;p>💡 Tip: You can inspect your bundle size by running this command and then upload
the output to &lt;a href="https://chrisbateman.github.io/webpack-visualizer/">Webpack
Visualizer&lt;/a>&lt;/p>
&lt;pre>&lt;code>./bin/webpack --profile --json &amp;gt; webpack-stats.json
&lt;/code>&lt;/pre>&lt;p>💡 Tip: You&amp;rsquo;ll notice that your JS will only compile the new changes when you
refresh the page and that might cause some delay. If we want webpack to compile
immediately when we made some changes, we can run this command to monitor the
changes and compile them:&lt;/p>
&lt;pre>&lt;code>./bin/webpack-dev-server
&lt;/code>&lt;/pre>&lt;p>💡 Tip: You can override Bootstrap&amp;rsquo;s default value or in other word, you can
create your own theme by specifying the variable value before you import
Bootstrap&amp;rsquo;s files. So, it can be something similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-scss" data-lang="scss">$primary&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">green&lt;/span>;
$secondary&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">pink&lt;/span>;
&lt;span style="color:#66d9ef">@import&lt;/span> &lt;span style="color:#e6db74">&amp;#34;bootstrap&amp;#34;&lt;/span>;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Checkout this &lt;a href="https://github.com/twbs/bootstrap/blob/master/scss/_variables.scss">variables list&lt;/a> and
you can find more info at &lt;a href="https://getbootstrap.com/docs/4.1/getting-started/theming/#theme-colors">Bootstrap&amp;rsquo;s Documentation&lt;/a>.
There&amp;rsquo;re lots more that you can actually do.&lt;/p></content></item><item><title>Trick to Make Telegram Bot Private</title><link>https://amree.github.io/2019/12/19/trick-to-make-telegram-bot-private/</link><pubDate>Thu, 19 Dec 2019 00:00:00 +0000</pubDate><guid>https://amree.github.io/2019/12/19/trick-to-make-telegram-bot-private/</guid><description>&lt;p>Recently, I learned a trick to make my Telegram bot private to certain users.&lt;/p>
&lt;p>I tried not to create the whole CRUD thingy for the membership and after
Googling I found out about one of the API provided.&lt;/p></description><content>&lt;p>Recently, I learned a trick to make my Telegram bot private to certain users.&lt;/p>
&lt;p>I tried not to create the whole CRUD thingy for the membership and after
Googling I found out about one of the API provided.&lt;/p>
&lt;p>&lt;a href="https://core.telegram.org/bots/api#getchatmember">https://core.telegram.org/bots/api#getchatmember&lt;/a>&lt;/p>
&lt;p>This would allow us to get info of a user with a given &lt;code>chat_id&lt;/code>. It can be a
channel or a group.&lt;/p>
&lt;p>Basically your membership for your bot will be based on the group of your bot
and the allowed users are in. So, both of them need to be in the same
group/channel.&lt;/p>
&lt;p>The code would look like the screenshot.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">bot&lt;span style="color:#f92672">.&lt;/span>api&lt;span style="color:#f92672">.&lt;/span>get_chat_member(&lt;span style="color:#e6db74">chat_id&lt;/span>: &lt;span style="color:#f92672">-&lt;/span>&lt;span style="color:#ae81ff">10012345678&lt;/span>, &lt;span style="color:#e6db74">user_id&lt;/span>: message&lt;span style="color:#f92672">.&lt;/span>from_id)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>There&amp;rsquo;re a few things to note:&lt;/p>
&lt;p>&lt;strong>We need to get the channel and id of the group&lt;/strong>&lt;/p>
&lt;p>For group:&lt;/p>
&lt;p>Invite &lt;a href="https://t.me/RawDataBot">https://t.me/RawDataBot&lt;/a> and on the first entry, it&amp;rsquo;ll output some JSON.
You can get the group&amp;rsquo;s ID from &lt;code>message.chat.id&lt;/code>.&lt;/p>
&lt;p>It should look like &lt;code>-10012345678&lt;/code>. Remove the bot after that. But if you don&amp;rsquo;t
trust the bot, you probably need to cook up some new code to get the group ID.&lt;/p>
&lt;p>For channel:&lt;/p>
&lt;p>Channel is a little bit different, you can use one of the methods mentioned
here:&lt;/p>
&lt;p>&lt;a href="https://stackoverflow.com/questions/33858927/how-to-obtain-the-chat-id-of-a-private-telegram-channel/56546442#56546442">https://stackoverflow.com/questions/33858927/how-to-obtain-the-chat-id-of-a-private-telegram-channel/56546442#56546442&lt;/a>&lt;/p>
&lt;p>&lt;strong>Output&lt;/strong>&lt;/p>
&lt;p>So, what&amp;rsquo;s the output can we expect? Well for Ruby, we&amp;rsquo;re expecting hash from
the output and &lt;code>var[&amp;quot;result&amp;quot;][&amp;quot;status&amp;quot;]&lt;/code> will give you the status of the user.&lt;/p>
&lt;p>It can be many things, but if it&amp;rsquo;s &lt;code>left&lt;/code> then the user is not a member of the
group and that&amp;rsquo;s what we want to know.&lt;/p>
&lt;p>&lt;strong>Add the bot to a group/channel&lt;/strong>&lt;/p>
&lt;p>This also means you need to add the bot that&amp;rsquo;s executing the code to be in the
same group as those users that you want to give access to.&lt;/p>
&lt;p>So, any users who are in the same group/channel will be allowed to chat with the
bot based on the previous output.&lt;/p>
&lt;p>Again, a channel is a little bit different, you need to add your bot as the
admin, compared to a group that can be added as a normal user.&lt;/p>
&lt;p>&lt;strong>Exception&lt;/strong>&lt;/p>
&lt;p>Another note, the code will raise an exception if the given &lt;code>chat_id&lt;/code> doesn&amp;rsquo;t
exist.&lt;/p>
&lt;p>As a summary, with this trick, you don&amp;rsquo;t have to build the whole CRUD and can
reuse the group/channel that you already have (assuming you have one).&lt;/p>
&lt;p>That&amp;rsquo;s it, folks, thanks for reading&lt;/p></content></item><item><title>How Bcrypt Compares Password</title><link>https://amree.github.io/2019/01/19/how-bcrypt-compares-password/</link><pubDate>Sat, 19 Jan 2019 00:00:00 +0000</pubDate><guid>https://amree.github.io/2019/01/19/how-bcrypt-compares-password/</guid><description>&lt;p>I&amp;rsquo;ve always wondered about this.&lt;/p></description><content>&lt;p>I&amp;rsquo;ve always wondered about this.&lt;/p>
&lt;p>Creating password in database:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#f92672">&amp;gt;&lt;/span> password &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;secret&amp;#39;&lt;/span>
&lt;span style="color:#f92672">&amp;gt;&lt;/span> encrypted_password_in_database &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">BCrypt&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Password&lt;/span>&lt;span style="color:#f92672">.&lt;/span>create(password)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Comparing password:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#f92672">&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">BCrypt&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Password&lt;/span>&lt;span style="color:#f92672">.&lt;/span>new(encrypted_password_in_database) &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#e6db74">&amp;#39;secret&amp;#39;&lt;/span>
&lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#66d9ef">true&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>==&lt;/code> is actually a method defined in &lt;a href="https://www.rubydoc.info/github/codahale/bcrypt-ruby/BCrypt%2FPassword:==">bcrypt-ruby&lt;/a>&lt;/p>
&lt;p>Devise is comparing it using something like constant-time secure comparison but
bcrypt-ruby project decided not to go with that. Read more about it here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/codahale/bcrypt-ruby/issues/42">https://github.com/codahale/bcrypt-ruby/issues/42&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/codahale/bcrypt-ruby/pull/43">https://github.com/codahale/bcrypt-ruby/pull/43&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/codahale/bcrypt-ruby/pull/119">https://github.com/codahale/bcrypt-ruby/pull/119&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Manage Multiple App URL in Local Development</title><link>https://amree.github.io/2019/01/14/manage-multiple-app-url-in-local-development/</link><pubDate>Mon, 14 Jan 2019 00:00:00 +0000</pubDate><guid>https://amree.github.io/2019/01/14/manage-multiple-app-url-in-local-development/</guid><description>&lt;p>These days we might have multiple local applications that are running on
different ports (e.g: &lt;code>http://localhost:3000, http://localhost:3001&lt;/code> and so on).
This is pretty troublesome as we have to remember which application is running
on which port.&lt;/p></description><content>&lt;p>These days we might have multiple local applications that are running on
different ports (e.g: &lt;code>http://localhost:3000, http://localhost:3001&lt;/code> and so on).
This is pretty troublesome as we have to remember which application is running
on which port.&lt;/p>
&lt;p>&lt;code>haproxy&lt;/code> can redirect a URL to a certain host with different port (this is
impossible with &lt;code>hosts&lt;/code>). Here&amp;rsquo;s how we can do it in Mac OS:&lt;/p>
&lt;p>Install &lt;code>haproxy&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">brew install haproxy
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a new file at &lt;code>/usr/local/etc/haproxy.cfg&lt;/code> and put these contents
(customize as you wish):&lt;/p>
&lt;pre>&lt;code>global
maxconn 4096
daemon
defaults
log global
mode http
timeout connect 5000ms
timeout client 50000ms
timeout server 50000ms
frontend web_gateway
bind *:80
# https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#7.1
acl is_web hdr_beg(host) myapp.local
acl is_api hdr(host) -i api.myapp.local
acl is_admin hdr(host) -i admin.myapp.local
use_backend web if is_web
use_backend api if is_api
use_backend admin if is_admin
backend web
# https://cbonte.github.io/haproxy-dconv/1.7/configuration.html#server
server web 127.0.0.1:3000
backend api
server api 127.0.0.1:3001
backend admin
server admin 127.0.0.1:3002
&lt;/code>&lt;/pre>&lt;p>Make sure you put the hosts declared before in &lt;code>/etc/hosts&lt;/code>:&lt;/p>
&lt;pre>&lt;code>127.0.0.1 localhost
127.0.0.1 myapp.local.sg # We can use different domain here
127.0.0.1 myapp.local.hk
127.0.0.1 admin.myapp.local
127.0.0.1 api.myapp.local
&lt;/code>&lt;/pre>&lt;p>Run this command to ensure &lt;code>haproxy&lt;/code> will always be running&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">brew services start haproxy
&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>About Proc, Lambda and Block</title><link>https://amree.github.io/2017/04/08/about-proc-lambda-and-block/</link><pubDate>Sat, 08 Apr 2017 00:00:00 +0000</pubDate><guid>https://amree.github.io/2017/04/08/about-proc-lambda-and-block/</guid><description>&lt;p>I keep on searching for this topic, so I guess it&amp;rsquo;s time I put it on my blog.&lt;/p></description><content>&lt;p>I keep on searching for this topic, so I guess it&amp;rsquo;s time I put it on my blog.&lt;/p>
&lt;p>This is an example of a &lt;code>proc&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">the_proc &lt;span style="color:#f92672">=&lt;/span> proc { puts &lt;span style="color:#e6db74">&amp;#34;I&amp;#39;m the proc&amp;#34;&lt;/span> }
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To execute &lt;code>the_proc&lt;/code>, I need to explicityly to use:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">the_proc&lt;span style="color:#f92672">.&lt;/span>call &lt;span style="color:#75715e"># or&lt;/span>
the_proc&lt;span style="color:#f92672">.&lt;/span>() &lt;span style="color:#75715e"># introduced in Ruby 1.9 or&lt;/span>
the_proc&lt;span style="color:#f92672">[]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can create a lambda using this syntax:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">the_lambda &lt;span style="color:#f92672">=&lt;/span> lambda { puts &lt;span style="color:#e6db74">&amp;#34;I&amp;#39;m the lambda&amp;#34;&lt;/span> }
the_lambda &lt;span style="color:#f92672">=&lt;/span> lambda { &lt;span style="color:#f92672">|&lt;/span>s&lt;span style="color:#f92672">|&lt;/span> puts &lt;span style="color:#e6db74">&amp;#34;I&amp;#39;m the lambda&amp;#34;&lt;/span> }
the_lambda &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> { puts &lt;span style="color:#e6db74">&amp;#34;I&amp;#39;m the lambda&amp;#34;&lt;/span> } &lt;span style="color:#75715e"># introduced in Ruby 1.9&lt;/span>
the_lambda &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> (x, y) { puts &lt;span style="color:#e6db74">&amp;#34;I&amp;#39;m the lambda&amp;#34;&lt;/span> }
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Just like with &lt;code>proc&lt;/code> you can execute it using one of these three methods:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">the_lambda&lt;span style="color:#f92672">.&lt;/span>call &lt;span style="color:#75715e"># or&lt;/span>
the_lambda&lt;span style="color:#f92672">.&lt;/span>() &lt;span style="color:#75715e"># or&lt;/span>
the_lambda&lt;span style="color:#f92672">[]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Differences between &lt;code>lambda&lt;/code> and &lt;code>proc&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>lambda&lt;/code> will raise an error if argument wasn&amp;rsquo;t provided during the call (if
there&amp;rsquo;s any argument defined in the declaration). &lt;code>proc&lt;/code> will just silently
set it to nil for this situation.&lt;/li>
&lt;li>For &lt;code>proc&lt;/code>, if there&amp;rsquo;s a &lt;code>return&lt;/code> defined, it&amp;rsquo;ll return from the enclosing
method. But for &lt;code>lambda&lt;/code>, it will just return from the &lt;code>lambda&lt;/code> itself.&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">the_proc &lt;span style="color:#f92672">=&lt;/span> proc { puts &lt;span style="color:#e6db74">&amp;#34;proc&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">return&lt;/span> }
the_lambda &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">-&amp;gt;&lt;/span> { puts &lt;span style="color:#e6db74">&amp;#34;lambda&amp;#34;&lt;/span>; &lt;span style="color:#66d9ef">return&lt;/span> }
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">test&lt;/span>(arg)
puts &lt;span style="color:#e6db74">&amp;#34;first&amp;#34;&lt;/span>
arg&lt;span style="color:#f92672">.&lt;/span>call
puts &lt;span style="color:#e6db74">&amp;#34;second&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
test(the_proc)
&lt;span style="color:#75715e"># first&lt;/span>
&lt;span style="color:#75715e"># proc&lt;/span>
&lt;span style="color:#75715e"># LocalJumpError: unexpected return&lt;/span>
test(the_lambda)
&lt;span style="color:#75715e"># first&lt;/span>
&lt;span style="color:#75715e"># lambda&lt;/span>
&lt;span style="color:#75715e"># second&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>So, what is block in Ruby? Using the above example of &lt;code>proc&lt;/code>, a block is
actually the piece of code that sits between those two curly braces, in this
case that would be: &lt;code>puts &amp;quot;proc&amp;quot;; return&lt;/code>.&lt;/p>
&lt;p>The only way to get access to the block is through the proc or lambda as block
is not an object.&lt;/p>
&lt;p>A basic example of block usage would be:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">output&lt;/span>
puts &lt;span style="color:#e6db74">&amp;#34;start&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">yield&lt;/span>
puts &lt;span style="color:#e6db74">&amp;#34;end&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
output { puts &lt;span style="color:#e6db74">&amp;#34;amree&amp;#34;&lt;/span> }
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see from the example, we actually don&amp;rsquo;t have direct access to the
block. In order to get access to that block, we need to wrap it in &lt;code>proc&lt;/code> and
this how you do it:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">output&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>block)
&lt;span style="color:#75715e"># ...&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use &lt;code>block.call&lt;/code> or just use the &lt;code>yield&lt;/code> keyword to execute the block.
The biggest benefit of this approach is that we can control in which context
it&amp;rsquo;s being executed. This is very useful in building DSL.&lt;/p>
&lt;p>For e.g, let&amp;rsquo;s take a look at a simple DSL (that looks like Rails router):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Router&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">initialize&lt;/span>
@routes &lt;span style="color:#f92672">=&lt;/span> {}
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">match&lt;/span>(route)
@routes&lt;span style="color:#f92672">.&lt;/span>update route
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">routes&lt;/span>(&lt;span style="color:#f92672">&amp;amp;&lt;/span>block) &lt;span style="color:#75715e"># block will be converted into a Proc&lt;/span>
&lt;span style="color:#75715e"># block.call&lt;/span>
&lt;span style="color:#75715e"># This will be called in the root context which will throw an error as&lt;/span>
&lt;span style="color:#75715e"># routes method is defined in Router, not outside.&lt;/span>
&lt;span style="color:#75715e"># instance_eval { @routes }&lt;/span>
&lt;span style="color:#75715e"># It is expecting a block&lt;/span>
instance_eval(&lt;span style="color:#f92672">&amp;amp;&lt;/span>block)
&lt;span style="color:#75715e"># Will convert it to a block when it&amp;#39;s being used on method call&lt;/span>
puts @routes
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">Router&lt;/span>&lt;span style="color:#f92672">.&lt;/span>new&lt;span style="color:#f92672">.&lt;/span>routes &lt;span style="color:#66d9ef">do&lt;/span>
match &lt;span style="color:#e6db74">&amp;#34;/users&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;users#index&amp;#34;&lt;/span>
&lt;span style="color:#75715e"># Ruby will automatically convert it to hash because it&amp;#39;s the last parameter.&lt;/span>
&lt;span style="color:#75715e"># Basically, it&amp;#39;s the same as:&lt;/span>
&lt;span style="color:#75715e"># match({ &amp;#34;/users&amp;#34; =&amp;gt; &amp;#34;users#index&amp;#34; })&lt;/span>
match &lt;span style="color:#e6db74">&amp;#34;/login&amp;#34;&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;sessions#new&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Notes on Demystifying Contributing to Rails</title><link>https://amree.github.io/2015/05/27/notes-on-demystifying-contributing-to-rails/</link><pubDate>Wed, 27 May 2015 00:00:00 +0000</pubDate><guid>https://amree.github.io/2015/05/27/notes-on-demystifying-contributing-to-rails/</guid><description>&lt;p>This is my notes for presentation by &lt;a href="https://twitter.com/eileencodes">Eileen
Uchitelle&lt;/a> from RailsConf 2015. You can find
the video at &lt;a href="http://confreaks.tv/videos/railsconf2015-breaking-down-the-barrier-demystifying-contributing-to-rails">Confreaks&lt;/a>. The slide can be found at &lt;a href="https://speakerdeck.com/eileencodes/breaking-down-the-barrier-demystifying-contributing-to-rails">Speaker Deck&lt;/a>.&lt;/p></description><content>&lt;p>This is my notes for presentation by &lt;a href="https://twitter.com/eileencodes">Eileen
Uchitelle&lt;/a> from RailsConf 2015. You can find
the video at &lt;a href="http://confreaks.tv/videos/railsconf2015-breaking-down-the-barrier-demystifying-contributing-to-rails">Confreaks&lt;/a>. The slide can be found at &lt;a href="https://speakerdeck.com/eileencodes/breaking-down-the-barrier-demystifying-contributing-to-rails">Speaker Deck&lt;/a>.&lt;/p>
&lt;p>This presentation is more about how to get yourself ready to contribute to Rails
at GitHub.&lt;/p>
&lt;p>These are the required environments:&lt;/p>
&lt;ul>
&lt;li>Ruby version manager (rbenv, rvm, chruby)&lt;/li>
&lt;li>Ruby 2.2.2 (Rails 5 is using 2.2.2)&lt;/li>
&lt;li>Databases for Active Record (MySQL, PostgreSQL, SQLite3)&lt;/li>
&lt;li>Git and GitHub account&lt;/li>
&lt;/ul>
&lt;p>You don&amp;rsquo;t need MySQL and PostgreSQL since SQLite3 will be used by default. But
if you want to test certain feature spesific to the database, you need to
install them. If you do need them, you can setup the necessary databases and
users using the following guide (taken from Eileen&amp;rsquo;s blog[1]).&lt;/p>
&lt;h3 id="mysql">MySQL&lt;/h3>
&lt;p>Create the user:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">mysql&amp;gt; CREATE USER &amp;#39;rails&amp;#39;@&amp;#39;localhost&amp;#39;;
mysql&amp;gt; GRANT ALL PRIVILEGES ON activerecord_unittest.*
to &amp;#39;rails&amp;#39;@&amp;#39;localhost&amp;#39;;
mysql&amp;gt; GRANT ALL PRIVILEGES ON activerecord_unittest2.*
to &amp;#39;rails&amp;#39;@&amp;#39;localhost&amp;#39;;
mysql&amp;gt; GRANT ALL PRIVILEGES ON inexistent_activerecord_unittest.*
to &amp;#39;rails&amp;#39;@&amp;#39;localhost&amp;#39;;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the database:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd activerecord
bundle exec rake db:mysql:build
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="postgresql">PostgreSQL&lt;/h3>
&lt;p>For Linux:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo -u postgres createuser --superuser $USER
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For OS X:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">createuser --superuser $USER
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the database:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd activerecord
bundle exec rake db:postgresql:build
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To start over:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd activerecord
bundle exec rake db:drop
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="running-the-tests">Running the tests&lt;/h2>
&lt;p>You shouldn&amp;rsquo;t be running the tests from Rails main source directory. Instead,
you should go to the individual directory and run the command from there. A full
suite of Rails test might take a long time. For an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd actionpack
rake test
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Active Record, you can run the test by specifying the adapter:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd activerecord
rake test:sqlite3
rake test:mysql2
rake test:mysql
rake test:postgresql
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run a test file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ruby -Ilib:test path/to/test_file.rb
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run a single test:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ruby -Ilib:test path/to/test_file.rb -n test_name_of_test
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Active Record, SQLite3 will be used by default. So, if you want to change
the adapter (for e.g MySQL), use this command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ARCONN&lt;span style="color:#f92672">=&lt;/span>mysql2 ruby -Ilib:test path/to/test_file.rb -n test_name_of_test
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run single test will all adapters:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bundle exec rake TEST&lt;span style="color:#f92672">=&lt;/span>path/to/test_file.rb -n test_name
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="opening-issue">Opening issue&lt;/h2>
&lt;p>When opening an issue, make sure include a test script too (which can be found &lt;a href="http://github.com/rails/rails/blob/master/guides/bug_report_templates">here&lt;/a>).&lt;/p>
&lt;p>If you&amp;rsquo;re sending a performance related pull request, use Benchmark/IPS. For an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#75715e"># Source: github.com/eileencodes/railsconf_scripts.git&lt;/span>
&lt;span style="color:#75715e"># Run it with: bundle exec ruby benchmark_ips_example.rb&lt;/span>
require &lt;span style="color:#e6db74">&amp;#39;benchmark/ips&amp;#39;&lt;/span>
&lt;span style="color:#66d9ef">ARRAY&lt;/span> &lt;span style="color:#f92672">=&lt;/span> (&lt;span style="color:#ae81ff">1&lt;/span>&lt;span style="color:#f92672">..&lt;/span>&lt;span style="color:#ae81ff">100&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>to_a
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">slow&lt;/span>
&lt;span style="color:#66d9ef">ARRAY&lt;/span>&lt;span style="color:#f92672">.&lt;/span>shuffle&lt;span style="color:#f92672">.&lt;/span>first
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">fast&lt;/span>
&lt;span style="color:#66d9ef">ARRAY&lt;/span>&lt;span style="color:#f92672">.&lt;/span>sample
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">Benchmark&lt;/span>&lt;span style="color:#f92672">.&lt;/span>ips &lt;span style="color:#66d9ef">do&lt;/span> &lt;span style="color:#f92672">|&lt;/span>x&lt;span style="color:#f92672">|&lt;/span>
x&lt;span style="color:#f92672">.&lt;/span>report(&lt;span style="color:#e6db74">&amp;#39;slow&amp;#39;&lt;/span>) { slow }
x&lt;span style="color:#f92672">.&lt;/span>report(&lt;span style="color:#e6db74">&amp;#39;fast&amp;#39;&lt;/span>) { fast }
x&lt;span style="color:#f92672">.&lt;/span>compare!
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="traversing-unfamiliar-code">Traversing unfamiliar code&lt;/h2>
&lt;h3 id="use-source-location">Use Source Location&lt;/h3>
&lt;p>Defined in &lt;code>actionview/lib/action_view/template/error.rb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">source_location&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> line_number
&lt;span style="color:#e6db74">&amp;#34;on line #&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>line_number&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74"> of &amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">else&lt;/span>
&lt;span style="color:#e6db74">&amp;#39;in &amp;#39;&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span> &lt;span style="color:#f92672">+&lt;/span> file_name
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For an example, if we want to trace the &lt;code>delete_all&lt;/code> method:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">BugTest&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#66d9ef">Minitest&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Test&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">test_delete_all&lt;/span>
post &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">Post&lt;/span>&lt;span style="color:#f92672">.&lt;/span>create!(&lt;span style="color:#e6db74">title&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Post title&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">content&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;Lots of content&amp;#34;&lt;/span>)
comment &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">Comment&lt;/span>&lt;span style="color:#f92672">.&lt;/span>create!(&lt;span style="color:#e6db74">content&lt;/span>: &lt;span style="color:#e6db74">&amp;#34;I am a comment&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">post_id&lt;/span>: post&lt;span style="color:#f92672">.&lt;/span>id)
assert &lt;span style="color:#ae81ff">1&lt;/span>, post&lt;span style="color:#f92672">.&lt;/span>comments&lt;span style="color:#f92672">.&lt;/span>count
post&lt;span style="color:#f92672">.&lt;/span>comments&lt;span style="color:#f92672">.&lt;/span>delete_all
assert &lt;span style="color:#ae81ff">0&lt;/span>, post&lt;span style="color:#f92672">.&lt;/span>comments&lt;span style="color:#f92672">.&lt;/span>count
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace that line of codes with:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">puts post&lt;span style="color:#f92672">.&lt;/span>comments&lt;span style="color:#f92672">.&lt;/span>method(&lt;span style="color:#e6db74">:delete_all&lt;/span>)&lt;span style="color:#f92672">.&lt;/span>source_location
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example of the output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(0.0ms) begin transaction
SQL (0.1ms) INSERT INTO &amp;#34;comments&amp;#34; (&amp;#34;content&amp;#34;, &amp;#34;post_id&amp;#34;) VALUES (?, ?) [[&amp;#34;content&amp;#34;, &amp;#34;I am a comment&amp;#34;], [&amp;#34;post_id&amp;#34;, 1]]
(0.0ms) commit transaction
(0.1ms) SELECT COUNT(*) FROM &amp;#34;comments&amp;#34; WHERE &amp;#34;comments&amp;#34;.&amp;#34;post_id&amp;#34; = ? [[&amp;#34;post_id&amp;#34;, 1]]
../activerecord/lib/active_record/associations/ collection_proxy.rb 442
(0.0ms) SELECT COUNT(*) FROM &amp;#34;comments&amp;#34; WHERE &amp;#34;comments&amp;#34;.&amp;#34;post_id&amp;#34; = ? [[&amp;#34;post_id&amp;#34;, 1]]
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-ctags">Use Ctags&lt;/h3>
&lt;p>You can continue using source location, but you may want to use ctags:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd path/to/rails/
ctags -R -f .git/tags .
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Config for your &lt;code>.vimrc&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">map &amp;lt;Leader&amp;gt;rt :!ctags --tag-relative --extra=+f -Rf .git/tags --exclude=.git,pkg —languages=- javascript,sql&amp;lt;CR&amp;gt;&amp;lt;CR&amp;gt;
# Based on the previous shell command
set tags+=.git/tags
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To find method definition with vim, use &lt;code>CTRL + ]&lt;/code> when the cursor is on that
particular method. Use &lt;code>:ts&lt;/code> to find similar methods in other files.&lt;/p>
&lt;h3 id="use-caller">Use Caller&lt;/h3>
&lt;p>To find out who&amp;rsquo;s calling a method, we can use a Ruby method defined by Kernel
module that will output the stack trace at the point the method is executed and
it won&amp;rsquo;t stop your code. For an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Project&lt;/span> &lt;span style="color:#f92672">&amp;lt;&lt;/span> &lt;span style="color:#66d9ef">ActiveRecord&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Base&lt;/span>
after_create &lt;span style="color:#e6db74">:call_me&lt;/span>
&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">call_me&lt;/span>
puts caller
puts &lt;span style="color:#e6db74">&amp;#34;======== i am a callback ========&amp;#34;&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Output example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">.../activesupport/lib/active_support/callbacks.rb:428:in &lt;span style="color:#e6db74">`&lt;/span>block in make_lambda&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activesupport/lib/active_support/callbacks.rb:229:in `call&amp;#39;&lt;/span>
.../activesupport/lib/active_support/callbacks.rb:229:in &lt;span style="color:#e6db74">`&lt;/span>block in halting_and_conditional&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activesupport/lib/active_support/callbacks.rb:502:in `call&amp;#39;&lt;/span>
.../activesupport/lib/active_support/callbacks.rb:502:in &lt;span style="color:#e6db74">`&lt;/span>block in call&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activesupport/lib/active_support/callbacks.rb:502:in `each&amp;#39;&lt;/span>
.../activesupport/lib/active_support/callbacks.rb:502:in &lt;span style="color:#e6db74">`&lt;/span>call&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activesupport/lib/active_support/callbacks.rb:90:in `run_callbacks&amp;#39;&lt;/span>
.../activerecord/lib/active_record/callbacks.rb:305:in &lt;span style="color:#e6db74">`&lt;/span>_create_record&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activerecord/lib/active_record/timestamp.rb:57:in `_create_record&amp;#39;&lt;/span>
.../activerecord/lib/active_record/persistence.rb:506:in &lt;span style="color:#e6db74">`&lt;/span>create_or_update&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activerecord/lib/active_record/callbacks.rb:301:in `block in create_or_update&amp;#39;&lt;/span>
.../activesupport/lib/active_support/callbacks.rb:86:in &lt;span style="color:#e6db74">`&lt;/span>run_callbacks&lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">.../activerecord/lib/active_record/callbacks.rb:301:in `create_or_update&amp;#39;&lt;/span>
.../activerecord/lib/active_record/persistence.rb:151:in &lt;span style="color:#e6db74">`&lt;/span>save!&lt;span style="color:#960050;background-color:#1e0010">&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Notice the first line of the output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">.../activesupport/lib/active_support/callbacks.rb:428:in `block in make_lambda&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="use-tracepoint">Use Tracepoint&lt;/h3>
&lt;p>Above methods won&amp;rsquo;t work with dynamic method. For this purpose, we can use &lt;a href="http://ruby-doc.org/core-2.0.0/TracePoint.html">Tracepoint&lt;/a>. For an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">&lt;span style="color:#66d9ef">def&lt;/span> &lt;span style="color:#a6e22e">test_trace_point&lt;/span>
user &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">User&lt;/span>&lt;span style="color:#f92672">.&lt;/span>new(name: &lt;span style="color:#e6db74">&amp;#34;My Name&amp;#34;&lt;/span>)
&lt;span style="color:#75715e"># 1&lt;/span>
tp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">Tracepoint&lt;/span>&lt;span style="color:#f92672">.&lt;/span>new(&lt;span style="color:#e6db74">:call&lt;/span>) &lt;span style="color:#66d9ef">do&lt;/span> &lt;span style="color:#f92672">|*&lt;/span>args&lt;span style="color:#f92672">|&lt;/span>
p args
&lt;span style="color:#66d9ef">end&lt;/span>
tp&lt;span style="color:#f92672">.&lt;/span>enable &lt;span style="color:#75715e"># 2&lt;/span>
user&lt;span style="color:#f92672">.&lt;/span>avatar_attributes &lt;span style="color:#f92672">=&lt;/span> { name: &lt;span style="color:#e6db74">&amp;#34;I am a file name&amp;#34;&lt;/span> }
tp&lt;span style="color:#f92672">.&lt;/span>disable &lt;span style="color:#75715e"># 3&lt;/span>
user&lt;span style="color:#f92672">.&lt;/span>save!
&lt;span style="color:#66d9ef">end&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The output will be very long but we only care the top line which may look like
this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">`avatar_attributes=&amp;#39;@.../activerecord/lib/active_record/ nested_attributes.rb:347
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="git">Git&lt;/h2>
&lt;ol>
&lt;li>Fork the Rails source code from the &lt;a href="https://github.com/rails/rails">GitHub&lt;/a>&lt;/li>
&lt;li>Checkout the fork into your workstation&lt;/li>
&lt;/ol>
&lt;p>Then Use these commands to add the original repo into your copy:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd path/to/rails/
git remote add upstream https://github.com/rails/rails.git
&lt;span style="color:#75715e"># Get changes from Rails master from GitHub&lt;/span>
&lt;span style="color:#75715e"># and push the update to our repo&lt;/span>
git pull --rebase upstream master
git push origin master
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="git-bisect">Git Bisect&lt;/h3>
&lt;p>Helpful in identifying when the regression is introduced in the code. It takes
two points, good and bad. Both are subjective but bad point can means when the
code added and the behaviour changed. Just make sure you keep it seperated in
your head (more like behaviour exists and behaviour doesn&amp;rsquo;t exist).&lt;/p>
&lt;p>Since Rails tag every releases, it&amp;rsquo;s easier to start by checking out the tag and
see if the bug exists or not.&lt;/p>
&lt;p>For an example, we want to find where Eileen added documentation about &lt;code>git bisect&lt;/code> into the README. This is based on &lt;a href="https://github.com/eileencodes/railsconf_scripts">RailsConf
Script&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git checkout practising-git
git bisect start
git bisect bad
git bisect good master
cat README.md
git bisect good
cat README.md
git bisect bad
cat README.md
git bisect bad
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This will show the &lt;code>git commit&lt;/code> that introduces the bisect documentations:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">967e214ab9813767871773a90269b97f68207e5d is the first bad commit
commit 967e214ab9813767871773a90269b97f68207e5d
Author: eileencodes &amp;lt;eileencodes@gmail.com&amp;gt;
Date: Fri Apr 10 09:53:37 2015 -0400
Add section about bisecting
This is the commit we want to find when we practice bisecting.
:100644 100644 da91fa431505406e9c354e5b232036823f6ee781 50ba68331d55df483f334c1ea767d18f17eab18f M README.md
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use &lt;code>git show&lt;/code> for more info on the commit:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git show 967e214ab9813767871773a90269b97f68207e5d
commit 967e214ab9813767871773a90269b97f68207e5d
Author: eileencodes &amp;lt;eileencodes@gmail.com&amp;gt;
Date: Fri Apr &lt;span style="color:#ae81ff">10&lt;/span> 09:53:37 &lt;span style="color:#ae81ff">2015&lt;/span> -0400
Add section about bisecting
This is the commit we want to find when we practice bisecting.
diff --git a/README.md b/README.md
index da91fa4..50ba683 &lt;span style="color:#ae81ff">100644&lt;/span>
--- a/README.md
+++ b/README.md
@@ -66,3 +66,12 @@ lab on contributing to Rails. Please see that branch &lt;span style="color:#66d9ef">for&lt;/span> git the git commands.
&lt;span style="color:#75715e">#### Reflog&lt;/span>
&lt;span style="color:#e6db74">`&lt;/span>git reflog&lt;span style="color:#e6db74">`&lt;/span>
+
+### Using Git to Find Where Code was Introduced
+
+#### Bisect
+
+&lt;span style="color:#e6db74">`&lt;/span>git bisect start&lt;span style="color:#e6db74">`&lt;/span>
+&lt;span style="color:#e6db74">`&lt;/span>git bisect bad&lt;span style="color:#e6db74">`&lt;/span>
+&lt;span style="color:#e6db74">`&lt;/span>git bisect good ref&lt;span style="color:#e6db74">`&lt;/span>
+&lt;span style="color:#e6db74">`&lt;/span>git bisect reset&lt;span style="color:#e6db74">`&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Rails source codes, you can use the test scripts to check if the bug exists
or not.&lt;/p>
&lt;h3 id="amending-commits">Amending Commits&lt;/h3>
&lt;p>Change last commit message:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git commit --amend
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Undo amend commit:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git reset --soft HEAD@&lt;span style="color:#f92672">{&lt;/span>1&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Undo commits, changes are staged, but no longer commited:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git reset --soft HEAD~N
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To unstage those changes:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git reset HEAD
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reset the current branch to the original state and discard any changes:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git reset --hard origin/practicing-git
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For modifying previous commit messages, squash and others, we can use:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git rebase -i master
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We might get something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">pick b7b78d1 Add README headings
pick 059743f Fix title for undoing things in git
pick 026e843 Add commands to each section
pick 967e214 Add section about bisecting
pick bc23d29 Add missing sections
pick f644446 Fix spacing on bisect commands
# Rebase 8c381e5..f644446 onto 8c381e5
#
# Commands:
# p, pick = use commit
# r, reword = use commit, but edit the commit message
# e, edit = use commit, but stop for amending
# s, squash = use commit, but meld into previous commit
# f, fixup = like &amp;#34;squash&amp;#34;, but discard this commit&amp;#39;s log message
# x, exec = run command (the rest of the line) using shell
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change the word &lt;code>pick&lt;/code> to other things such as &lt;code>squash&lt;/code> for squashing commits
and edit for amending commit message.&lt;/p>
&lt;p>It&amp;rsquo;s OK to force push into your own branch. In fact it&amp;rsquo;s recommended to force
push instead of opening another pull request. To force push, use:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push -f origin your-branch
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Git keeps track of updates to the tip of branches using a mechanism called
reflog. This allows you to go back to changesets even though they are not
referenced by any branch or tag. After rewriting history, the reflog contains
information about the old state of branches and allows you to go back to that
state if necessary [2].&lt;/p>
&lt;p>An example of &lt;code>git reflog&lt;/code> output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">f644446 HEAD@{0}: rebase: aborting
8c381e5 HEAD@{1}: rebase -i (start): checkout master
f644446 HEAD@{2}: reset: moving to origin/practicing-git
91979dc HEAD@{3}: rebase -i (finish): returning to refs/heads/practicing-git
91979dc HEAD@{4}: rebase -i (start): checkout master
91979dc HEAD@{5}: rebase -i (finish): returning to refs/heads/practicing-git
91979dc HEAD@{6}: rebase -i (squash): Add README headings
ab7a378 HEAD@{7}: rebase -i (squash): # This is a combination of 5 commits.
04bb631 HEAD@{8}: rebase -i (squash): # This is a combination of 4 commits.
4fc54ed HEAD@{9}: rebase -i (squash): # This is a combination of 3 commits.
410319c HEAD@{10}: rebase -i (squash): # This is a combination of 2 commits.
f521dd3 HEAD@{11}: rebase -i (start): checkout master
c6f43a6 HEAD@{12}: rebase -i (finish): returning to refs/heads/practicing-git
c6f43a6 HEAD@{13}: commit (amend): Fix spacing on bisect commands
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I guess that&amp;rsquo;s it. Thanks for reading :)&lt;/p>
&lt;h2 id="references">References&lt;/h2>
&lt;ol>
&lt;li>&lt;a href="http://www.eileencodes.com/posts/getting-your-local-environment-setup-to-contribute-to-rails">http://www.eileencodes.com/posts/getting-your-local-environment-setup-to-contribute-to-rails&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.atlassian.com/git/tutorials/rewriting-history/git-reflog">https://www.atlassian.com/git/tutorials/rewriting-history/git-reflog&lt;/a>&lt;/li>
&lt;/ol></content></item><item><title>Getting Started with Rails on Windows</title><link>https://amree.github.io/2013/12/03/getting-started-with-rails-on-windows/</link><pubDate>Tue, 03 Dec 2013 00:00:00 +0000</pubDate><guid>https://amree.github.io/2013/12/03/getting-started-with-rails-on-windows/</guid><description>&lt;p>First of all, let&amp;rsquo;s get one thing straight. This is not a guide for those who
are trying their best to not use Unix like environment in develop Rails
application. This is more like a guide to do almost everything in Linux without
replacing your Windows.&lt;/p></description><content>&lt;p>First of all, let&amp;rsquo;s get one thing straight. This is not a guide for those who
are trying their best to not use Unix like environment in develop Rails
application. This is more like a guide to do almost everything in Linux without
replacing your Windows.&lt;/p>
&lt;p>So, I need to teach my colleagues in the next two weeks on Ruby on Rails
introductionary class. Since all of the computer labs are installed with Windows
7, I had to find a way to ensure a proper working environment for the students,
hence, this article.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>After researching for a while, I decided to go with &lt;a href="http://vagrantup.com">Vagrant&lt;/a>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>First of all, install &lt;a href="http://virtualbox.org">Oracle VM VirtualBox&lt;/a>. Vagrant will depend on it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Next, you need to install &lt;a href="http://git-scm.com">Git&lt;/a> for Windows. We actually
just need &lt;code>ssh&lt;/code> executable in the Git package. After comparing available
options, I think it is the easiest way. Besides, we&amp;rsquo;ll now have Git enabled
in our Windows. By the way, make sure you&amp;rsquo;ll select the third option (the one
with with the warning) during Adjusting your PATH environment section.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Download &lt;a href="http://downloads.vagrantup.com">Vagrant&lt;/a> and install it.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="vagrant-setup">Vagrant Setup&lt;/h2>
&lt;p>Create a working directory (use Windows prompt):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir rails
cd rails
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initiate Vagrant:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">vagrant init
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install a Debian box:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">vagrant box add debian https://dl.dropboxusercontent.com/u/197673519/debian-7.2.0.box
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can select other box if you want to, but for this guide, I&amp;rsquo;ll be using a Debian based box. There are a lot more in the &lt;a href="https://github.com/mitchellh/vagrant/wiki/Available-Vagrant-Boxes">Wiki&lt;/a>.&lt;/p>
&lt;p>Open &lt;code>Vagrantfile&lt;/code> and make sure you put these lines:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">Vagrant.configure&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;2&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">do&lt;/span> |config|
&lt;span style="color:#75715e"># Specify our box&amp;#39;s name&lt;/span>
config.vm.box &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;debian&amp;#34;&lt;/span>
&lt;span style="color:#75715e"># Forward Rails default server port&lt;/span>
config.vm.network :forwarded_port, guest: 3000, host: &lt;span style="color:#ae81ff">3000&lt;/span>
end
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Boot the box:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">vagrant up
&lt;/code>&lt;/pre>&lt;/div>&lt;p>SSH into it to start working in the box:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">vagrant ssh
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="box-setup">Box Setup&lt;/h2>
&lt;p>We&amp;rsquo;re going to setup the box for Rails development which includes MySQL as the database.&lt;/p>
&lt;p>Install required packages (when asked about the password, leave it empty):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">sudo su
apt-get install build-essential mysql-server mysql-client libmysqlclient-dev
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a file at &lt;code>/etc/gemrc&lt;/code> and add this line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">gem: --no-ri --no-rdoc
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install all of the necessary gems:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">gem install rails
gem install therubyracer
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="create-a-rails-application">Create a Rails Application&lt;/h2>
&lt;p>Make sure we&amp;rsquo;re in &lt;code>/vagrant/&lt;/code> directory. Anything done here will reflect back the directory in the Windows.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /vagrant/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Generate the Rails application:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rails new myapp --database&lt;span style="color:#f92672">=&lt;/span>mysql
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Specify a &lt;code>javascript runtime&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd myapp
nano Gemfile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Uncomment this line:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">gem &lt;span style="color:#e6db74">&amp;#39;therubyracer&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">platforms&lt;/span>: &lt;span style="color:#e6db74">:ruby&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run this command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">bundle
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the database based on the default configuration:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rake db:create
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the app:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rails s
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open it using this URL: &lt;a href="http://localhost:3000">http://localhost:3000&lt;/a>.&lt;/p>
&lt;h2 id="rails-development">Rails Development&lt;/h2>
&lt;p>If you haven&amp;rsquo;t noticed, you should see that everything that was changed in
&lt;code>/vagrant&lt;/code> will reflect your &lt;code>rails&lt;/code> directory in Windows. This means, you can
just use your favourite editor to load that particular directory and start
coding. It&amp;rsquo;s as if you&amp;rsquo;re doing development directly in the server. For
everything else, make sure you&amp;rsquo;ll do it through Putty or through &lt;code>vagrant ssh&lt;/code>.&lt;/p>
&lt;p>I guess that&amp;rsquo;s it. Good luck !&lt;/p></content></item><item><title>Setup Free Uptime Monitoring Service in Heroku</title><link>https://amree.github.io/2013/06/28/setup-free-uptime-monitoring-service-in-heroku/</link><pubDate>Fri, 28 Jun 2013 00:00:00 +0000</pubDate><guid>https://amree.github.io/2013/06/28/setup-free-uptime-monitoring-service-in-heroku/</guid><description>&lt;p>A free way for us to setup free version of uptime service.&lt;/p></description><content>&lt;p>A free way for us to setup free version of uptime service.&lt;/p>
&lt;p>Clone the &lt;a href="https://github.com/fzaninotto/uptime.git">uptime&lt;/a> repository&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git clone https://github.com/fzaninotto/uptime.git
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get into the directory&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd uptime
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Login using &lt;a href="https://devcenter.heroku.com/categories/command-line">heroku command line&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">heroku login
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run this command to create the &lt;code>Procfile&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">echo &lt;span style="color:#e6db74">&amp;#34;web: node app.js&amp;#34;&lt;/span> &amp;gt; Procfile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commit your changes&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git add .
git commit -m &lt;span style="color:#e6db74">&amp;#39;Added Procfile&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create your heroku app&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">heroku create yourappname
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add MongoDB to your app&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">heroku addons:add mongolab
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get your MongoDB connection info&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">heroku config
=== uptimee Config Vars
MONGOLAB_URI: mongodb://username:password@host:port/dbname
PATH: bin:node_modules/.bin:/usr/local/bin:/usr/bin:/bin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Use the info you just got and update &lt;code>config/default.yml&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">mongodb&lt;/span>:
&lt;span style="color:#f92672">server&lt;/span>: &lt;span style="color:#ae81ff">host:port&lt;/span>
&lt;span style="color:#f92672">database&lt;/span>: &lt;span style="color:#ae81ff">dbname&lt;/span>
&lt;span style="color:#f92672">user&lt;/span>: &lt;span style="color:#ae81ff">username&lt;/span>
&lt;span style="color:#f92672">password&lt;/span>: &lt;span style="color:#ae81ff">password&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I&amp;rsquo;ve also updated other settings&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">monitor&lt;/span>:
&lt;span style="color:#f92672">apiUrl&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;http://localhost/api&amp;#39;&lt;/span> &lt;span style="color:#75715e"># must be accessible without a proxy&lt;/span>
&lt;span style="color:#75715e"># apiUrl: &amp;#39;http://localhost:8021/api&amp;#39; # must be accessible without a proxy&lt;/span>
&lt;span style="color:#f92672">server&lt;/span>:
&lt;span style="color:#f92672">port&lt;/span>: &lt;span style="color:#ae81ff">80&lt;/span>
&lt;span style="color:#75715e"># port: 8021&lt;/span>
&lt;span style="color:#f92672">email&lt;/span>:
&lt;span style="color:#f92672">dashboardUrl&lt;/span>: &lt;span style="color:#e6db74">&amp;#39;http://localhost&amp;#39;&lt;/span>
&lt;span style="color:#75715e"># dashboardUrl: &amp;#39;http://localhost:8021&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Commit your changes&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git add .
git commit -m &lt;span style="color:#e6db74">&amp;#39;Updated the configurations&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Push your files&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push heroku master
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure there&amp;rsquo;s one dyno running for the &lt;code>web&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">heroku ps:scale web&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can verify it&amp;rsquo;s running using&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">heroku ps
&lt;span style="color:#f92672">===&lt;/span> web &lt;span style="color:#f92672">(&lt;/span>1X&lt;span style="color:#f92672">)&lt;/span>: &lt;span style="color:#e6db74">`&lt;/span>node app.js&lt;span style="color:#e6db74">`&lt;/span>
web.1: up 2013/06/28 19:03:30 &lt;span style="color:#f92672">(&lt;/span>~ 3m ago&lt;span style="color:#f92672">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Open your app&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push heroku master
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That&amp;rsquo;s it, good luck! :)&lt;/p></content></item><item><title>Rails, Unicorn and Nginx on Slackware</title><link>https://amree.github.io/2013/01/06/rails-unicorn-and-nginx-on-slackware/</link><pubDate>Sun, 06 Jan 2013 00:00:00 +0000</pubDate><guid>https://amree.github.io/2013/01/06/rails-unicorn-and-nginx-on-slackware/</guid><description>&lt;p>I was trying to deploy a Rails application using Apache and got into some
problems when I tried to configure the app so that Apache will be the one that
serves the precompiled assets (javascripts, css, images and others). Since I&amp;rsquo;m
on tight deadline (yeah, I should&amp;rsquo;ve tested production mode much more earlier),
I tried my luck with Nginx and it worked easily without any hassle. So, this is
how I did it.&lt;/p></description><content>&lt;p>I was trying to deploy a Rails application using Apache and got into some
problems when I tried to configure the app so that Apache will be the one that
serves the precompiled assets (javascripts, css, images and others). Since I&amp;rsquo;m
on tight deadline (yeah, I should&amp;rsquo;ve tested production mode much more earlier),
I tried my luck with Nginx and it worked easily without any hassle. So, this is
how I did it.&lt;/p>
&lt;h2 id="goals">Goals&lt;/h2>
&lt;ul>
&lt;li>Precompiled assets will be served by Nginx and not the Rails server itself.&lt;/li>
&lt;li>Assets will be served in gzip.&lt;/li>
&lt;/ul>
&lt;h2 id="environments">Environments&lt;/h2>
&lt;ul>
&lt;li>Slackware v14&lt;/li>
&lt;li>Rails v3.2.10&lt;/li>
&lt;li>Ruby v1.9.3&lt;/li>
&lt;/ul>
&lt;h2 id="guides">Guides&lt;/h2>
&lt;p>First of all, install &lt;a href="http://slackbuilds.org/repository/14.0/network/nginx/">nginx&lt;/a> from Slackbuild.&lt;/p>
&lt;p>Be sure to turn off Apache&amp;rsquo;s startup script if you have it installed:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">chmod -x /etc/rc.d/rc.httpd
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is to ensure no conflict since both of them by default will use port 80.&lt;/p>
&lt;p>Put &lt;code>unicorn&lt;/code> in your Gemfile and run &lt;code>bundle&lt;/code>.&lt;/p>
&lt;p>I&amp;rsquo;m putting my Rails app in &lt;code>/opt/neuro&lt;/code>, so, adjust it accordingly.&lt;/p>
&lt;p>Create &lt;code>nginx.conf&lt;/code> in &lt;code>/opt/neuro/config/nginx.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="color:#66d9ef">upstream&lt;/span> &lt;span style="color:#e6db74">neuro&lt;/span> {
&lt;span style="color:#f92672">server&lt;/span> &lt;span style="color:#e6db74">unix:/tmp/unicorn.neuro.sock&lt;/span> &lt;span style="color:#e6db74">fail_timeout=0&lt;/span>;
}
&lt;span style="color:#66d9ef">server&lt;/span> {
&lt;span style="color:#f92672">listen&lt;/span> neuro.husmnet:&lt;span style="color:#ae81ff">80&lt;/span>;
&lt;span style="color:#f92672">server_name&lt;/span> &lt;span style="color:#e6db74">neuro.husmnet&lt;/span>
&lt;span style="color:#e6db74">root&lt;/span> &lt;span style="color:#e6db74">/opt/neuro/public&lt;/span>;
&lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">^~&lt;/span> &lt;span style="color:#e6db74">/assets/&lt;/span> {
&lt;span style="color:#f92672">root&lt;/span> &lt;span style="color:#e6db74">/opt/neuro/public&lt;/span>;
&lt;span style="color:#f92672">gzip_static&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>;
&lt;span style="color:#f92672">expires&lt;/span> &lt;span style="color:#e6db74">max&lt;/span>;
&lt;span style="color:#f92672">add_header&lt;/span> &lt;span style="color:#e6db74">Cache-Control&lt;/span> &lt;span style="color:#e6db74">public&lt;/span>;
}
&lt;span style="color:#f92672">try_files&lt;/span> $uri/index.html $uri &lt;span style="color:#e6db74">@unicorn&lt;/span>;
&lt;span style="color:#f92672">location&lt;/span> &lt;span style="color:#e6db74">@unicorn&lt;/span> {
&lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">X-Forwarded-For&lt;/span> $proxy_add_x_forwarded_for;
&lt;span style="color:#f92672">proxy_set_header&lt;/span> &lt;span style="color:#e6db74">Host&lt;/span> $http_host;
&lt;span style="color:#f92672">proxy_redirect&lt;/span> &lt;span style="color:#66d9ef">off&lt;/span>;
&lt;span style="color:#f92672">proxy_pass&lt;/span> &lt;span style="color:#e6db74">http://neuro&lt;/span>;
}
&lt;span style="color:#f92672">error_page&lt;/span> &lt;span style="color:#ae81ff">500&lt;/span> &lt;span style="color:#ae81ff">502&lt;/span> &lt;span style="color:#ae81ff">503&lt;/span> &lt;span style="color:#ae81ff">504&lt;/span> &lt;span style="color:#e6db74">/500.html&lt;/span>;
&lt;span style="color:#f92672">client_max_body_size&lt;/span> &lt;span style="color:#e6db74">4G&lt;/span>;
&lt;span style="color:#f92672">keepalive_timeout&lt;/span> &lt;span style="color:#ae81ff">10&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>unicorn.rb&lt;/code> in &lt;code>/opt/neuro/config/unicorn.rb&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">root &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>&lt;span style="color:#66d9ef">Dir&lt;/span>&lt;span style="color:#f92672">.&lt;/span>pwd&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>
&lt;span style="color:#75715e"># Define worker directory for Unicorn&lt;/span>
working_directory root
&lt;span style="color:#75715e"># Location of PID file&lt;/span>
pid &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>root&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/tmp/pids/unicorn.pid&amp;#34;&lt;/span>
&lt;span style="color:#75715e"># Define Log paths&lt;/span>
stderr_path &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>root&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/log/unicorn.log&amp;#34;&lt;/span>
stdout_path &lt;span style="color:#e6db74">&amp;#34;&lt;/span>&lt;span style="color:#e6db74">#{&lt;/span>root&lt;span style="color:#e6db74">}&lt;/span>&lt;span style="color:#e6db74">/log/unicorn.log&amp;#34;&lt;/span>
&lt;span style="color:#75715e"># Listen on a UNIX data socket&lt;/span>
listen &lt;span style="color:#e6db74">&amp;#34;/tmp/unicorn.neuro.sock&amp;#34;&lt;/span>, &lt;span style="color:#e6db74">:backlog&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#ae81ff">64&lt;/span>
&lt;span style="color:#75715e"># houllisten 8080, :tcp_nopush =&amp;gt; true&lt;/span>
worker_processes &lt;span style="color:#ae81ff">2&lt;/span>
&lt;span style="color:#75715e"># Load rails before forking workers for better worker spawn time&lt;/span>
preload_app &lt;span style="color:#66d9ef">true&lt;/span>
&lt;span style="color:#75715e"># Restart workes hangin&amp;#39; out for more than 240 secs&lt;/span>
timeout &lt;span style="color:#ae81ff">240&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>/etc/nginx/nginx.conf&lt;/code> with this content:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-nginx" data-lang="nginx">&lt;span style="color:#75715e"># user root;
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#66d9ef">worker_processes&lt;/span> &lt;span style="color:#ae81ff">1&lt;/span>;
&lt;span style="color:#66d9ef">error_log&lt;/span> &lt;span style="color:#e6db74">/var/log/nginx/error.log&lt;/span>;
&lt;span style="color:#75715e">#error_log logs/error.log notice;
&lt;/span>&lt;span style="color:#75715e">#error_log logs/error.log info;
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">#pid logs/nginx.pid;
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">events&lt;/span> {
&lt;span style="color:#f92672">worker_connections&lt;/span> &lt;span style="color:#ae81ff">1024&lt;/span>;
}
&lt;span style="color:#66d9ef">http&lt;/span> {
&lt;span style="color:#f92672">include&lt;/span> &lt;span style="color:#e6db74">mime.types&lt;/span>;
&lt;span style="color:#f92672">default_type&lt;/span> &lt;span style="color:#e6db74">application/octet-stream&lt;/span>;
&lt;span style="color:#f92672">sendfile&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>;
&lt;span style="color:#f92672">keepalive_timeout&lt;/span> &lt;span style="color:#ae81ff">65&lt;/span>;
&lt;span style="color:#f92672">gzip&lt;/span> &lt;span style="color:#66d9ef">on&lt;/span>;
&lt;span style="color:#f92672">include&lt;/span> &lt;span style="color:#e6db74">/etc/nginx/sites-enabled/*&lt;/span>;
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create &lt;code>sites-enabled&lt;/code> directory in &lt;code>/etc/nginx&lt;/code> and create a softlink to the &lt;code>nginx.conf&lt;/code> in our app:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir /etc/nginx/sites-enabled
ln -s /opt/neuro/config/nginx.conf neuro.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create a directory for the pid&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir /opt/neuro/tmp/pids
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Before starting it for the first time, let us monitor important logs (open it using different
terminals) :&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">tail -f /var/log/nginx/error.log
tail -f /opt/neuro/log/unicorn.log
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you&amp;rsquo;ve precompiled your assets:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">rake assets:clean
rake assets:precompile
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start unicorn:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /opt/neuro
unicorn -c config/unicorn.rb -E production -D
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start nginx:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nginx
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Congratulation! Make sure there&amp;rsquo;s no error in your logs. If there&amp;rsquo;re, you can use these commands to
stop &lt;code>nginx&lt;/code> and &lt;code>unicorn&lt;/code> to start everything back:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nginx -s stop
killall unicorn
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Let&amp;rsquo;s test the gzip compression using &lt;code>curl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ curl -LI --compressed http://neuro.husmnet/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You&amp;rsquo;ll get something like this (notice the gzip info):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">HTTP/1.1 200 OK
Server: nginx/1.2.2
Date: Sat, 05 Jan 2013 21:00:26 GMT
Content-Type: text/html; charset=utf-8
Connection: keep-alive
Status: 200 OK
X-UA-Compatible: IE=Edge,chrome=1
ETag: &amp;#34;a66ac1d43d8f07ecc0737e64dd8a3366&amp;#34;
Cache-Control: max-age=0, private, must-revalidate
Set-Cookie: _neuro_session=BAh7B0kiD3Nlc3Npb25faWQGOgZFRkkiJTQ2YTU2NjE3MDY0Y2RkNzk0Yzk3ODhhNDJlYmQ3ODA3BjsAVEkiEF9jc3JmX3Rva2VuBjsARkkiMVNvOXVTS2I2RXJIcTljbS9WeGRDODZyTUpVZENXL2NPVnJhTGR0V2xydGM9BjsARg%3D%3D--173e9d56a5cc434eb675b6626d90aced1cc17cd6; path=/; HttpOnly
X-Request-Id: 760e233de4980dc75169f2c68a53dc31
X-Runtime: 0.017885
X-Rack-Cache: miss
Content-Encoding: gzip
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I admit, this is a very simple config, but it&amp;rsquo;s good enough for a beginner like
me to get started. Good luck!&lt;/p></content></item><item><title>Getting Started with Xen on Slackware</title><link>https://amree.github.io/2012/09/12/getting-started-with-xen-on-slackware/</link><pubDate>Wed, 12 Sep 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/09/12/getting-started-with-xen-on-slackware/</guid><description>&lt;p>Here&amp;rsquo;s a guide on how to setup Xen virtualization in Slackware.&lt;/p></description><content>&lt;p>Here&amp;rsquo;s a guide on how to setup Xen virtualization in Slackware.&lt;/p>
&lt;h2 id="install-slackware">Install Slackware&lt;/h2>
&lt;p>I&amp;rsquo;ll be doing this on Slackware v13.37 64 bit.&lt;/p>
&lt;ul>
&lt;li>Create 1 partition for the whole disk&lt;/li>
&lt;li>Set its type to &lt;code>8e&lt;/code> (Linux LVM)&lt;/li>
&lt;/ul>
&lt;p>Run these commands to setup the LVM partitions:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">pvcreate /dev/sda1
vgcreate vg01 /dev/sda1
lvcreate -L 20G -n root vg01
lvcreate -L 20G -n iso vg01
lvcreate -L 8G -n swap vg01
mkswap /dev/vg01/swap
setup
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>Mount &lt;code>/dev/vg01/root&lt;/code> as &lt;code>/&lt;/code>&lt;/li>
&lt;li>Mount &lt;code>/dev/vg01/iso&lt;/code> as &lt;code>/iso&lt;/code>&lt;/li>
&lt;li>Install all packages from a, ap, d, f, l, n, t, tcl, x&lt;/li>
&lt;/ul>
&lt;p>Create custom &lt;code>initrd&lt;/code> after the setup complete:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">chroot /mnt
/usr/share/mkinitrd/mkinitrd_command_generator.sh &amp;gt; init
sh init
ln -sf /boot/vmlinuz-generic-2.6.37.6 /boot/vmlinuz
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add &lt;code>initrd&lt;/code> option in your &lt;code>/etc/lilo.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/lilo.conf
image = /boot/vmlinuz
initrd = /boot/initrd.gz # Add this line
root = /dev/vg01/root
label = slackware
read-only # Partitions should be mounted read-only for checking
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install the new bootloader and reboot:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">lilo
exit
reboot
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup-dom0-host">Setup Dom0 (Host)&lt;/h2>
&lt;h3 id="install-xen">Install Xen&lt;/h3>
&lt;ul>
&lt;li>Install &lt;a href="http://slackbuilds.org/repository/13.37/development/acpica/">acpica&lt;/a>&lt;/li>
&lt;li>Install &lt;a href="http://slackbuilds.org/repository/13.37/system/xen/">xen&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="build-xen-kernel">Build Xen Kernel&lt;/h3>
&lt;p>We&amp;rsquo;ll be using kernel v3.2.28 so that no patching will be required to enable Xen
and for that we&amp;rsquo;ll get the one from Slackware&amp;rsquo;s repo. By the time of this
writing, Slackware v14 has not been released yet (it&amp;rsquo;s in the current).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">wget http://slackware.osuosl.org/slackware-current/source/k/linux-3.2.28.tar.xz
tar Jxvf linux-3.2.28.tar.xz
mv linux-3.2.28 linux-3.2.28-xen
mv linux-3.2.28-xen/ /usr/src/
cd /usr/src
rm linux
ln -s linux-3.2.28-xen linux
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get Slackware&amp;rsquo;s default kernel config for a start. From there, you must add all
Xen&amp;rsquo;s related kernel configs. You can refer to &lt;a href="http://wiki.xen.org/wiki/Mainline_Linux_Kernel_Configs">Xen&amp;rsquo;s
wiki&lt;/a> on what kernel
config that needs to be enabled.&lt;/p>
&lt;p>You can also get my configs from this &lt;a href="https://gist.github.com/3695518">gist&lt;/a>.
It&amp;rsquo;s based on 3.2.28 kernel (you can use Gist&amp;rsquo;s diff to see what config I&amp;rsquo;ve
added).&lt;/p>
&lt;p>Whatever you chose, make sure you&amp;rsquo;ll change the LOCALVERSION so that you won&amp;rsquo;t
replace your current kernel. Use &lt;code>cat /proc/cpuinfo | grep -i 'processor' | wc -l&lt;/code> + 1 to get your cpu core count to be used with &lt;code>make -j&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd linux
wget http://slackware.osuosl.org/slackware-current/source/k/config-x86_64/config-generic-3.2.28.x64
cp config-generic-3.2.28.x64 .config
make oldconfig
make menuconfig
make -j13 bzImage modules
make modules_install
cp System.map /boot/System.map-xen-3.2.28
cp .config /boot/config-xen-3.2.28
cd /boot
rm System.map
ln -s System.map-xen-3.2.28 System.map
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="xen--dom0--initrd">Xen + Dom0 + Initrd&lt;/h3>
&lt;p>Since LILO doesn&amp;rsquo;t support &amp;ldquo;module&amp;rdquo; directive of Grub, we need to use &lt;code>mbootpack&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>Install &lt;a href="http://slackbuilds.org/repository/13.37/system/mbootpack/">mbootpack&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>You can use &lt;code>/usr/share/mkinitrd/mkinitrd_command_generator.sh&lt;/code> for &lt;code>mkinitrd&lt;/code>
recommendation. Create an initrd for Xen&amp;rsquo;s kernel:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">depmod 3.2.28-xen
mkinitrd -c -k 3.2.28-xen -f ext4 -r /dev/vg01/root -m mptbase:mptscsih:mptsas:usbhid:ehci-hcd:uhci-hcd:jbd2:mbcache:ext4 -L -u -o /boot/initrd-xen.gz
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Create the boot image using &lt;code>mbootpack&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /boot
gzip -d -c /boot/xen-4.1.2.gz &amp;gt; /boot/xen-4.1.2
gzip -d -c /boot/initrd-xen.gz &amp;gt; /boot/initrd-xen
mbootpack -o /boot/vmlinuz-xen-3.2.28 -m /usr/src/linux-3.2.28-xen/vmlinux -m /boot/initrd-xen /boot/xen-4.1.2
ln -s vmlinuz-xen-3.2.28 vmlinuz-xen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>With &lt;code>mbootpack&lt;/code>, we don&amp;rsquo;t have to specify &lt;code>initrd&lt;/code> option. Add these new configs into your &lt;code>/etc/lilo.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/lilo.conf
image = /boot/vmlinuz-xen
root = /dev/vg01/root
label = slackware-xen
append=&amp;#34;-- nomodeset&amp;#34;
read-only
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Put these configs on the top of your &lt;code>lilo.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">default = slackware-xen
timeout = 30
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run &lt;code>lilo&lt;/code> and make sure there&amp;rsquo;s no error from the output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ lilo
Warning: LBA32 addressing assumed
Added slackware
Added slackware-xen *
One warning was issued.
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Put these settings in your &lt;code>/etc/rc.d/rc.local&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/rc.d/rc.local
if [ -d /proc/xen ]; then
if [ -x /etc/rc.d/rc.xencommons ]; then
echo &amp;#34;Starting XEN commons: /etc/rc.d/rc.xencommons&amp;#34;
/etc/rc.d/rc.xencommons start
fi
if [ -x /etc/rc.d/rc.xendomains ]; then
echo &amp;#34;Starting XEN domains: /etc/rc.d/rc.xendomains&amp;#34;
/etc/rc.d/rc.xendomains start
fi
fi
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And these commands in your &lt;code>/etc/rc.d/rc.local_shutdown&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/rc.d/rc.local_shutdown
if [ -d /proc/xen ]; then
if [ -x /etc/rc.d/rc.xendomains ]; then
echo &amp;#34;Stopping XEN domains: /etc/rc.d/rc.xendomains&amp;#34;
/etc/rc.d/rc.xendomains stop
fi
if [ -x /etc/rc.d/rc.xencommons ]; then
echo &amp;#34;Stopping XEN commons: /etc/rc.d/rc.xencommons&amp;#34;
/etc/rc.d/rc.xencommons stop
fi
fi
&lt;/code>&lt;/pre>&lt;/div>&lt;p>After the reboot, you should get something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ uname -r
3.2.28-xen
$ cat /proc/xen/capabilities
control_d
$ cat /sys/hypervisor/properties/capabilities
xen-3.0-x86_64 xen-3.0-x86_32p hvm-3.0-x86_32 hvm-3.0-x86_32p hvm-3.0-x86_64
$ xl list
Name ID Mem VCPUs State Time&lt;span style="color:#f92672">(&lt;/span>s&lt;span style="color:#f92672">)&lt;/span>
Domain-0 &lt;span style="color:#ae81ff">0&lt;/span> &lt;span style="color:#ae81ff">15243&lt;/span> &lt;span style="color:#ae81ff">12&lt;/span> r----- 9.0
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Disable autosave and restore of &lt;code>DomU&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/default/xendomains
XENDOMAINS_RESTORE=false
XENDOMAINS_SAVE=&amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="setup-domu-guest">Setup DomU (Guest)&lt;/h2>
&lt;p>I&amp;rsquo;m going to install a Slackware v13.37 64 bit as the first guest. I&amp;rsquo;ll be using
an ISO image that I&amp;rsquo;ve copied into my &lt;code>/iso&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /iso
wget http://mirrors.xmission.com/slackware/slackware64-13.37-iso/slackware64-13.37-install-dvd.iso
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a start, we need to create a config file for the Slackware installation:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mkdir ~/machines
cd ~/machines
vim slackware-install
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Put these initial configs in your &lt;code>/root/machines/slackware-install&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">kernel = &amp;#39;hvmloader&amp;#39;
builder=&amp;#39;hvm&amp;#39;
memory = 1024
name = &amp;#34;slackware&amp;#34;
vif = [ &amp;#39;mac=00:16:3E:AD:81:AE, bridge=virbr0, model=e1000&amp;#39; ]
dhcp = &amp;#34;dhcp&amp;#34;
disk = [&amp;#39;phy:/dev/vg01/slackware,hda,w&amp;#39;, &amp;#39;file:/iso/slackware64-13.37-install-dvd.iso,hdc:cdrom,r&amp;#39;]
boot=&amp;#39;dc&amp;#39;
sdl=0
opengl=1
vnc=1
vncpasswd=&amp;#39;&amp;#39;
serial=&amp;#39;pty&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, there&amp;rsquo;re various of thing thats we need to take care of before
we start the installation. First of all the networking.&lt;/p>
&lt;h3 id="generate-random-mac">Generate Random MAC&lt;/h3>
&lt;p>Use this command (thanks to &lt;a href="http://unixtitan.net/main/2009/12/01/xen-mac-generator/">Unixtitan&lt;/a>):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">perl -e &lt;span style="color:#e6db74">&amp;#39;printf &amp;#34;00:16:3E:%02X:%02X:%02X\n&amp;#34;, rand 0xFF, rand 0xFF, rand 0xFF&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="setup-networking-bridging">Setup Networking Bridging&lt;/h3>
&lt;p>There are a few methods for a DomU to access the network. For this guide, I&amp;rsquo;ll
use network bridging.&lt;/p>
&lt;p>Put these configs (before starting anything related to Xen) into your &lt;code>/etc/rc.d/rc.local&lt;/code> to enable network bridge:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/rc.d/rc.local
ifconfig eth0 up
ifconfig eth0 0.0.0.0
brctl addbr virbr0
brctl addif virbr0 eth0
ifconfig virbr0 192.168.1.10 netmask 255.255.255.0
route add default gw 192.168.1.1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Clear out any values set in your &lt;code>/etc/rc.d/rc.inet1.conf&lt;/code>. Usually the value of
&lt;code>IPADDR[0]&lt;/code>, &lt;code>NETMASK[0]&lt;/code> and &lt;code>GATEWAY&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/rc.d/rc.inet1.conf
# Config information for eth0:
IPADDR[0]=&amp;#34;&amp;#34;
NETMASK[0]=&amp;#34;&amp;#34;
USE_DHCP[0]=&amp;#34;&amp;#34;
DHCP_HOSTNAME[0]=&amp;#34;&amp;#34;
# Default gateway IP address:
GATEWAY=&amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configs assume your main networking interface is &lt;code>eth0&lt;/code>. Change other
settings based on your network environment. Reboot your &lt;code>Dom0&lt;/code>.&lt;/p>
&lt;p>You&amp;rsquo;ll get something that looks like this after the reboot (if you got it right).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">$ ifconfig
eth0 Link encap:Ethernet HWaddr bc:30:5b:db:e2:99
inet6 addr: fe80::be30:5bff:fedb:e299/64 Scope:Link
UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
RX packets:163836 errors:0 dropped:0 overruns:0 frame:0
TX packets:337 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:1000
RX bytes:18347806 (17.4 MiB) TX bytes:30535 (29.8 KiB)
Interrupt:36 Memory:d6000000-d6012800
lo Link encap:Local Loopback
inet addr:127.0.0.1 Mask:255.0.0.0
inet6 addr: ::1/128 Scope:Host
UP LOOPBACK RUNNING MTU:16436 Metric:1
RX packets:4 errors:0 dropped:0 overruns:0 frame:0
TX packets:4 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:0
RX bytes:336 (336.0 B) TX bytes:336 (336.0 B)
virbr0 Link encap:Ethernet HWaddr bc:30:5b:db:e2:99
inet addr:192.168.1.10 Bcast:192.168.1.255 Mask:255.255.255.0
inet6 addr: fe80::be30:5bff:fedb:e299/64 Scope:Link
UP BROADCAST RUNNING MULTICAST MTU:1500 Metric:1
RX packets:147426 errors:0 dropped:506 overruns:0 frame:0
TX packets:129 errors:0 dropped:0 overruns:0 carrier:0
collisions:0 txqueuelen:0
RX bytes:12417385 (11.8 MiB) TX bytes:16779 (16.3 KiB)
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enable-x11-forwarding-in-dom0">Enable X11 Forwarding in Dom0&lt;/h3>
&lt;ul>
&lt;li>Install &lt;a href="http://slackbuilds.org/repository/12.2/system/vncviewer/">vncviewer&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Uncomment or create these options in your &lt;code>/etc/ssh/sshd_config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /etc/ssh/sshd_config
X11Forwarding yes
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Restart your &lt;code>ssh&lt;/code> server:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">/etc/rc.d/rc.sshd restart
exit
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Reconnect to &lt;code>Dom0&lt;/code> using &lt;code>-Y&lt;/code> option:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ssh -Y root@192.168.1.10
xclock
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you can see a clock ticking, that means the X11 forward is working.&lt;/p>
&lt;h3 id="prepare-space-for-domu">Prepare space for DomU&lt;/h3>
&lt;p>I&amp;rsquo;m going to store my &lt;code>DomU&lt;/code> in the a new logical volume.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">lvcreate -L 15G -n slackware vg01
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="install-slackware-in-domu">Install Slackware in DomU&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd machines
xl create slackware
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If everything is good, you should see &lt;code>slackware&lt;/code> when you run &lt;code>xl list&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">$ xl list
Name ID Mem VCPUs State Time(s)
Domain-0 0 13988 12 r----- 40.0
slackware 2 1019 1 -b---- 4.6
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Install Slackware through VNC:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">xl vncviewer slackware
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Just install as if you&amp;rsquo;re installing on a normal server. &lt;code>halt&lt;/code> after you&amp;rsquo;ve finished your installation.&lt;/p>
&lt;h3 id="start-slackware-in-domu">Start Slackware in DomU&lt;/h3>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd ~/machines
cp slackware-install slackware
vim slackware
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Change these two lines in your config file to make sure it&amp;rsquo;ll boot from the hardisk:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># /root/machines/slackware
disk = [&amp;#39;phy:/dev/vg01/slackware,hda,w&amp;#39;]
boot=&amp;#39;c&amp;#39;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Start the guest:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">xl create slackware
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="enable-console-in-domu">Enable Console in DomU&lt;/h3>
&lt;p>It&amp;rsquo;s pretty annoying to use vnc everytime we need to access our &lt;code>DomU&lt;/code> directly. It&amp;rsquo;s possible to connect to our &lt;code>DomU&lt;/code> using console connection:&lt;/p>
&lt;p>Uncomment these lines:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># /etc/inittab&lt;/span>
s1:12345:respawn:/sbin/agetty -L ttyS0 &lt;span style="color:#ae81ff">9600&lt;/span> vt100
&lt;span style="color:#75715e"># /etc/securetty&lt;/span>
ttyS0
$ reboot
&lt;/code>&lt;/pre>&lt;/div>&lt;p>For Ubuntu&amp;rsquo;s &lt;code>DomU&lt;/code>, please check out &lt;a href="https://help.ubuntu.com/community/SerialConsoleHowto">https://help.ubuntu.com/community/SerialConsoleHowto&lt;/a>.&lt;/p>
&lt;p>You can now connect to your Slackware DomU using:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">xl console slackware
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="additional-info">Additional Info&lt;/h2>
&lt;p>Disable auto save and restore of domUs on host reboot:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">$ vim /etc/default/xendomains
XENDOMAINS_RESTORE=false
XENDOMAINS_SAVE=&amp;#34;&amp;#34;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to run &lt;code>xl shutdown guest&lt;/code> so that your &lt;code>DomU&lt;/code> will shutdown
gracefully, you need to use &lt;a href="http://wiki.xen.org/wiki/Xen_Linux_PV_on_HVM_drivers">PVHVM
drivers&lt;/a>. You can refer
&lt;a href="http://wiki.xen.org/wiki/Mainline_Linux_Kernel_Configs">here&lt;/a> for the related
kernel configs that you need to enable in your kernel.&lt;/p>
&lt;p>There are still many things that I&amp;rsquo;d like to add, but I think it&amp;rsquo;s good enough
for now. After all, this post is about getting started, not a complete guide.
I&amp;rsquo;ll update this post if I found anything worth of sharing.&lt;/p>
&lt;p>Good luck!&lt;/p>
&lt;p>More references:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://wiki.xen.org/wiki/XenCommonProblems">http://wiki.xen.org/wiki/XenCommonProblems&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.xen.org/wiki/Xen_Best_Practices">http://wiki.xen.org/wiki/Xen_Best_Practices&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://wiki.xen.org/wiki/Xen_Linux_PV_on_HVM_drivers">http://wiki.xen.org/wiki/Xen_Linux_PV_on_HVM_drivers&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://alien.slackbook.org/dokuwiki/doku.php?id=linux:kernelbuilding">http://alien.slackbook.org/dokuwiki/doku.php?id=linux:kernelbuilding&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Corosync and Pacemaker in Slackware</title><link>https://amree.github.io/2012/05/14/corosync-and-pacemaker-in-slackware/</link><pubDate>Mon, 14 May 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/05/14/corosync-and-pacemaker-in-slackware/</guid><description>&lt;p>This will be multi part post about high availability solution for Slackware. My
first post will be about Corosync and Pacemaker.&lt;/p>
&lt;p>You need to combine Corosync and Pacemaker with other distributed storage system
such as
&lt;a href="http://www.drbd.org/">DRBD&lt;/a>/&lt;a href="http://oss.oracle.com/projects/ocfs2/">OCFS2&lt;/a>/&lt;a href="http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5/html-single/Global_File_System_2/">GFS&lt;/a>. I&amp;rsquo;ll talk about these stacks in another post.&lt;/p></description><content>&lt;p>This will be multi part post about high availability solution for Slackware. My
first post will be about Corosync and Pacemaker.&lt;/p>
&lt;p>You need to combine Corosync and Pacemaker with other distributed storage system
such as
&lt;a href="http://www.drbd.org/">DRBD&lt;/a>/&lt;a href="http://oss.oracle.com/projects/ocfs2/">OCFS2&lt;/a>/&lt;a href="http://docs.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5/html-single/Global_File_System_2/">GFS&lt;/a>. I&amp;rsquo;ll talk about these stacks in another post.&lt;/p>
&lt;p>GOAL:&lt;/p>
&lt;ul>
&lt;li>A MySQL server will always be available at the same IP even though it&amp;rsquo;s
actually down (another server will take over automatically without the needs
for manual intervention).&lt;/li>
&lt;/ul>
&lt;p>Environments:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Slackware v13.37&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Two nodes will be used:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Node 1:
192.168.1.101
Node 2:
192.168.1.102
Cluster/Main/Failover IP:
192.168.1.100
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ul>
&lt;p>The MySQL data is not syncronized, this post is just about
&lt;a href="http://www.corosync.org/">Corosync&lt;/a> and &lt;a href="http://www.clusterlabs.org/">Pacemaker&lt;/a>.&lt;/p>
&lt;p>Guides:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download and install these packages (by this order) in both nodes:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">http://slackbuilds.org/repository/13.37/libraries/libnet/
http://slackbuilds.org/repository/13.37/libraries/libesmtp/
http://slackbuilds.org/repository/13.37/system/clusterglue/
http://slackbuilds.org/repository/13.37/system/clusterresourceagents/
http://slackbuilds.org/repository/13.37/system/corosync/
http://slackbuilds.org/repository/13.37/system/pacemaker/
&lt;/code>&lt;/pre>&lt;/div>&lt;p>I strongly suggest you build these packages one by one just to be sure there
are no missing dependencies. BTW, some script adjustments are needed for
Cluster Resource Agents but I&amp;rsquo;m sure you guys can handle it ;-)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It would be easier for the next steps if
&lt;a href="http://www.debian-administration.org/articles/152">password-less&lt;/a> login with
OpenSSH is enabled. In your &lt;code>Node 1&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ssh-keygen -t rsa
ssh-copy-id -i ~/.ssh/id_rsa.pub root@192.168.1.102
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Generate an authentication key for Corosync:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">corosync-keygen
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;re connecting remotely, pressing your keyboard won&amp;rsquo;t do any good. The
fastest way would be typing directly into the server. The other way is
running &lt;code>find .&lt;/code> on your &lt;code>/&lt;/code> directory (press &lt;code>Control + C&lt;/code> when the key has
been generated).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Copy the new generated authentication key to &lt;code>Node 2&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">scp /etc/corosync/authkey 192.168.1.102:/etc/corosync
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Copy the default &lt;code>corosync&lt;/code> configuration file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cp /etc/corosync/corosync.conf.example /etc/corosync/corosync.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Replace &lt;code>bindnetaddr&lt;/code> and &lt;code>logfile&lt;/code> (optional):&lt;/p>
&lt;pre>&lt;code>bindnetaddr: 192.168.1.0
logfile: /var/log/corosync
&lt;/code>&lt;/pre>&lt;p>You can checkout the &lt;a href="http://www.corosync.org/doku.php?id=faq:configure_openais">reference&lt;/a> about those values. From corosync:&lt;/p>
&lt;blockquote>
&lt;p>If the local interface was 10.12.12.93 and the netmask was 255.0.0.0, Totem
would execute the logical operation 10.12.12.93 &amp;amp; 255.0.0.0 and produce the
value 10.0.0.0. This value would be compared against bindnetaddr and bind Totem
to the NIC that matches. This can cause confusion if netmask or bindnetaddr are
not set properly. In the example above, if bindnetaddr is 10.12.12.0, the
network interface will never be matched. If bindnetaddr is 10.0.0.0 the
interface will be matched.&lt;/p>
&lt;/blockquote>
&lt;/li>
&lt;li>
&lt;p>Copy &lt;code>corosync.conf&lt;/code> to &lt;code>Node 2&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">scp /etc/corosync/corosync.conf 192.168.1.102:/etc/corosync
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create &lt;code>pacemaker&lt;/code> file so that &lt;code>Corosync&lt;/code> will automatically load &lt;code>Pacemaker&lt;/code> when it&amp;rsquo;s started:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">touch /etc/corosync/service.d/pacemaker
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Put these configs in that file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">service {
# Load the Pacemaker Cluster Resource Manager
name: pacemaker
ver: 0
}
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Copy the &lt;code>pacemaker&lt;/code> file to Node 2:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">scp /etc/corosync/service.d/pacemaker 192.168.1.102:/etc/corosync/service.d/
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Start your Corosync and let the magic begins:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">/etc/rc.d/rc.corosync start
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Check your log for any error:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">tail -f /var/log/corosync
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check your process list:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">ps auxf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Corosync should also load other processes automatically:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">root 2008 0.5 3.4 52668 3964 ? Ssl 13:55 0:00 corosync
root 2015 0.0 1.9 12140 2248 ? S 13:55 0:00 \_ /usr/lib/heartbeat/stonithd
226 2016 0.3 3.3 13004 3796 ? S 13:55 0:00 \_ /usr/lib/heartbeat/cib
root 2017 0.0 1.6 6812 1848 ? S 13:55 0:00 \_ /usr/lib/heartbeat/lrmd
226 2018 0.1 2.2 12404 2540 ? S 13:55 0:00 \_ /usr/lib/heartbeat/attrd
226 2019 0.0 1.7 8664 2032 ? S 13:55 0:00 \_ /usr/lib/heartbeat/pengine
226 2020 0.1 2.5 12528 2904 ? S 13:55 0:00 \_ /usr/lib/heartbeat/crmd
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Monitor your cluster using Pacemaker tools:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm status
&lt;/code>&lt;/pre>&lt;/div>&lt;p>It should be something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#f92672">============&lt;/span>
Last updated: Sun May &lt;span style="color:#ae81ff">13&lt;/span> 13:57:43 &lt;span style="color:#ae81ff">2012&lt;/span>
Stack: openais
Current DC: node1 - partition with quorum
Version: 1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e
&lt;span style="color:#ae81ff">2&lt;/span> Nodes configured, &lt;span style="color:#ae81ff">2&lt;/span> expected votes
&lt;span style="color:#ae81ff">0&lt;/span> Resources configured.
&lt;span style="color:#f92672">============&lt;/span>
Online: &lt;span style="color:#f92672">[&lt;/span> node1 node2 &lt;span style="color:#f92672">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Give them some time to online if they&amp;rsquo;re offline.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put some main configurations to your cluster:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
configure
property stonith-enabled&lt;span style="color:#f92672">=&lt;/span>false
property no-quorum-policy&lt;span style="color:#f92672">=&lt;/span>ignore
commit
quit
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you&amp;rsquo;re getting some errors such as &lt;code>ERROR: cib-bootstrap-options: attribute last-lrm-refresh does not exist&lt;/code>, just proceed. It maybe a
&lt;a href="http://www.gossamer-threads.com/lists/linuxha/users/63183">bug&lt;/a>.&lt;/p>
&lt;p>We had to disable &lt;code>stonith&lt;/code> since we just want our Pacemaker to be running.
However, in real production environment, you really need to configure
&lt;code>stonith&lt;/code>, you can read more about it
&lt;a href="http://www.novell.com/support/kb/doc.php?id=7004817">here&lt;/a>.&lt;/p>
&lt;p>We also need to ignore quorum policy since we&amp;rsquo;re only using 2 nodes and you
can read more about it
&lt;a href="http://www.clusterlabs.org/wiki/FAQ#I_Killed_a_Node_but_the_Cluster_Didn.27t_Recover">here&lt;/a>.&lt;/p>
&lt;p>You can see your new configuration by running:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm configure show
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Which will output:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">node node1
node node2
property $id=&amp;#34;cib-bootstrap-options&amp;#34; \
dc-version=&amp;#34;1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e&amp;#34; \
cluster-infrastructure=&amp;#34;openais&amp;#34; \
expected-quorum-votes=&amp;#34;2&amp;#34; \
stonith-enabled=&amp;#34;false&amp;#34; \
last-lrm-refresh=&amp;#34;1336919205&amp;#34; \
no-quorum-policy=&amp;#34;ignore&amp;#34;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you accidentally put some wrong configurations and don&amp;rsquo;t know how to edit
it, you can use &lt;code>crm configure edit&lt;/code> to change your configurations directly
but this method is highly not recommended since it&amp;rsquo;s error-prone.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s time to configure our main/failover/cluster IP (our client will use
this IP, not the nodes IP):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
configure
primitive ip ocf:heartbeat:IPaddr params ip&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;192.168.1.100&amp;#34;&lt;/span> op monitor interval&lt;span style="color:#f92672">=&lt;/span>10s
commit
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>If everyting goes well, you should be able to ping the cluster IP (&lt;code>192.168.1.100&lt;/code>) and &lt;code>crm status&lt;/code> should yield this result:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">============
Last updated: Sun May 13 14:28:19 2012
Stack: openais
Current DC: node1 - partition with quorum
Version: 1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e
2 Nodes configured, 2 expected votes
1 Resources configured.
============
Online: [ node1 node2 ]
ip (ocf::heartbeat:IPaddr): Started node1
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>We&amp;rsquo;ll now setup MySQL monitoring with &lt;code>Pacemaker&lt;/code>. But before that, make sure you:&lt;/p>
&lt;p>Installed MySQL in both of the nodes.&lt;/p>
&lt;p>Able to connect to your MySQL from other than &lt;code>localhost&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mysql -u root -p -h 192.168.1.101
mysql -u root -p -h 192.168.1.102
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use this command to allow any host to connect to your MySQL:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">GRANT ALL PRIVILEGES ON *.* TO &amp;#39;root&amp;#39;@&amp;#39;%&amp;#39; IDENTIFIED BY &amp;#39;password&amp;#39; WITH GRANT OPTION;
FLUSH PRIVILEGES;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Created a database in &lt;code>Node 1&lt;/code> and &lt;code>Node 2&lt;/code>. For an example, a database
named &lt;code>node1&lt;/code> in &lt;code>Node 1&lt;/code> and &lt;code>node2&lt;/code> in &lt;code>Node 2&lt;/code>. This is just for
verification.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Add this resource:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
configure
primitive mysql ocf:heartbeat:mysql &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>params binary&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/usr/bin/mysqld_safe&amp;#34;&lt;/span> config&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/etc/my.cnf&amp;#34;&lt;/span> user&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;mysql&amp;#34;&lt;/span> pid&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/var/run/mysql/mysql.pid&amp;#34;&lt;/span> datadir&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/var/lib/mysql&amp;#34;&lt;/span> socket&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/var/run/mysql/mysql.sock&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>op monitor interval&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30s&amp;#34;&lt;/span> timeout&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;30s&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>op start interval&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> timeout&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;120&amp;#34;&lt;/span> &lt;span style="color:#ae81ff">\
&lt;/span>&lt;span style="color:#ae81ff">&lt;/span>op stop interval&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;0&amp;#34;&lt;/span> timeout&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;120&amp;#34;&lt;/span>
commit
quit
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The parameter above is purely based on the standard Slackware&amp;rsquo;s MySQL
package. So make sure you&amp;rsquo;ve created &lt;code>/etc/my.cnf&lt;/code> which is not available by
default. Just copy from the default file:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cp /etc/my-small.cnf /etc/my.cnf
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Your latest &lt;code>crm status&lt;/code> would show something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">============
Last updated: Mon May 14 01:13:23 2012
Stack: openais
Current DC: node1 - partition with quorum
Version: 1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e
2 Nodes configured, 2 expected votes
2 Resources configured.
============
Online: [ node1 node2 ]
ip (ocf::heartbeat:IPaddr): Started node1
mysql (ocf::heartbeat:mysql): Started node2
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, &lt;code>mysql&lt;/code> has been started on &lt;code>Node 2&lt;/code>. Actually it doesn&amp;rsquo;t
matter in which node it will start first (for this tutorial, not for the
production server), what important is that if one of the nodes is down, the
other node should start its MySQL automatically. You can test this situation
by running these commands in your &lt;code>Node 2&lt;/code> to simulate a node failure:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
node
standby
quit
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>crm status&lt;/code> would show something like this (give &lt;code>Node 1&lt;/code> some time before it starts its MySQL):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">============
Last updated: Mon May 14 01:21:12 2012
Stack: openais
Current DC: node1 - partition with quorum
Version: 1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e
2 Nodes configured, 2 expected votes
2 Resources configured.
============
Node node2: standby
Online: [ node1 ]
ip (ocf::heartbeat:IPaddr): Started node1
mysql (ocf::heartbeat:mysql): Started node1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Right now, your client can use the cluster IP (&lt;code>192.168.1.100&lt;/code>) to connect
to your MySQL. The client won&amp;rsquo;t realize which node it connected to. In this
case, he/she will connect to &lt;code>Node 2&lt;/code> if both of them (the nodes) are
online. If &lt;code>Node 2&lt;/code> is offline, &lt;code>192.168.1.100&lt;/code> will automatically connect
the client to MySQL in &lt;code>192.168.1.101&lt;/code>. If &lt;code>Node 1&lt;/code> is offline,
&lt;code>192.168.1.100&lt;/code> will automatically uses MySQL in &lt;code>Node 2&lt;/code> which is in
&lt;code>192.168.1.102&lt;/code>.&lt;/p>
&lt;p>To reonline &lt;code>Node 2&lt;/code>, just use these commands in your &lt;code>Node 2&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
node
online
quit
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>However, usually you want to control which MySQL will be up first, either in
&lt;code>Node 1&lt;/code> or in &lt;code>Node 2&lt;/code>. To make this happen, you need to use &lt;code>colocation&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">crm
configure
colocation ip-mysql inf: ip mysql
commit
quit
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;code>crm status&lt;/code> would show something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">============
Last updated: Mon May 14 01:26:41 2012
Stack: openais
Current DC: node1 - partition with quorum
Version: 1.1.1-b9b672590e79770afb63b9b455400d92fb6b5d9e
2 Nodes configured, 2 expected votes
2 Resources configured.
============
Online: [ node1 node2 ]
ip (ocf::heartbeat:IPaddr): Started node1
mysql (ocf::heartbeat:mysql): Started node1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>That means, your &lt;code>mysql&lt;/code> has been started on &lt;code>Node 1&lt;/code>. So, everytime
&lt;code>corosync&lt;/code> is started on both of the nodes, &lt;code>mysql&lt;/code> will be started on &lt;code>Node 1&lt;/code> due to the &lt;code>colocation&lt;/code> configuration.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Try turning off &lt;code>Node 1&lt;/code> or &lt;code>Node 2&lt;/code> and see how MySQL switches side from both of the nodes.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>I think that&amp;rsquo;s it, next tutorial should be mainly about DRBD. Good luck!&lt;/p></content></item><item><title>Using GRUB instead of LILO in Slackware</title><link>https://amree.github.io/2012/05/11/using-grub-instead-of-lilo-in-slackware/</link><pubDate>Fri, 11 May 2012 05:00:00 +0000</pubDate><guid>https://amree.github.io/2012/05/11/using-grub-instead-of-lilo-in-slackware/</guid><description>&lt;p>These are the steps I used to replace LILO with GRUB as the boot manager after
&lt;a href="https://amree.github.io/2012/05/11/upgrading-to-kernel-v3-for-slackware-v13.37/">upgrading my kernel to v3&lt;/a>.&lt;/p></description><content>&lt;p>These are the steps I used to replace LILO with GRUB as the boot manager after
&lt;a href="https://amree.github.io/2012/05/11/upgrading-to-kernel-v3-for-slackware-v13.37/">upgrading my kernel to v3&lt;/a>.&lt;/p>
&lt;p>Download directly and install:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">wget http://slackware.osuosl.org/slackware-13.37/extra/grub/grub-0.97-i486-9.txz
installpkg grub-0.97-i486-9.txz
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then jump to Step 3 and make sure you skip Step 4.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>If you haven&amp;rsquo;t set any mirror for your &lt;code>slackpkg&lt;/code>, you need to edit your mirror list:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">vim /etc/slackpkg/mirrors
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Add a mirror, for an example, I use the one from Oregon State University:
&lt;a href="http://slackware.osuosl.org/slackware-13.37/">http://slackware.osuosl.org/slackware-13.37/&lt;/a>&lt;/p>
&lt;p>Do not forget the trailing &lt;code>/&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run the update:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">slackpkg update
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Remove LILO&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">removepkg lilo
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install GRUB&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">slackpkg install grub
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Run configuration editor for GRUB (just like &lt;code>liloconfig&lt;/code>):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">grubconfig
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This is my working config from &lt;code>/boot/grub/menu.lst&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt"># GRUB configuration file &amp;#39;/boot/grub/menu.lst&amp;#39;.
# generated by &amp;#39;grubconfig&amp;#39;. Fri May 11 02:21:11 2012
#
# The backup copy of the MBR for drive &amp;#39;/dev/sda&amp;#39; is
# here &amp;#39;/boot/grub/mbr.sda.1594&amp;#39;. You can restore it like this.
# dd if=mbr.sda.1594 of=/dev/sda bs=512 count=1
#
# Start GRUB global section
#timeout 30
#color light-gray/blue black/light-gray
# End GRUB global section
# Linux bootable partition config begins
title slackware on (/dev/sda1)
root (hd0,0)
kernel /boot/vmlinuz root=/dev/sda1 ro vga=normal
initrd /boot/initrd-3.2.13-smp
# Linux bootable partition config ends
title --- For help press &amp;#39;c&amp;#39;, type: &amp;#39;help&amp;#39;
root (hd0)
title --- For usage examples, type: &amp;#39;cat /boot/grub/grub.txt&amp;#39;
root (hd0)
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s it :)&lt;/p>
&lt;h2 id="references">References:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://gnu-linux-slackware.blogspot.com/2009/07/booting-slackware-with-grub-gnu-grand.html">Booting Slackware with GRUB (GNU Grand Unified Bootloader)&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://www.linuxquestions.org/questions/slackware-14/how-do-i-modify-grub-to-boot-using-the-generic-kernel-863073/">How do I modify GRUB to boot using the generic kernel?&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Upgrading to Kernel v3 for Slackware v13.37</title><link>https://amree.github.io/2012/05/11/upgrading-to-kernel-v3-for-slackware-v13.37/</link><pubDate>Fri, 11 May 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/05/11/upgrading-to-kernel-v3-for-slackware-v13.37/</guid><description>&lt;p>It&amp;rsquo;s time for an upgrade!&lt;/p></description><content>&lt;p>It&amp;rsquo;s time for an upgrade!&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Get all the necessary packages:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">wget http://slackware.osuosl.org/slackware-current/slackware/a/kernel-generic-smp-3.2.13_smp-i686-1.txz
wget http://slackware.osuosl.org/slackware-current/slackware/a/kernel-modules-smp-3.2.13_smp-i686-1.txz
wget http://slackware.osuosl.org/slackware-current/slackware/a/lilo-23.2-i486-1.txz
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Change your run level:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">telinit &lt;span style="color:#ae81ff">1&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Install the kernel&amp;rsquo;s package:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">installpkg kernel-generic-smp-3.2.13_smp-i686-1.txz
kernel-modules-smp-3.2.13_smp-i686-1.txz
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Create initial ramdisk images for preloading modules:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /boot
mkinitrd -c -k 3.2.2-smp -m ext4 -f ext4 -r /dev/sda1 -o initrd-3.2.2-smp
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Edit your &lt;code>lilo.conf&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text"># Linux bootable partition config begins
image = /boot/vmlinuz-generic-smp-3.2.2-smp
initrd = /boot/initrd-3.2.2-smp
root = /dev/sda1
label = slackware
read-only # Partitions should be mounted read-only for checking
# Linux bootable partition config ends
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Reload &lt;code>lilo&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">lilo -v
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You&amp;rsquo;ll get:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">Fatal: Setup length exceeds 31 maximum; kernel setup will overwrite boot loader
&lt;/code>&lt;/pre>&lt;/div>&lt;blockquote>
&lt;p>It&amp;rsquo;s because the kernel has grown so large. You can fix it by installing a
fixed lilo from slackware-current, too&amp;quot; - from
&lt;a href="http://www.linuxquestions.org/questions/slackware-14/using-slackware-3-2-kernel-package-from-current-on-13-37-a-927856/">LQ&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">upgradepkg /root/lilo-23.2-i486-1.txz
lilo -v
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Reboot.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check your new kernel information:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">uname -a
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">Linux slackware 3.2.13-smp &lt;span style="color:#75715e">#1 SMP Fri Mar 23 23:21:11 CDT 2012 i686 Intel(R) Core(TM)2 Duo CPU P8800 @ 2.66GHz GenuineIntel GNU/Linux&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s all. Thanks for reading!&lt;/p></content></item><item><title>Redmine with Git and Subversion in HUSM</title><link>https://amree.github.io/2012/04/11/redmine-with-git-and-subversion-in-husm/</link><pubDate>Wed, 11 Apr 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/04/11/redmine-with-git-and-subversion-in-husm/</guid><description>&lt;p>It&amp;rsquo;s official, almost every piece of our codes in Hospital Universiti Sains
Malaysia (HUSM) has been versioned in either Git or Subversion (mostly the
latter). We&amp;rsquo;ve also linked all of the repositories into Redmine for easier
project management. It&amp;rsquo;s not really a walk in the park for us since this is the
first time we tried to do it this big.&lt;/p></description><content>&lt;p>It&amp;rsquo;s official, almost every piece of our codes in Hospital Universiti Sains
Malaysia (HUSM) has been versioned in either Git or Subversion (mostly the
latter). We&amp;rsquo;ve also linked all of the repositories into Redmine for easier
project management. It&amp;rsquo;s not really a walk in the park for us since this is the
first time we tried to do it this big.&lt;/p>
&lt;p>We&amp;rsquo;re hoping we can document our workloads using issues feature in Redmine.
Maybe we&amp;rsquo;re a few years late (most of our projects are already matured where no
big features added every week), but IMHO this is the perfect time since we&amp;rsquo;re in
the process of upgrading our core application in the hospital which is Lifeline.&lt;/p>
&lt;p>So, here are some fun facts about our Redmine + (Git/Subversion):&lt;/p>
&lt;ol>
&lt;li>
&lt;p>We&amp;rsquo;re using the latest Redmine v1.3.2 (through its Git&amp;rsquo;s distribution).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s being served through Apache on our Slackware v13.37 box.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The Ruby and the gems are being managed with RVM for easier installation.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>It&amp;rsquo;s using an old desktop PC model Acer M460 (2.4 GHz).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>With advance Git and Subversion integrations, the repositories authentication
are using the usernames and passwords from the Redmine itself.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Our Git repositories are being served using Smart HTTP Git protocol.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There are about 56 repositories in it which comprises different type of code
languages such as Java, C++, Ruby, HTML, JavaScript, CSS and Pascal.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For backups, we&amp;rsquo;re using RAID 1 for the hardisks. &lt;code>rsync&lt;/code> and &lt;code>mysqldump&lt;/code> are
being ran three times a day. There&amp;rsquo;s no offsite backup yet.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>There&amp;rsquo;re about 40++ projects in the Redmine right now (still increasing).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>The repositories are hosting codes from different programming languages such
as Pascal, Java, C++, Ruby and PHP. So, we need to be extra careful about
the &lt;code>.gitigore&lt;/code> and &lt;code>svn:ignore&lt;/code> configurations.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Tutorials has been written for newcomers on how to use version control for
Netbeans, Delphi and also Qt Creator. For the time being, everyone is
encourage to use their IDE to do all the commits and not doing it through
command line unless they know what they are doing.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Most developers chose Subversion due to its low lurning curve.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>In the next few days (or weeks), I&amp;rsquo;m going to post the configuration that I used
to make the intergration between Git/Subversion with Redmine. It seems that the
wiki from Redmine itself is not complete enough and I had to dig deeper into
other websites. So, hopefully it will help anyone who&amp;rsquo;s lost just like me
before.&lt;/p>
&lt;p>By the way, you can view a screenshot from the Redmine&amp;rsquo;s projects page
&lt;a href="https://twitter.com/#!/AmreeZaid/status/187829585759580160">here&lt;/a>.&lt;/p></content></item><item><title>See Full Referrer URL in Google Analytics</title><link>https://amree.github.io/2012/01/21/see-full-referrer-url-in-google-analytics/</link><pubDate>Sat, 21 Jan 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/01/21/see-full-referrer-url-in-google-analytics/</guid><description>Most of the tutorial on the web focuses on the old version of Google Analytics. So, after poking around Google Analytics, I found out that there are two ways to see it (I stopped looking once I found the second method, so, there might be more).
Go to Custom Reporting tab.
Click Edit.
If you&amp;rsquo;ve already added a tab, just click &amp;ldquo;+add report tab&amp;rdquo; for this purpose.</description><content>&lt;p>Most of the tutorial on the web focuses on the old version of Google Analytics.
So, after poking around Google Analytics, I found out that there are two ways to
see it (I stopped looking once I found the second method, so, there might be
more).&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Go to Custom Reporting tab.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click Edit.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you&amp;rsquo;ve already added a tab, just click &amp;ldquo;+add report tab&amp;rdquo; for this purpose.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put the name of this report.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Choose Flat Table as the type.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For the Dimensions, search for Full Referrer.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For the Metrics, use Unique Visitors (or anything you see fits).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Click Save.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s it. You can refer to the screenshot below if you&amp;rsquo;re feeling lost:&lt;/p>
&lt;p>&lt;img src="https://amree.github.io/images/posts/2012-01-21-ga.png" alt="image">&lt;/p>
&lt;p>Good luck!&lt;/p></content></item><item><title>A Not So Simple Introduction to Git</title><link>https://amree.github.io/2012/01/07/a-not-so-simple-introduction-to-git/</link><pubDate>Sat, 07 Jan 2012 02:00:00 +0000</pubDate><guid>https://amree.github.io/2012/01/07/a-not-so-simple-introduction-to-git/</guid><description>&lt;p>Found another presentation from Speaker Deck about Git.&lt;/p></description><content>&lt;p>Found another presentation from Speaker Deck about Git.&lt;/p>
&lt;script src="http://speakerdeck.com/embed/4ecfc649eee53a005000b88b.js">&lt;/script></content></item><item><title>A Good Introduction to Agile and Scrum</title><link>https://amree.github.io/2012/01/07/a-good-introduction-to-agile-and-scrum/</link><pubDate>Sat, 07 Jan 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/01/07/a-good-introduction-to-agile-and-scrum/</guid><description>&lt;p>Found this in Speaker Deck. Love the simple explanation.&lt;/p></description><content>&lt;p>Found this in Speaker Deck. Love the simple explanation.&lt;/p>
&lt;script src="http://speakerdeck.com/embed/4ea7b7b86428bd0054008cd4.js">&lt;/script></content></item><item><title>Renaming Author in Git</title><link>https://amree.github.io/2012/01/05/renaming-author-in-git/</link><pubDate>Thu, 05 Jan 2012 00:00:00 +0000</pubDate><guid>https://amree.github.io/2012/01/05/renaming-author-in-git/</guid><description>&lt;p>Recently, I noticed that there are other authors with a different name in my
Git&amp;rsquo;s history. Apparently, I&amp;rsquo;ve accidentally committed into the repository using
a different author&amp;rsquo;s name and email. This is mainly due to the way Netbeans
stores author&amp;rsquo;s information history.&lt;/p></description><content>&lt;p>Recently, I noticed that there are other authors with a different name in my
Git&amp;rsquo;s history. Apparently, I&amp;rsquo;ve accidentally committed into the repository using
a different author&amp;rsquo;s name and email. This is mainly due to the way Netbeans
stores author&amp;rsquo;s information history.&lt;/p>
&lt;p>&lt;img src="https://amree.github.io/images/posts/2011-01-05-diff.png" alt="image">&lt;/p>
&lt;p>So, in order to fix it, I ran this little script from Github in my master
branch.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e">#!/bin/sh
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
git filter-branch --env-filter &lt;span style="color:#e6db74">&amp;#39;
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74">an=&amp;#34;$GIT_AUTHOR_NAME&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">am=&amp;#34;$GIT_AUTHOR_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">cn=&amp;#34;$GIT_COMMITTER_NAME&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">cm=&amp;#34;$GIT_COMMITTER_EMAIL&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74">if [ &amp;#34;$GIT_COMMITTER_EMAIL&amp;#34; = &amp;#34;your@email.to.match&amp;#34; ]
&lt;/span>&lt;span style="color:#e6db74">then
&lt;/span>&lt;span style="color:#e6db74"> cn=&amp;#34;Your New Committer Name&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> cm=&amp;#34;Your New Committer Email&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">fi
&lt;/span>&lt;span style="color:#e6db74">if [ &amp;#34;$GIT_AUTHOR_EMAIL&amp;#34; = &amp;#34;your@email.to.match&amp;#34; ]
&lt;/span>&lt;span style="color:#e6db74">then
&lt;/span>&lt;span style="color:#e6db74"> an=&amp;#34;Your New Author Name&amp;#34;
&lt;/span>&lt;span style="color:#e6db74"> am=&amp;#34;Your New Author Email&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">fi
&lt;/span>&lt;span style="color:#e6db74">
&lt;/span>&lt;span style="color:#e6db74">export GIT_AUTHOR_NAME=&amp;#34;$an&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">export GIT_AUTHOR_EMAIL=&amp;#34;$am&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">export GIT_COMMITTER_NAME=&amp;#34;$cn&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">export GIT_COMMITTER_EMAIL=&amp;#34;$cm&amp;#34;
&lt;/span>&lt;span style="color:#e6db74">&amp;#39;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To push it into the server, I need to use &lt;code>git push -f&lt;/code> instead of &lt;code>git push&lt;/code>.
If you use the latter command, you&amp;rsquo;ll end up with a merged history (every commit
will have another one identical to it).&lt;/p>
&lt;p>If you use Redmine, you may need to fetch change set. Just run this command in your Redmine&amp;rsquo;s directory:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">script/runner &amp;#34;Repository.fetch_changesets&amp;#34; -e production
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Netbeans committer&amp;rsquo;s info are stored in (change the path based on your version):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">~/.netbeans/7.0/config/Preferences/org/netbeans/modules/git.properties
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="references">References:&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="http://theelitist.net/git-change-revision-author">http://theelitist.net/git-change-revision-author&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://help.github.com/change-author-info/">http://help.github.com/change-author-info/&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Git Remote Commands</title><link>https://amree.github.io/2011/12/11/git-remote-commands/</link><pubDate>Sun, 11 Dec 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/12/11/git-remote-commands/</guid><description>&lt;p>These are some of the &lt;code>git&lt;/code> commands that I usually use.&lt;/p></description><content>&lt;p>These are some of the &lt;code>git&lt;/code> commands that I usually use.&lt;/p>
&lt;p>View some remote &lt;strong>information&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git remote show origin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>List&lt;/strong> all remote branch:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git branch -r
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Pushing&lt;/strong> a branch to the remote:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push origin newfeature
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or when you want to &lt;strong>push in the checkout branch&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push origin HEAD
&lt;/code>&lt;/pre>&lt;/div>&lt;p>And use &lt;code>-u&lt;/code> to &lt;strong>push and track&lt;/strong> the remote branch:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push -u origin newfeature
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make an existing git branch to &lt;strong>track a remote&lt;/strong> branch:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git branch --set-upstream newfeature1 origin/newfeature1
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Deleting&lt;/strong> a remote branch:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git push origin :newfeature
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Refresh&lt;/strong> remote branch list:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git remote prune origin
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;strong>Checkout&lt;/strong> a remote branch and &lt;strong>track&lt;/strong> it:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">git checkout -t origin/newfeature
&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>How to Read MyKad</title><link>https://amree.github.io/2011/12/05/how-to-read-mykad/</link><pubDate>Mon, 05 Dec 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/12/05/how-to-read-mykad/</guid><description>&lt;p>I&amp;rsquo;ve decided to merge posts about reading MyKad from my previous blog into a
single post.&lt;/p>
&lt;p>Notes:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The &lt;strong>original codes were written by Xenon&lt;/strong> from
&lt;a href="http://forum.lowyat.net/">Lowyat.net&lt;/a>. Somehow, he managed to reverse
engineer MyKad&amp;rsquo;s APDU so that we can read it without buying any SDK.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This application &lt;strong>only&lt;/strong> reads data from Jabatan Pendaftaran Negara (JPN).&lt;/p>
&lt;/li>
&lt;/ol></description><content>&lt;p>I&amp;rsquo;ve decided to merge posts about reading MyKad from my previous blog into a
single post.&lt;/p>
&lt;p>Notes:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>The &lt;strong>original codes were written by Xenon&lt;/strong> from
&lt;a href="http://forum.lowyat.net/">Lowyat.net&lt;/a>. Somehow, he managed to reverse
engineer MyKad&amp;rsquo;s APDU so that we can read it without buying any SDK.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>This application &lt;strong>only&lt;/strong> reads data from Jabatan Pendaftaran Negara (JPN).&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Xenon also wrote two small example applications to read MyKad. I&amp;rsquo;ve listed them
based on the programming language. Click on the link to download it:&lt;/p>
&lt;ol>
&lt;li>&lt;a href="https://github.com/amree/mykad-c">Visual C&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/amree/mykad-vb.net">Visual Basic .NET&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Since there&amp;rsquo;s no Java implementation of the code yet, I&amp;rsquo;ve decided to develop
one. You can also get the source code from my
&lt;a href="http://github.com/amree/mykad-java">Github&lt;/a>. It&amp;rsquo;s written using Netbeans.&lt;/p>
&lt;p>I&amp;rsquo;m not going to give explanation about the code. Instead, I&amp;rsquo;m going to guide
you guys on how to setup your system (Linux and Windows) so that you can read
the Java application to read a MyKad.&lt;/p>
&lt;h1 id="windows">Windows&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Download &lt;a href="http://www.musclecard.com/middle.html">Windows binary&lt;/a> of JPC/SC Java API.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Download the application which is in Netbeans project format from my Github.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You &lt;strong>must include&lt;/strong> &lt;code>jpcsc.jar&lt;/code> as the library. You can get the file from Step 1.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>You also &lt;strong>must put&lt;/strong> &lt;code>jpcsc.dll&lt;/code> into your main project folder. Furthermore,
if you want to distribute the application, you need to put it together with
your main jar file. You can also get the file from Step 1.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Plug in your reader (obviously).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run the application. I&amp;rsquo;d recommend you run it through Netbeans.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Insert a MyKad.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Wait until the application finish reading it (usually once the LED stop
blinking).&lt;/p>
&lt;/li>
&lt;li>
&lt;p>A GUI will be displayed presenting your MyKad data.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If there&amp;rsquo;s no data showing, there&amp;rsquo;s a possibility that your MyKad chip is
spoiled.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h1 id="linux">Linux&lt;/h1>
&lt;ol>
&lt;li>
&lt;p>Login as a &lt;strong>root&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Download &lt;a href="http://pcsclite.alioth.debian.org/">PCSC Lite&lt;/a> and install it. You
need to put some parameters in your &lt;code>./configure&lt;/code> if you want to enable
&lt;code>libusb&lt;/code> support. Please check the &lt;code>README&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">tar xvjf pcsc-lite-1.8.1.tar.bz2
cd pcsc-lite-1.8.1
./configure --enable-libusb --disable-libudev
make
make install
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Download and install your reader&amp;rsquo;s driver. I&amp;rsquo;m using &lt;a href="http://www.hidglobal.com/prod_detail.php?prod_id=171">OMNIKEY 5321 USB&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get &lt;a href="http://www.musclecard.com/middle.html">Windows binary&lt;/a> of JPC/SC Java API. It&amp;rsquo;s for Windows but it also has a precompiled Linux library in it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Extract, copy and update:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">unzip jpcsc-0.8.0.zip
cd jpcsc/bin/linux
cp libjpcsc.so /usr/lib
ldconfig
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Start the pcsc service:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">pcscd -d -f
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-text" data-lang="text">00000000 pcscdaemon.c:233:main() pcscd set to foreground with debug send to stdout
00000044 configfile.l:287:DBGetReaderList() Parsing conf file: /usr/local/etc/reader.conf.d
00000008 pcscdaemon.c:518:main() pcsc-lite 1.8.1 daemon ready.
00001566 hotplug_libusb.c:514:HPAddHotPluggable() Adding USB device: 4:2:0
00008631 readerfactory.c:934:RFInitializeReader() Attempting startup of OMNIKEY CardMan 5x21 (USB iClass Reader) 00 00 using /usr/local/lib/pcsc/drivers/ifdokrfid_lnx_i
00000179 readerfactory.c:824:RFBindFunctions() Loading IFD Handler 3.0 HID HID Global OMNIKEY RFID IA32 v2.9.1
00300863 readerfactory.c:296:RFAddReader() Using the reader polling thread
00001975 readerfactory.c:934:RFInitializeReader() Attempting startup of OMNIKEY CardMan 5x21 (USB iClass Reader) 00 01 using /usr/local/lib/pcsc/drivers/ifdokrfid_lnx_i
00000012 readerfactory.c:738:RFLoadReader() Reusing already loaded driver for /usr/local/lib/pcsc/drivers/ifdokrfid_lnx_i686-2.9.1.bundle/Contents/Linux/ifdokrfid.so
00000014 readerfactory.c:824:RFBindFunctions() Loading IFD Handler 3.0 HID HID Global OMNIKEY RFID IA32 v2.9.1
00424985 readerfactory.c:453:RFAddReader() Using the reader polling thread
00444313 readerfactory.c:1301:RFWaitForReaderInit() Waiting init for reader: OMNIKEY CardMan 5x21 (USB iClass Reader) 00 01
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Run the Java application, it should be working right now.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s it, again, the full credit should goes to Xenon :)&lt;/p></content></item><item><title>HUSM at Malaysia Open Source Conference 2011</title><link>https://amree.github.io/2011/07/12/husm-at-malaysia-open-source-conference-2011/</link><pubDate>Tue, 12 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/07/12/husm-at-malaysia-open-source-conference-2011/</guid><description>&lt;p>On the 5th of July 2011, Hospital Universiti Sains Malaysia (HUSM) has been
chosen as one of the speakers in Malaysia Open Source Conference 2011. It was
presented by &lt;a href="http://my.linkedin.com/in/yusdirman">Mr Yusdirman Bin Yusoff&lt;/a> as
“Open Source in Health Care: HUSM 10 Years of Innovation”.&lt;/p></description><content>&lt;p>On the 5th of July 2011, Hospital Universiti Sains Malaysia (HUSM) has been
chosen as one of the speakers in Malaysia Open Source Conference 2011. It was
presented by &lt;a href="http://my.linkedin.com/in/yusdirman">Mr Yusdirman Bin Yusoff&lt;/a> as
“Open Source in Health Care: HUSM 10 Years of Innovation”.&lt;/p>
&lt;p>Basically it’s about &lt;strong>what&lt;/strong> and &lt;strong>how&lt;/strong> HUSM as one among few hospitals in
Malaysia managed to develop its own Total Hospital Information System thus saved
millions ringgit of taxpayers money. This is actually the first step for us (IT
Unit, HUSM) to show to the world what we have done in this 10 years where most
hospitals not willing to do.&lt;/p>
&lt;p>The slide can be accessed at &lt;a href="https://speakerdeck.com/amree/open-source-in-healthcare-husm-10-years-of-innovative-effort">https://speakerdeck.com/amree/open-source-in-healthcare-husm-10-years-of-innovative-effort&lt;/a>&lt;/p></content></item><item><title>How to enable MySQL Support in Qt SDK for Windows</title><link>https://amree.github.io/2011/07/11/how-to-enable-mysql-support-in-qt-sdk-for-windows/</link><pubDate>Mon, 11 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/07/11/how-to-enable-mysql-support-in-qt-sdk-for-windows/</guid><description>&lt;p>It has been quite a while since I wrote the previous guide. Since that
particular post gained a lot of visitors, I decided to write a new guide based
on the new Qt SDK and MySQL so that it will help people with new version for
both softwares.&lt;/p></description><content>&lt;p>It has been quite a while since I wrote the previous guide. Since that
particular post gained a lot of visitors, I decided to write a new guide based
on the new Qt SDK and MySQL so that it will help people with new version for
both softwares.&lt;/p>
&lt;p>Download Qt SDK and install it. In my case, I installed it at &lt;code>C:\QtSDK&lt;/code>. You
must make sure that you’ve chosen to install Qt Sources. If you have Qt SDK
installed but you haven’t install Qt sources, just go to this path to install
it.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Start &amp;gt; All Programs &amp;gt; Qt SDK &amp;gt; Maintain Qt SDK
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://amree.github.io/images/posts/2011-07-11-qt.png" alt="image">&lt;/p>
&lt;p>Download MySQL and install it. In my case, I choose to install it at:&lt;/p>
&lt;p>C:\Program Files (x86)\MySQL\MySQL Server 5.5.&lt;/p>
&lt;p>You don’t need to install everything if you want to compile the plugin. Make
sure you will at least choose to install Client C API Library.&lt;/p>
&lt;p>&lt;img src="https://amree.github.io/images/posts/2011-07-11-mysql.png" alt="image">&lt;/p>
&lt;p>Open:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Start &amp;gt; All Programs &amp;gt; Qt SDK &amp;gt; Desktop &amp;gt; Qt 4.7.3 for Desktop (MingW)**
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run these commands (change according to your environment):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bat" data-lang="bat">&lt;span style="color:#66d9ef">set&lt;/span> mysql=C:\PROGRA~2\MySQL\MYSQLS~1.5
&lt;span style="color:#66d9ef">cd&lt;/span> \
&lt;span style="color:#66d9ef">cd&lt;/span> QtSDK\QtSources\4.7.3\src\plugins\sqldrivers\mysql\
qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\include&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\lib\libmysql.lib&amp;#34;&lt;/span> -o Makefile mysql.pro
mingw32-make
qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\include&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=&lt;/span>%mysql%&lt;span style="color:#e6db74">\lib\libmysql.lib&amp;#34;&lt;/span> -o Makefile mysql.pro &lt;span style="color:#e6db74">&amp;#34;CONFIG+=release&amp;#34;&lt;/span>
mingw32-make
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should be able to run these commands &lt;strong>without any error&lt;/strong>.&lt;/p>
&lt;p>You’ll find two directories (&lt;strong>debug&lt;/strong> and &lt;strong>release&lt;/strong>) created in the current
directory.&lt;/p>
&lt;p>In &lt;strong>debug&lt;/strong> directory, you’ll find &lt;code>libqsqlmysqld4.a&lt;/code> and &lt;code>qsqlmysqld4.dll&lt;/code>.&lt;/p>
&lt;p>Meanwhile, in &lt;strong>release&lt;/strong> directory, you’ll find &lt;code>libqsqlmysql4.a&lt;/code> and
&lt;code>qsqlmysql4.dll&lt;/code>.&lt;/p>
&lt;p>&lt;strong>Copy all these 4 files into&lt;/strong>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">C:\QtSDK\Desktop\Qt\4.7.3\mingw\plugins\sqldrivers
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Copy &lt;code>libmysql.dll&lt;/code> (found in your MySQL installation directory) into C:\Windows.&lt;/p>
&lt;p>Create new project and put these codes to test your new plugin&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QApplication&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QtSql&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[])
{
QCoreApplication a(argc, argv);
qDebug() &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> QSqlDatabase&lt;span style="color:#f92672">::&lt;/span>drivers();
&lt;span style="color:#66d9ef">return&lt;/span> a.exec();
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you have QtSql Module in your project configuration file (.pro file)&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">QT += sql
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You’ll get these outputs showing that your Qt has supports for MySQL:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(&amp;#34;QSQLITE&amp;#34;, &amp;#34;QMYSQL3&amp;#34;, &amp;#34;QMYSQL&amp;#34;, &amp;#34;QODBC3&amp;#34;, &amp;#34;QODBC&amp;#34;)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Things to watch out for:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>&lt;strong>You can’t use MySQL 64 Bit (at the moment)&lt;/strong> to compile the plugin.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Make sure you’ll &lt;strong>use short path&lt;/strong> type if you’ve installed MySQL into directory’s name containing spaces.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;strong>Load sql module&lt;/strong> in your .pro file.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>11/7/2011 – Windows 64 Bit, MySQL Server 5.5.1 32 Bit (Community Version) and Qt 4.7.3.&lt;/li>
&lt;/ul></content></item><item><title>A Simple Working Example for Qt NCReport</title><link>https://amree.github.io/2011/07/09/a-simple-working-example-for-qt-ncreport/</link><pubDate>Sat, 09 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/07/09/a-simple-working-example-for-qt-ncreport/</guid><description>&lt;p>This should help you with NCReport in Qt.&lt;/p></description><content>&lt;p>This should help you with NCReport in Qt.&lt;/p>
&lt;h2 id="windows">Windows&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Download NCReport with MingW for Windows.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install NCReport at&lt;/p>
&lt;pre>&lt;code>C:\NCReport\2.6.1.mingw.eval
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Get the full &lt;a href="https://github.com/amree/ncreport-example">source code&lt;/a> of the project at my Github.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go to Projects (bar at the left) &amp;gt; Run Settings &amp;gt; Click Details on the Run
Environment &amp;gt; Edit PATH’s variable and append the following line at the end
of the string.&lt;/p>
&lt;pre>&lt;code>;C:\NCReport\2.6.1.mingw.eval\bin
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>
&lt;p>Run the project in &lt;strong>Debug&lt;/strong> and &lt;strong>Release&lt;/strong> mode. You should be able to run the report by clicking the button.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>Windows 7 (64 bit)&lt;/li>
&lt;li>NCReport 2.6.1 with MingW for Windows&lt;/li>
&lt;li>QtSDK 1.1.2&lt;/li>
&lt;li>Qt 4.7.3&lt;/li>
&lt;li>Qt Creator 2.2.1&lt;/li>
&lt;/ul>
&lt;h2 id="linux">Linux&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Download NCReport for Linux.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install NCReport at &lt;code>/opt/ncreport&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Get the full &lt;a href="https://github.com/amree/ncreport-example">source code&lt;/a> of the project at my Github.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Run the project in &lt;strong>Debug&lt;/strong> and &lt;strong>Release&lt;/strong> mode. You should be able to run the report by clicking the button.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>Tested on:&lt;/p>
&lt;ul>
&lt;li>Slackware 13.37 (32 Bit)&lt;/li>
&lt;li>NCReport 2.6.1 for Linux&lt;/li>
&lt;li>QtSDK 1.1.2&lt;/li>
&lt;li>Qt 4.7.3&lt;/li>
&lt;li>Qt Creator 2.2.1&lt;/li>
&lt;/ul></content></item><item><title>Using Sybase with Ruby on Rails on Linux</title><link>https://amree.github.io/2011/07/01/using-sybase-with-ruby-on-rails-on-linux/</link><pubDate>Fri, 01 Jul 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/07/01/using-sybase-with-ruby-on-rails-on-linux/</guid><description>&lt;p>This guide will help you (mostly will help me in the future) to configure your
Ruby on Rails to support connection to Sybase.&lt;/p></description><content>&lt;p>This guide will help you (mostly will help me in the future) to configure your
Ruby on Rails to support connection to Sybase.&lt;/p>
&lt;p>I wrote this tutorial after everything’s good, so, I might miss a few steps that
I’ve forgotten. Feel free to comment about it. With some adjustments, this guide
&lt;strong>will also works with Mac OS X&lt;/strong>.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Install FreeTDS. For Slackware users, you can get Slackbuild script at
&lt;a href="http://slackbuilds.org/repository/13.37/development/freetds/">http://slackbuilds.org/repository/13.37/development/freetds/&lt;/a>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Edit &lt;code>/etc/freetds/freetds.conf&lt;/code> and put your database configurations in it:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#66d9ef">[myserver]&lt;/span>
&lt;span style="color:#a6e22e">host&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">myserver.com&lt;/span>
&lt;span style="color:#a6e22e">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">5000&lt;/span>
&lt;span style="color:#a6e22e">tds version&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">5.0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Test the configuration, you should get something like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">$ tsql -S myserver -U username
locale is &amp;#34;C&amp;#34;
locale charset is &amp;#34;ANSI_X3.4-1968&amp;#34;
using default charset &amp;#34;ISO-8859-1&amp;#34;
Msg 5704 (severity 10, state 1) from ???:
&amp;#34;Changed client character set setting to &amp;#39;iso_1&amp;#39;.
&amp;#34;
1&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Put this gems in your &lt;code>Gemfile&lt;/code> and run &lt;code>bundle&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">gem &lt;span style="color:#e6db74">&amp;#39;arel-sybase-visitor&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">:git&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;https://github.com/ifad/arel-sybase-visitor&amp;#39;&lt;/span>
gem &lt;span style="color:#e6db74">&amp;#39;activerecord-sybase-adapter&amp;#39;&lt;/span>, &lt;span style="color:#e6db74">:git&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;https://github.com/ifad/activerecord-sybase-adapter&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>An example configuration for your &lt;code>database.yml&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-yml" data-lang="yml">&lt;span style="color:#f92672">development&lt;/span>:
&lt;span style="color:#f92672">adapter&lt;/span>: &lt;span style="color:#ae81ff">sybase&lt;/span>
&lt;span style="color:#f92672">dataserver&lt;/span>: &lt;span style="color:#ae81ff">myserver&lt;/span>
&lt;span style="color:#f92672">username&lt;/span>:
&lt;span style="color:#f92672">password&lt;/span>:
&lt;span style="color:#f92672">database&lt;/span>:
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>You can try some query using your &lt;code>rails console&lt;/code> to make sure everything
works fine.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If you&amp;rsquo;re trying to connect from your &lt;code>irb&lt;/code> directly without using
ActiveRecord you may want to put additional parameters. This works for me:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ruby" data-lang="ruby">client &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">TinyTds&lt;/span>&lt;span style="color:#f92672">::&lt;/span>&lt;span style="color:#66d9ef">Client&lt;/span>&lt;span style="color:#f92672">.&lt;/span>new(
&lt;span style="color:#e6db74">:username&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#e6db74">:password&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;&amp;#39;&lt;/span>,
&lt;span style="color:#e6db74">:dataserver&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;myserver&amp;#39;&lt;/span>,
&lt;span style="color:#e6db74">:tds_version&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;100&amp;#39;&lt;/span>,
&lt;span style="color:#e6db74">:encoding&lt;/span> &lt;span style="color:#f92672">=&amp;gt;&lt;/span> &lt;span style="color:#e6db74">&amp;#39;iso_1&amp;#39;&lt;/span>
)
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>That&amp;rsquo;s it, good luck!&lt;/p></content></item><item><title>Running Multiple MySQL on a Single Server</title><link>https://amree.github.io/2011/03/15/running-multiple-mysql-on-a-single-server/</link><pubDate>Tue, 15 Mar 2011 00:00:00 +0000</pubDate><guid>https://amree.github.io/2011/03/15/running-multiple-mysql-on-a-single-server/</guid><description>&lt;p>I’m pretty sure I’m going to forget these steps, so, just to be safe, I’m
putting it here. I’m dividing this tutorial into two sections, one for default
MySQL that comes from Slackware and the other one is for new MySQL.&lt;/p></description><content>&lt;p>I’m pretty sure I’m going to forget these steps, so, just to be safe, I’m
putting it here. I’m dividing this tutorial into two sections, one for default
MySQL that comes from Slackware and the other one is for new MySQL.&lt;/p>
&lt;h2 id="using-the-default-mysql">Using the Default MySQL&lt;/h2>
&lt;p>We need to create separate (different from the default) directory for the data
to be stored. I’m going to create a new one for it. I’m going to name the
directory as &lt;code>mysql-1&lt;/code>. Make sure you use full path when running
&lt;code>mysql_install_db&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /var/lib
mkdir mysql-1
chown -R mysql.mysql mysql-1
mysql_install_db --datadir&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1 --user&lt;span style="color:#f92672">=&lt;/span>mysql
&lt;/code>&lt;/pre>&lt;/div>&lt;p>We also need a new configuration file so that it won’t clash with the default
MySQL.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cp /etc/my-small.cnf /etc/my-1.cnf
nano /etc/my-1.cnf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>These are the settings that I’ve changed from the default file (other settings
remain unchanged).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#66d9ef">[client]&lt;/span>
&lt;span style="color:#a6e22e">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3307&lt;/span>
&lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/run/mysql/mysql-1.sock&lt;/span>
&lt;span style="color:#66d9ef">[mysqld]&lt;/span>
&lt;span style="color:#a6e22e">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3307&lt;/span>
&lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/run/mysql/mysql-1.sock&lt;/span>
&lt;span style="color:#a6e22e">server-id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">10&lt;/span>
&lt;span style="color:#a6e22e">innodb_data_home_dir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/lib/mysql-1/&lt;/span>
&lt;span style="color:#a6e22e">innodb_log_group_home_dir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/lib/mysql-1/&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To run our newly configured MySQL instance, use this command:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">/usr/bin/mysqld_safe --defaults-file&lt;span style="color:#f92672">=&lt;/span>/etc/my-1.cnf --datadir&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1 &amp;amp;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>By checking background process, you should see something like this&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ ps ax | grep mysql
&lt;span style="color:#ae81ff">23416&lt;/span> pts/1 S 0:00 /bin/sh /usr/bin/mysqld_safe --defaults-file&lt;span style="color:#f92672">=&lt;/span>/etc/my-1.cnf --datadir&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1
&lt;span style="color:#ae81ff">23515&lt;/span> pts/1 Sl 0:00 /usr/libexec/mysqld --defaults-file&lt;span style="color:#f92672">=&lt;/span>/etc/my-1.cnf --basedir&lt;span style="color:#f92672">=&lt;/span>/usr --datadir&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1 --user&lt;span style="color:#f92672">=&lt;/span>mysql --log-error&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1/eebox.err --pid-file&lt;span style="color:#f92672">=&lt;/span>/var/lib/mysql-1/eebox.pid --socket&lt;span style="color:#f92672">=&lt;/span>/var/run/mysql/mysql-1.sock --port&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#ae81ff">3307&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Time for some test, we need to make sure we’re connecting to the correct server. One way to do this is by checking the &lt;code>server_id&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">$ mysql -u root -h 127.0.0.1 -P &lt;span style="color:#ae81ff">3307&lt;/span>
mysql&amp;gt; SHOW VARIABLES LIKE &lt;span style="color:#e6db74">&amp;#34;server_id&amp;#34;&lt;/span>;
+---------------+-------+
| Variable_name | Value |
+---------------+-------+
| server_id | &lt;span style="color:#ae81ff">10&lt;/span> |
+---------------+-------+
&lt;span style="color:#ae81ff">1&lt;/span> row in set &lt;span style="color:#f92672">(&lt;/span>0.00 sec&lt;span style="color:#f92672">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As you can see, we have the same server_id as we specified in our my-1.cnf. You can use this command to shut it down.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">mysqladmin -h 127.0.0.1 -P &lt;span style="color:#ae81ff">3307&lt;/span> shutdown
&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="using-new-downloaded-mysql">Using new Downloaded MySQL&lt;/h2>
&lt;p>Download &lt;a href="http://dev.mysql.com/downloads/">MySQL Download&lt;/a> &amp;gt; MySQL Community Server &amp;gt; Linux Generic &amp;gt; Linux – Generic 2.6 (x86, 32-bit), Compressed TAR Archive&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cp mysql-5.5.9-linux2.6-i686.tar.gz /opt
cd opt
tar zxvf mysql-5.5.9-linux2.6-i686.tar.gz
mv mysql-5.5.9-linux2.6-i686 mysql
cd mysql
chown -R mysql.mysql .
./scripts/mysql_install_db --user&lt;span style="color:#f92672">=&lt;/span>mysql
cp support-files/my-small.cnf /etc/my-2.cnf
nano /etc/my-2.cnf
&lt;/code>&lt;/pre>&lt;/div>&lt;p>/etc/my-2.cnf&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-ini" data-lang="ini">&lt;span style="color:#66d9ef">[client]&lt;/span>
&lt;span style="color:#a6e22e">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3308&lt;/span>
&lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/run/mysql/mysql-2.sock&lt;/span>
&lt;span style="color:#66d9ef">[mysqld]&lt;/span>
&lt;span style="color:#a6e22e">port&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">3308&lt;/span>
&lt;span style="color:#a6e22e">socket&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/run/mysql/mysql-2.sock&lt;/span>
&lt;span style="color:#a6e22e">server-id&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">20&lt;/span>
&lt;span style="color:#a6e22e">innodb_data_home_dir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/lib/mysql-1/&lt;/span>
&lt;span style="color:#a6e22e">innodb_log_group_home_dir&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">/var/lib/mysql-1/&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To run it, you need to specify some parameters&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">/opt/mysql/bin/mysqld --defaults-file&lt;span style="color:#f92672">=&lt;/span>/etc/my-2.cnf --basedir&lt;span style="color:#f92672">=&lt;/span>/opt/mysql --datadir&lt;span style="color:#f92672">=&lt;/span>/opt/mysql/data --plugin-dir&lt;span style="color:#f92672">=&lt;/span>/opt/mysql/lib/plugin --user&lt;span style="color:#f92672">=&lt;/span>mysql --log-error&lt;span style="color:#f92672">=&lt;/span>/opt/mysql/data/eebox.err
&lt;/code>&lt;/pre>&lt;/div>&lt;p>To shut it down, you can use the following command&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">./bin/mysqladmin -h 127.0.0.1 -P &lt;span style="color:#ae81ff">3308&lt;/span> shutdown
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can test the server connection just like the method I used above.&lt;/p>
&lt;p>That&amp;rsquo;s it, good luck!&lt;/p></content></item><item><title>Adding memcached support to PHP in Slackware 13.1</title><link>https://amree.github.io/2010/10/09/adding-memcached-support-to-php-in-slackware-13.1/</link><pubDate>Sat, 09 Oct 2010 00:00:00 +0000</pubDate><guid>https://amree.github.io/2010/10/09/adding-memcached-support-to-php-in-slackware-13.1/</guid><description>&lt;p>I just started learning Zend Framework and in one of the tutorials I read, I
need to enable memcached in my PHP which is not available by default.&lt;/p></description><content>&lt;p>I just started learning Zend Framework and in one of the tutorials I read, I
need to enable memcached in my PHP which is not available by default.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Install &lt;a href="http://slackbuilds.org/repository/13.1/libraries/libevent/">libevent&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install &lt;a href="http://slackbuilds.org/repository/13.1/network/memcached/">memcached&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install &lt;a href="http://slackbuilds.org/repository/13.1/libraries/libmemcached/">libmemcached&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install memcache.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">wget http://pecl.php.net/get/memcache-2.2.6.tgz
tar -zxvf memcache-2.2.6.tgz
cd memcache-2.2.6
phpize &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> ./configure --enable-memcache &lt;span style="color:#f92672">&amp;amp;&amp;amp;&lt;/span> make
cp modules/memcache.so /usr/lib/php/extensions/
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Load the module using .ini files in /etc/php&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">touch /etc/php/memcached.ini
echo &lt;span style="color:#e6db74">&amp;#39;extension=memcache.so&amp;#39;&lt;/span> &amp;gt; /etc/php/memcached.ini
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Run memcached as a daemon (d = daemon, m = memory, u = user, l = IP to listen to, p = port).&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">memcached -d -m &lt;span style="color:#ae81ff">1024&lt;/span> -u root -l 127.0.0.1 -p &lt;span style="color:#ae81ff">11211&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Put this file in your web directory and run it. It should be rendered without any error.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-php" data-lang="php">&lt;span style="color:#f92672">&amp;lt;?&lt;/span>&lt;span style="color:#a6e22e">php&lt;/span>
$memcache &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#a6e22e">Memcache&lt;/span>;
$memcache&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">connect&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;localhost&amp;#39;&lt;/span>, &lt;span style="color:#ae81ff">11211&lt;/span>) &lt;span style="color:#66d9ef">or&lt;/span> &lt;span style="color:#66d9ef">die&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;Could not connect&amp;#34;&lt;/span>);
$version &lt;span style="color:#f92672">=&lt;/span> $memcache&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">getVersion&lt;/span>();
&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Server&amp;#39;s version: &amp;#34;&lt;/span>&lt;span style="color:#f92672">.&lt;/span>$version&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&amp;lt;br/&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
$tmp_object &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">stdClass&lt;/span>;
$tmp_object&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">str_attr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#39;test&amp;#39;&lt;/span>;
$tmp_object&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">int_attr&lt;/span> &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#ae81ff">123&lt;/span>;
$memcache&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">set&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;key&amp;#39;&lt;/span>, $tmp_object, &lt;span style="color:#66d9ef">false&lt;/span>, &lt;span style="color:#ae81ff">10&lt;/span>) &lt;span style="color:#66d9ef">or&lt;/span> &lt;span style="color:#66d9ef">die&lt;/span> (&lt;span style="color:#e6db74">&amp;#34;Failed to save data at the server&amp;#34;&lt;/span>);
&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Store data in the cache (data will expire in 10 seconds)&amp;lt;br/&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
$get_result &lt;span style="color:#f92672">=&lt;/span> $memcache&lt;span style="color:#f92672">-&amp;gt;&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>(&lt;span style="color:#e6db74">&amp;#39;key&amp;#39;&lt;/span>);
&lt;span style="color:#66d9ef">echo&lt;/span> &lt;span style="color:#e6db74">&amp;#34;Data from the cache:&amp;lt;br/&amp;gt;&lt;/span>&lt;span style="color:#ae81ff">\n&lt;/span>&lt;span style="color:#e6db74">&amp;#34;&lt;/span>;
&lt;span style="color:#a6e22e">var_dump&lt;/span>($get_result);
&lt;span style="color:#75715e">?&amp;gt;&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">
&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;/ol>
&lt;p>References:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="http://my2.php.net/manual/en/memcache.installation.php">http://my2.php.net/manual/en/memcache.installation.php&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://stackoverflow.com/questions/1442411/using-memcache-vs-memcached-with-php">http://stackoverflow.com/questions/1442411/using-memcache-vs-memcached-with-php&lt;/a>&lt;/li>
&lt;/ul></content></item><item><title>Configuring Linux to work with NVidia Hybrid SLI Technology</title><link>https://amree.github.io/2010/02/21/configuring-linux-to-work-with-nvidia-hybrid-sli-technology/</link><pubDate>Sun, 21 Feb 2010 00:00:00 +0000</pubDate><guid>https://amree.github.io/2010/02/21/configuring-linux-to-work-with-nvidia-hybrid-sli-technology/</guid><description>&lt;p>First of all, at the time of this writing, NVIDIA Hybrid SLI Technology is &lt;a href="http://www.nvnews.net/vbulletin/showpost.php?p=1613349&amp;amp;postcount=2">not supported&lt;/a>
on Linux and without proper configuration, you won’t even be able to load your
Desktop Environment such as Xfce.&lt;/p></description><content>&lt;p>First of all, at the time of this writing, NVIDIA Hybrid SLI Technology is &lt;a href="http://www.nvnews.net/vbulletin/showpost.php?p=1613349&amp;amp;postcount=2">not supported&lt;/a>
on Linux and without proper configuration, you won’t even be able to load your
Desktop Environment such as Xfce.&lt;/p>
&lt;p>That’s not the only problem, based on an
&lt;a href="http://www.nvnews.net/articles/hybrid_sli_interview/index.shtml">interview&lt;/a>
with NVIDIA’s Tom Petersen, one of its main feature is called HybridPower which
basically allows users to shut off the graphics card when not needed and
dramatically reduce power consumption. This means, there is a possibility that
if we can’t find a way to turn off the second GPU, it will consume more power
that it should be.&lt;/p>
&lt;p>But that’s another problem. Right now, we just want to boot into our Desktop Environment properly.&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Running &lt;code>startx&lt;/code> would show these error messages from &lt;code>/var/log/Xorg.0.log&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(!!) More than one possible primary device found
(--) PCI: (0:2:0:0) 10de:06e8:1028:0271 rev 161, Mem @ 0xae000000/16777216, 0xd0000000/268435456, 0xac000000/33554432, I/O @ 0x00004000/128
(--) PCI: (0:3:0:0) 10de:0866:1028:0271 rev 177, Mem @ 0xaa000000/16777216, 0xb0000000/268435456, 0xcc000000/33554432, I/O @ 0x00005000/128, BIOS @ 0x????????/131072
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Generate the default configuration for your X (using root):&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-sh" data-lang="sh">nvidia-xconfig
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Get the list of the GPUs.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">$ lspci
02:00.0 VGA compatible controller: nVidia Corporation G98 [GeForce 9200M GS] (rev a1)
03:00.0 VGA compatible controller: nVidia Corporation C79 [GeForce 9400M G] (rev b1)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will get a long list of devices connected to your PCI buses. We are only interested with the VGA controller.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>As you can see, we have two VGA controller, we just need to specify which one we would like to use.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">nano /etc/X11/xorg.conf
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Go to your Device section and set Bus ID for your controller in it. So, in the end, if I chose the second controller, my &lt;code>Xorg.conf&lt;/code> would somehow look like this:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">Section &amp;#34;Device&amp;#34;
Identifier &amp;#34;Device0&amp;#34;
Driver &amp;#34;nvidia&amp;#34;
VendorName &amp;#34;NVIDIA Corporation&amp;#34;
BoardName &amp;#34;GeForce 9400M G&amp;#34;
BusID &amp;#34;PCI:3:0:0&amp;#34;
EndSection
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The configuration is simple, you just need to &lt;strong>add the 6th line&lt;/strong>. Just
make sure you put it in the correct format &lt;code>PCI:X:X:X&lt;/code>, X possibly refers
to the last 3 digit number in your error log.&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>How to Enable MySQL Support in Qt SDK for Linux</title><link>https://amree.github.io/2009/07/22/how-to-enable-mysql-support-in-qt-sdk-for-linux/</link><pubDate>Wed, 22 Jul 2009 00:00:00 +0000</pubDate><guid>https://amree.github.io/2009/07/22/how-to-enable-mysql-support-in-qt-sdk-for-linux/</guid><description>&lt;p>Known to work with:&lt;/p>
&lt;ul>
&lt;li>Slackware v13.37&lt;/li>
&lt;li>Qt SDK v1.1.5 (32 bit)&lt;/li>
&lt;li>Qt v4.8.0&lt;/li>
&lt;li>MySQL v5.5.18&lt;/li>
&lt;/ul></description><content>&lt;p>Known to work with:&lt;/p>
&lt;ul>
&lt;li>Slackware v13.37&lt;/li>
&lt;li>Qt SDK v1.1.5 (32 bit)&lt;/li>
&lt;li>Qt v4.8.0&lt;/li>
&lt;li>MySQL v5.5.18&lt;/li>
&lt;/ul>
&lt;p>Please follow this guide properly:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Download Qt SDK for Linux/X11 at Qt Software.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Install it anywhere you want, just make sure you remember the path. I installed mine at &lt;code>/opt&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>To build MySQL as a plugin, you need to know two other paths:&lt;/p>
&lt;p>MySQL header directory&amp;rsquo;s files example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">decimal.h m_string.h my_dbug.h my_list.h my_sys.h mysql_embed.h mysqld_error.h sql_state.h typelib.h
errmsg.h my_alloc.h my_dir.h my_net.h my_xml.h mysql_time.h raid.h sslopt-case.h
keycache.h my_attribute.h my_getopt.h my_no_pthread.h mysql.h mysql_version.h readline.h sslopt-longopts.h
m_ctype.h my_config.h my_global.h my_pthread.h mysql_com.h mysqld_ername.h sql_common.h sslopt-vars.h
&lt;/code>&lt;/pre>&lt;/div>&lt;p>MySQL library directory&amp;rsquo;s files example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">libdbug.a libmyisammrg.a libmysqlclient.so@ libmysqlclient_r.a libmysqlclient_r.so.15@ libmysys.a
libheap.a libmysqlclient.a libmysqlclient.so.15@ libmysqlclient_r.la* libmysqlclient_r.so.15.0.0* libvio.a
libmyisam.a libmysqlclient.la* libmysqlclient.so.15.0.0* libmysqlclient_r.so@ libmystrings.a
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>I installed my MySQL at &lt;code>/opt&lt;/code>, so those files will be in:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e"># Headers directory&lt;/span>
/opt/mysql-5.5.18-linux2.6-i686/include/
&lt;span style="color:#75715e"># Libraries directory&lt;/span>
/opt/mysql-5.5.18-linux2.6-i686/lib
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Go to your main Qt SDK installation&amp;rsquo;s path:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">cd /opt/QtSDK/
cd QtSources/4.8.0/src/plugins/sqldrivers
&lt;span style="color:#75715e"># Replace all the path based on your computer environment.&lt;/span>
/opt/QtSDK/Desktop/Qt/4.8.0/gcc/bin/qmake -o Makefile &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=/opt/mysql-5.5.18-linux2.6-i686/include/&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=-L/opt/mysql-5.5.18-linux2.6-i686/lib -lmysqlclient&amp;#34;&lt;/span> mysql.pro
make
/opt/QtSDK/Desktop/Qt/4.8.0/gcc/bin/qmake &lt;span style="color:#e6db74">&amp;#34;INCLUDEPATH+=/opt/mysql-5.5.18-linux2.6-i686/include/&amp;#34;&lt;/span> &lt;span style="color:#e6db74">&amp;#34;LIBS+=-L/opt/mysql-5.5.18-linux2.6-i686/lib -lmysqlclient_r&amp;#34;&lt;/span> mysql.pro
make
make install
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Some files with &lt;code>mysql&lt;/code> in the name will be copied in your sqldrivers path:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">/opt/QtSDK/Desktop/Qt/4.8.0/gcc/plugins/sqldrivers
&lt;/code>&lt;/pre>&lt;/div>&lt;/li>
&lt;li>
&lt;p>Before trying your MySQL coding, please make sure &lt;code>libmysqlclient.so&lt;/code> is in
the &lt;code>LD_LIBRARY_PATH&lt;/code>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create a new project and put these codes to test your new plugin.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">QT += core sql
QT -= gui
TARGET = mysql
CONFIG += console
CONFIG -= app_bundle
TEMPLATE = app
SOURCES += main.cpp
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you have &lt;code>mysql&lt;/code> included in your &lt;code>.pro&lt;/code> file.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-cpp" data-lang="cpp">&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QCoreApplication&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">#include&lt;/span> &lt;span style="color:#75715e">&amp;lt;QtSql&amp;gt;&lt;/span>&lt;span style="color:#75715e">
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>(&lt;span style="color:#66d9ef">int&lt;/span> argc, &lt;span style="color:#66d9ef">char&lt;/span> &lt;span style="color:#f92672">*&lt;/span>argv[])
{
QCoreApplication a(argc, argv);
qDebug() &lt;span style="color:#f92672">&amp;lt;&amp;lt;&lt;/span> QSqlDatabase&lt;span style="color:#f92672">::&lt;/span>drivers();
&lt;span style="color:#66d9ef">return&lt;/span> a.exec();
}
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You should get &lt;code>QMYSQL&lt;/code> in the outputs when you ran the application:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">(&amp;#34;QSQLITE&amp;#34;, &amp;#34;QMYSQL3&amp;#34;, &amp;#34;QMYSQL&amp;#34;)
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can find my info at &lt;a href="http://qt-project.org/doc/qt-4.8/sql-driver.html">http://qt-project.org/doc/qt-4.8/sql-driver.html&lt;/a>.&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>Reading Mifare 1K Card using Java in Linux</title><link>https://amree.github.io/2009/02/11/reading-mifare-1k-card-using-java-in-linux/</link><pubDate>Wed, 11 Feb 2009 00:00:00 +0000</pubDate><guid>https://amree.github.io/2009/02/11/reading-mifare-1k-card-using-java-in-linux/</guid><description>&lt;h2 id="the-story">The Story&lt;/h2>
&lt;p>At the end of last year, my friends and I were tasked to read our staff card.
The main objective was pretty simple which is to create a library where we don’t
have to depend on the vendor every time we want to read our own staff card and
the library should also work in Linux and Windows (that means Java to us).&lt;/p></description><content>&lt;h2 id="the-story">The Story&lt;/h2>
&lt;p>At the end of last year, my friends and I were tasked to read our staff card.
The main objective was pretty simple which is to create a library where we don’t
have to depend on the vendor every time we want to read our own staff card and
the library should also work in Linux and Windows (that means Java to us).&lt;/p>
&lt;p>Working environment:&lt;/p>
&lt;ul>
&lt;li>Slackware 12.2&lt;/li>
&lt;li>JDK 6 Update 11&lt;/li>
&lt;li>Netbeans 6.5&lt;/li>
&lt;li>libusb 0.1.12&lt;/li>
&lt;li>Windows Binary of JPC/SC Java API 0.8.0&lt;/li>
&lt;li>Smartcard Reader&lt;/li>
&lt;/ul>
&lt;p>Let’s talk about the reader first. You need to get a reader that supports Mifare
1K card (obviously) which to be exact a reader that supports ISO14443A/B or
ISO15693 (contactless standard). Now, to make your life easier, you should get a
reader that can read contactless standards compliant using the same framework as
ISO7816 compliant contact cards. In simple terms, you can use APDU to get the
data that you want.&lt;/p>
&lt;p>So, for this little project, we use &lt;strong>OMNIKEY CardMan 5321&lt;/strong> RFID reader. It has
everything that we need, Linux/Windows supports, APDU calls to the contactless
card, it even comes a contact card’s reader too and it’s also inexpensive.&lt;/p>
&lt;p>Make sure you choose the correct reader or you won’t be able to use this
tutorial. Some reader requires you to read using their own specific code, which
means you can only use the code you wrote on that particular reader, unlike
readers that support APDU calls to contactless cards.&lt;/p>
&lt;h2 id="the-card">The Card&lt;/h2>
&lt;p>1024 byte memory is organised as sixteen sectors, each of which is made up of
four blocks and each block is 16 bytes long. The first block in the memory
(Block 0) is read-only and is set in the factory to contain the four-byte serial
number (UID), check bytes and manufacturers data. The last block of each sector
(Blocks 3, 7, 11, 15 … 59, 63) is the Sector Trailer Block which contains the
&lt;strong>two security Key codes (KeyA and KeyB&lt;/strong>) and the Access bits that define how
the sector can be accessed.&lt;/p>
&lt;p>Taking into account the Serial Number/Manufacturers Block and the Sector Trailer
Blocks then there are 752 bytes of free memory for user storage. For all Read
and Write operations the Mifare card memory is addressed by Block number (in
hexadecimal format).&lt;/p>
&lt;h2 id="the-installation">The Installation&lt;/h2>
&lt;p>Before you begin coding your codes, you need to make sure your environment is
ready for you. To do that, just follow steps from my previous tutorial which is
pretty much the same.&lt;/p>
&lt;h2 id="general-steps-to-read-the-card">General Steps to Read the Card&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Load Mifare key&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Authenticate&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Read&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="code">Code&lt;/h2>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">package&lt;/span> my.husm.mifare&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> java.nio.ByteBuffer&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> java.util.List&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.smartcardio.Card&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.smartcardio.CardChannel&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.smartcardio.CardException&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.smartcardio.CardTerminal&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.smartcardio.TerminalFactory&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">Read&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#a6e22e">Read&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
CardTerminal terminal &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// show the list of available terminals
&lt;/span>&lt;span style="color:#75715e">&lt;/span> TerminalFactory factory &lt;span style="color:#f92672">=&lt;/span> TerminalFactory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getDefault&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
List&lt;span style="color:#f92672">&amp;lt;&lt;/span>CardTerminal&lt;span style="color:#f92672">&amp;gt;&lt;/span> terminals &lt;span style="color:#f92672">=&lt;/span> factory&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">terminals&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">list&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
String readerName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> terminals&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">size&lt;/span>&lt;span style="color:#f92672">();&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
readerName &lt;span style="color:#f92672">=&lt;/span> terminals&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">substring&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
terminals&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">toString&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">()&lt;/span> &lt;span style="color:#f92672">-&lt;/span> 2&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>readerName&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">equalsIgnoreCase&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;01&amp;#34;&lt;/span>&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
terminal &lt;span style="color:#f92672">=&lt;/span> terminals&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">get&lt;/span>&lt;span style="color:#f92672">(&lt;/span>i&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#75715e">// Establish a connection with the card
&lt;/span>&lt;span style="color:#75715e">&lt;/span> System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Waiting for a card..&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
terminal&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">waitForCardPresent&lt;/span>&lt;span style="color:#f92672">(&lt;/span>0&lt;span style="color:#f92672">);&lt;/span>
Card card &lt;span style="color:#f92672">=&lt;/span> terminal&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">connect&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;T=0&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
CardChannel channel &lt;span style="color:#f92672">=&lt;/span> card&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getBasicChannel&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#75715e">// Start with something simple, read UID, kinda like Hello World!
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> baReadUID &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>5&lt;span style="color:#f92672">];&lt;/span>
baReadUID &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]{(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xCA&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">};&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;UID: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> send&lt;span style="color:#f92672">(&lt;/span>baReadUID&lt;span style="color:#f92672">,&lt;/span> channel&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#75715e">// If successfull, the output will end with 9000
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">// OK, now, the real work
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Get Serial Number
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#75715e">// Load key
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> baLoadKey &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>12&lt;span style="color:#f92672">];&lt;/span>
baLoadKey &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]{(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x82&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x20&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x1A&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x06&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">};&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;LOAD KEY: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> send&lt;span style="color:#f92672">(&lt;/span>baLoadKey&lt;span style="color:#f92672">,&lt;/span> channel&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#75715e">// If successfull, will output 9000
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">// Authenticate
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> baAuth &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>7&lt;span style="color:#f92672">];&lt;/span>
baAuth &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]{(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x88&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x09&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x60&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">};&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;AUTHENTICATE: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> send&lt;span style="color:#f92672">(&lt;/span>baAuth&lt;span style="color:#f92672">,&lt;/span> channel&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#75715e">// If successfull, will output 9000
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#75715e">// Read Serial
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> baRead &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>6&lt;span style="color:#f92672">];&lt;/span>
baRead &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]{(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xFF&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0xB0&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x00&lt;span style="color:#f92672">,&lt;/span>
&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x09&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">)&lt;/span> 0x10&lt;span style="color:#f92672">};&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;READ: &amp;#34;&lt;/span> &lt;span style="color:#f92672">+&lt;/span> send&lt;span style="color:#f92672">(&lt;/span>baRead&lt;span style="color:#f92672">,&lt;/span> channel&lt;span style="color:#f92672">));&lt;/span>
&lt;span style="color:#75715e">// If successfull, the output will end with 9000
&lt;/span>&lt;span style="color:#75715e">&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Exception ex&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ex&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> String &lt;span style="color:#a6e22e">send&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> cmd&lt;span style="color:#f92672">,&lt;/span> CardChannel channel&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
String res &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> baResp &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> &lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[&lt;/span>258&lt;span style="color:#f92672">];&lt;/span>
ByteBuffer bufCmd &lt;span style="color:#f92672">=&lt;/span> ByteBuffer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">wrap&lt;/span>&lt;span style="color:#f92672">(&lt;/span>cmd&lt;span style="color:#f92672">);&lt;/span>
ByteBuffer bufResp &lt;span style="color:#f92672">=&lt;/span> ByteBuffer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">wrap&lt;/span>&lt;span style="color:#f92672">(&lt;/span>baResp&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// output = The length of the received response APDU
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">int&lt;/span> output &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
output &lt;span style="color:#f92672">=&lt;/span> channel&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">transmit&lt;/span>&lt;span style="color:#f92672">(&lt;/span>bufCmd&lt;span style="color:#f92672">,&lt;/span> bufResp&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>CardException ex&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
ex&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> output&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
res &lt;span style="color:#f92672">+=&lt;/span> String&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">format&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;%02X&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> baResp&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">]);&lt;/span>
&lt;span style="color:#75715e">// The result is formatted as a hexadecimal integer
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> res&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">[&lt;/span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">](&lt;/span>&lt;span style="color:#66d9ef">public&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">new&lt;/span> Read&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Make sure you have set the right connection protocol at line 43, as pointed out
by Animesh (previous commentator).&lt;/p>
&lt;p>These codes use Java API to read the smartcard, but I suggest you use the jpcsc
library. It’s much more robust when it comes to error handling.&lt;/p>
&lt;h2 id="the-apdu-commands">The APDU Commands&lt;/h2>
&lt;h1 id="load-key">Load Key&lt;/h1>
&lt;pre>&lt;code>+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
| FF | 82 | 20 | 1A | 06 | FF | FF | FF | FF | FF | FF |
+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
| 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 |
+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+--------+
1 = CLA : (Fixed)
2 = INS : (Fixed)
3 = P1 : (Fixed)
4 = P2 : Key type, could be 00, 1A, 1B
5 = LC : Key length, usually 6 for 6 byte
6 = XX : ----+
7 = XX : |
8 = XX : |__ The Key (eg. FF FF FF FF FF FF)
9 = XX : |
10 = XX : |
11 = XX : ----+
# Autenthicate
+--------+--------+--------+--------+--------+--------+
| FF | 88 | 00 | 01 | 60 | 00 |
+--------+--------+--------+--------+--------+--------+
| 1 | 2 | 3 | 4 | 5 | 6 |
+--------+--------+--------+--------+--------+--------+
1 = CLA : (Fixed)
2 = INS : (Fixed)
3 = P1 : (Fixed)
4 = P2 : Block Number you want to authenticate in Hex
5 = P3 : Mifare Block Number LSB
6 = XX : Key type, could be 00, 1A, 1B
# Read
+--------+--------+--------+--------+--------+
| FF | B0 | 00 | 01 | 10 |
+--------+--------+--------+--------+--------+
| 1 | 2 | 3 | 4 | 5 |
+--------+--------+--------+--------+--------+
1 = CLA : (Fixed)
2 = INS : (Fixed)
3 = P1 : (Fixed)
4 = P2 : Block Number that you want to read in Hex
5 = Le : (Fixed)
&lt;/code>&lt;/pre>&lt;p>That&amp;rsquo;s all, thanks for reading!&lt;/p></content></item><item><title>Printing to PDF using CUPS</title><link>https://amree.github.io/2008/09/10/printing-to-pdf-using-cups/</link><pubDate>Wed, 10 Sep 2008 00:00:00 +0000</pubDate><guid>https://amree.github.io/2008/09/10/printing-to-pdf-using-cups/</guid><description>Install CUPS-PDF based on your distro, you can download if from here.
Go to http://localhost:631.
If the page requested a username and password, just enter your root as username and password for your root.
Go to Administration &amp;gt; Add Printer.
In the Add Printer page, put a name for your virtual PDF printe, any name will do. Then click Continue.</description><content>&lt;ol>
&lt;li>
&lt;p>&lt;strong>Install CUPS-PDF&lt;/strong> based on your distro, you can download if from
&lt;a href="http://www.physik.uni-wuerzburg.de/~vrbehr/cups-pdf/download.shtml">here&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go to &lt;a href="http://localhost:631">http://localhost:631&lt;/a>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If the page requested a username and password, just enter your root as
username and password for your root.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Go to &lt;strong>Administration &amp;gt; Add Printer&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the &lt;strong>Add Printer&lt;/strong> page, &lt;strong>put a name&lt;/strong> for your virtual PDF printe, any
name will do. Then click &lt;strong>Continue&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>For the &lt;strong>Device for a&lt;/strong>, you should &lt;strong>select CUPS-PDF&lt;/strong> (Virtual PDF
Driver). If it’s not there, then you haven’t executed &lt;strong>Step 1&lt;/strong>
successfully.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the 3rd page, choose &lt;strong>Generic as the Make&lt;/strong> and then click &lt;strong>Continue&lt;/strong>.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>In the 4th page, &lt;strong>choose Generic CUPS-PDF Printer (en)&lt;/strong> as the model and
then click &lt;strong>Add Printer&lt;/strong>. For now, you’re done, but we need to customize
where the file will be generated when you printed it.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Edit &lt;code>/etc/cups/cups-pdf.conf&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Put these lines at the end of the file and save it (both can be customized):&lt;/p>
&lt;pre>&lt;code>Out /home/${USER}/Desktop
Label 1
&lt;/code>&lt;/pre>&lt;p>The first line actually tell CUPS to print your file to the Desktop and the second line will make sure your file won’t be overwritten by a newer one.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Restart CUPS&lt;/p>
&lt;/li>
&lt;/ol></content></item><item><title>Java Printing Fix for Linux</title><link>https://amree.github.io/2008/09/09/java-printing-fix-for-linux/</link><pubDate>Tue, 09 Sep 2008 00:00:00 +0000</pubDate><guid>https://amree.github.io/2008/09/09/java-printing-fix-for-linux/</guid><description>&lt;p>Apparently, there&amp;rsquo;s a bug in Java where people using newer version of CUPS
cannot print (can&amp;rsquo;t even display the print dialog) due to a null pointer
exception and this is actually a known bug. So, how do we fix this? For people
who use Gnome, you can refer to this
&lt;a href="https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/156191/comments/18">page&lt;/a>.&lt;/p></description><content>&lt;p>Apparently, there&amp;rsquo;s a bug in Java where people using newer version of CUPS
cannot print (can&amp;rsquo;t even display the print dialog) due to a null pointer
exception and this is actually a known bug. So, how do we fix this? For people
who use Gnome, you can refer to this
&lt;a href="https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/156191/comments/18">page&lt;/a>.&lt;/p>
&lt;p>However, for people who uses non desktop environment such as Fluxbox, Openbox
and etc (Gnome and KDE user can use these steps too), you can fix it by editing
your CUPS printers configuration file. You can get edit the file at
&lt;code>/etc/cups/printers.conf&lt;/code>&lt;/p>
&lt;pre>&lt;code>&amp;lt;DefaultPrinter Printer&amp;gt;
# Printer configuration file for CUPS v1.3.7
# Written by cupsd on 2008-09-08 11:24
.
.
.
Option orientation-requested 3
&amp;lt;/Printer&amp;gt;
&lt;/code>&lt;/pre>&lt;p>Make sure you &lt;code>Option orientation-requested 3&lt;/code> to every configuration for every
printer you&amp;rsquo;ve installed. If you cannot find the file, it&amp;rsquo;s possible that you
haven&amp;rsquo;t configured any printer yet.&lt;/p>
&lt;p>This fix is simply to make sure CUPS will provide a page orientation setting to
Java.&lt;/p>
&lt;p>The exception:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">Caused by&lt;span style="color:#f92672">:&lt;/span> java&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lang&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">NullPointerException&lt;/span>&lt;span style="color:#f92672">:&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span> attribute
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">IPPPrintService&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">isAttributeValueSupported&lt;/span>&lt;span style="color:#f92672">(&lt;/span>IPPPrintService&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>1147&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceDialog$OrientationPanel&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">updateInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ServiceDialog&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>2121&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceDialog$PageSetupPanel&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">updateInfo&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ServiceDialog&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>1263&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceDialog&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">updatePanels&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ServiceDialog&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>437&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceDialog&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">initPrintDialog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ServiceDialog&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>195&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceDialog&lt;/span>&lt;span style="color:#f92672">.(&lt;/span>ServiceDialog&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>124&lt;span style="color:#f92672">)&lt;/span>
at javax&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ServiceUI&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printDialog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>ServiceUI&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>188&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">RasterPrinterJob&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printDialog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>RasterPrinterJob&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>855&lt;span style="color:#f92672">)&lt;/span>
at sun&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">PSPrinterJob&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printDialog&lt;/span>&lt;span style="color:#f92672">(&lt;/span>PSPrinterJob&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">java&lt;/span>&lt;span style="color:#f92672">:&lt;/span>421&lt;span style="color:#f92672">)&amp;lt;/&lt;/span>code&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Please refer to some of the discussions here:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://bugs.launchpad.net/ubuntu/+source/sun-java6/+bug/156191/">Ubuntu Bugs Report&lt;/a>&lt;/li>
&lt;li>&lt;a href="http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6633656">Java Bugs Report&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>FYI, you need to &lt;strong>restart your CUPS&lt;/strong> after editing the configuration (Thanks to Brandon Bell).&lt;/p></content></item><item><title>Auto Resize JTable Column Width</title><link>https://amree.github.io/2008/08/13/auto-resize-jtable-column-width/</link><pubDate>Wed, 13 Aug 2008 00:00:00 +0000</pubDate><guid>https://amree.github.io/2008/08/13/auto-resize-jtable-column-width/</guid><description>&lt;p>This will resize your JTable column width based on the contents of the header and data.&lt;/p></description><content>&lt;p>This will resize your JTable column width based on the contents of the header and data.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#66d9ef">public&lt;/span> JTable &lt;span style="color:#a6e22e">autoResizeColWidth&lt;/span>&lt;span style="color:#f92672">(&lt;/span>JTable table&lt;span style="color:#f92672">,&lt;/span> DefaultTableModel model&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setAutoResizeMode&lt;/span>&lt;span style="color:#f92672">(&lt;/span>JTable&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">AUTO_RESIZE_OFF&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setModel&lt;/span>&lt;span style="color:#f92672">(&lt;/span>model&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> margin &lt;span style="color:#f92672">=&lt;/span> 5&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getColumnCount&lt;/span>&lt;span style="color:#f92672">();&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> vColIndex &lt;span style="color:#f92672">=&lt;/span> i&lt;span style="color:#f92672">;&lt;/span>
DefaultTableColumnModel colModel &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">(&lt;/span>DefaultTableColumnModel&lt;span style="color:#f92672">)&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getColumnModel&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
TableColumn col &lt;span style="color:#f92672">=&lt;/span> colModel&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getColumn&lt;/span>&lt;span style="color:#f92672">(&lt;/span>vColIndex&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">int&lt;/span> width &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Get width of column header
&lt;/span>&lt;span style="color:#75715e">&lt;/span> TableCellRenderer renderer &lt;span style="color:#f92672">=&lt;/span> col&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaderRenderer&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>renderer &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
renderer &lt;span style="color:#f92672">=&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTableHeader&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getDefaultRenderer&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
Component comp &lt;span style="color:#f92672">=&lt;/span> renderer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTableCellRendererComponent&lt;/span>&lt;span style="color:#f92672">(&lt;/span>table&lt;span style="color:#f92672">,&lt;/span> col&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getHeaderValue&lt;/span>&lt;span style="color:#f92672">(),&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">,&lt;/span> 0&lt;span style="color:#f92672">);&lt;/span>
width &lt;span style="color:#f92672">=&lt;/span> comp&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPreferredSize&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Get maximum width of column data
&lt;/span>&lt;span style="color:#75715e">&lt;/span> &lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> r &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> r &lt;span style="color:#f92672">&amp;lt;&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getRowCount&lt;/span>&lt;span style="color:#f92672">();&lt;/span> r&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
renderer &lt;span style="color:#f92672">=&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getCellRenderer&lt;/span>&lt;span style="color:#f92672">(&lt;/span>r&lt;span style="color:#f92672">,&lt;/span> vColIndex&lt;span style="color:#f92672">);&lt;/span>
comp &lt;span style="color:#f92672">=&lt;/span> renderer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTableCellRendererComponent&lt;/span>&lt;span style="color:#f92672">(&lt;/span>table&lt;span style="color:#f92672">,&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getValueAt&lt;/span>&lt;span style="color:#f92672">(&lt;/span>r&lt;span style="color:#f92672">,&lt;/span> vColIndex&lt;span style="color:#f92672">),&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">,&lt;/span>
r&lt;span style="color:#f92672">,&lt;/span> vColIndex&lt;span style="color:#f92672">);&lt;/span>
width &lt;span style="color:#f92672">=&lt;/span> Math&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">max&lt;/span>&lt;span style="color:#f92672">(&lt;/span>width&lt;span style="color:#f92672">,&lt;/span> comp&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getPreferredSize&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">width&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#75715e">// Add margin
&lt;/span>&lt;span style="color:#75715e">&lt;/span> width &lt;span style="color:#f92672">+=&lt;/span> 2 &lt;span style="color:#f92672">*&lt;/span> margin&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#75715e">// Set the width
&lt;/span>&lt;span style="color:#75715e">&lt;/span> col&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setPreferredWidth&lt;/span>&lt;span style="color:#f92672">(&lt;/span>width&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">((&lt;/span>DefaultTableCellRenderer&lt;span style="color:#f92672">)&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTableHeader&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">getDefaultRenderer&lt;/span>&lt;span style="color:#f92672">()).&lt;/span>&lt;span style="color:#a6e22e">setHorizontalAlignment&lt;/span>&lt;span style="color:#f92672">(&lt;/span>
SwingConstants&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">LEFT&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#75715e">// table.setAutoCreateRowSorter(true);
&lt;/span>&lt;span style="color:#75715e">&lt;/span> table&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getTableHeader&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">setReorderingAllowed&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">false&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span> table&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Example:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#75715e">// Must pass the model
&lt;/span>&lt;span style="color:#75715e">&lt;/span>DefaultTableModel model &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DefaultTableModel&lt;span style="color:#f92672">();&lt;/span>
jTable &lt;span style="color:#f92672">=&lt;/span> autoResizeColWidth&lt;span style="color:#f92672">(&lt;/span>jTable&lt;span style="color:#f92672">,&lt;/span> model&lt;span style="color:#f92672">);&lt;/span>
&lt;/code>&lt;/pre>&lt;/div></content></item><item><title>Printing to Zebra S4M Using Java</title><link>https://amree.github.io/2008/05/11/printing-to-zebra-s4m-using-java/</link><pubDate>Sun, 11 May 2008 00:00:00 +0000</pubDate><guid>https://amree.github.io/2008/05/11/printing-to-zebra-s4m-using-java/</guid><description>&lt;p>Apparently there&amp;rsquo;re some codes scattered on the net telling people that you can
print to a Zebra printer by sending ZPL II codes using &lt;code>PrintService&lt;/code>. But the
problem is, it&amp;rsquo;s not working, I don&amp;rsquo;t know why, maybe because of a different
version of printer or model but I&amp;rsquo;m pretty sure the thing that came out from the
printer are just ordinary texts not barcode which is what the code was supposed
to output.&lt;/p></description><content>&lt;p>Apparently there&amp;rsquo;re some codes scattered on the net telling people that you can
print to a Zebra printer by sending ZPL II codes using &lt;code>PrintService&lt;/code>. But the
problem is, it&amp;rsquo;s not working, I don&amp;rsquo;t know why, maybe because of a different
version of printer or model but I&amp;rsquo;m pretty sure the thing that came out from the
printer are just ordinary texts not barcode which is what the code was supposed
to output.&lt;/p>
&lt;h2 id="new-version">New Version&lt;/h2>
&lt;p>Thanks to Oleg (a commentator) for pointing out on how to print using Zebra S4M
connected either via USB or network.&lt;/p>
&lt;p>The solution is pretty simple, all you have to do is do not install Zebra S4M as
a Zebra S4M (sounds weird, I know), instead, just install it as a local raw
printer (Linux) or generic text printer (Windows).&lt;/p>
&lt;p>For CUPS user in Linux, this is the example for the correct configurations:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-txt" data-lang="txt">/etc/cups/printers.conf
&amp;lt;Printer Zebra&amp;gt;
Info
Location
DeviceURI socket://10.1.1.5:9100
State Idle
StateTime 1223445299
Accepting Yes
Shared Yes
JobSheets none none
QuotaPeriod 0
PageLimit 0
KLimit 0
OpPolicy default
ErrorPolicy stop-printer
Option orientation-requested 3
&amp;lt;/Printer&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can always add the printer using the web interface, just make sure you
choose RAW as the Make/Manufacturer and Model/Driver.&lt;/p>
&lt;p>Test this Java code, it should print out a barcode:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> javax.print.Doc&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.DocFlavor&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.DocPrintJob&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.PrintException&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.PrintService&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.PrintServiceLookup&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.SimpleDoc&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.attribute.PrintServiceAttribute&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> javax.print.attribute.standard.PrinterName&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SimplePrint&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
PrintService psZebra &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
String sPrinterName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
PrintService&lt;span style="color:#f92672">[]&lt;/span> services &lt;span style="color:#f92672">=&lt;/span> PrintServiceLookup&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">lookupPrintServices&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;lt;&lt;/span> services&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">length&lt;/span>&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
PrintServiceAttribute attr &lt;span style="color:#f92672">=&lt;/span> services&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">].&lt;/span>&lt;span style="color:#a6e22e">getAttribute&lt;/span>&lt;span style="color:#f92672">(&lt;/span>PrinterName&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">class&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
sPrinterName &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#f92672">((&lt;/span>PrinterName&lt;span style="color:#f92672">)&lt;/span> attr&lt;span style="color:#f92672">).&lt;/span>&lt;span style="color:#a6e22e">getValue&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>sPrinterName&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">toLowerCase&lt;/span>&lt;span style="color:#f92672">().&lt;/span>&lt;span style="color:#a6e22e">indexOf&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;zebra&amp;#34;&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">&amp;gt;=&lt;/span> 0&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
psZebra &lt;span style="color:#f92672">=&lt;/span> services&lt;span style="color:#f92672">[&lt;/span>i&lt;span style="color:#f92672">];&lt;/span>
&lt;span style="color:#66d9ef">break&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>psZebra &lt;span style="color:#f92672">==&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Zebra printer is not found.&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">return&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
DocPrintJob job &lt;span style="color:#f92672">=&lt;/span> psZebra&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">createPrintJob&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
String s &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#e6db74">&amp;#34;^XA^FO100,40^BY3^B3,,30^FD123ABC^XZ&amp;#34;&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">byte&lt;/span>&lt;span style="color:#f92672">[]&lt;/span> by &lt;span style="color:#f92672">=&lt;/span> s&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getBytes&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
DocFlavor flavor &lt;span style="color:#f92672">=&lt;/span> DocFlavor&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">BYTE_ARRAY&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">AUTOSENSE&lt;/span>&lt;span style="color:#f92672">;&lt;/span>
Doc doc &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> SimpleDoc&lt;span style="color:#f92672">(&lt;/span>by&lt;span style="color:#f92672">,&lt;/span> flavor&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
job&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">print&lt;/span>&lt;span style="color:#f92672">(&lt;/span>doc&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#66d9ef">null&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>PrintException e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
e&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Print using FTP:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> java.io.FileInputStream&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.commons.net.ftp.FTP&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> org.apache.commons.net.ftp.FTPClient&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">FtpPrint&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String&lt;span style="color:#f92672">[]&lt;/span> args&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">try&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
FTPClient f &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FTPClient&lt;span style="color:#f92672">();&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">connect&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10.1.127.3&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">login&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;anonymous&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> &lt;span style="color:#e6db74">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">setFileType&lt;/span>&lt;span style="color:#f92672">(&lt;/span>FTP&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">ASCII_FILE_TYPE&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
FileInputStream in &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> FileInputStream&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/path/to/file&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#66d9ef">if&lt;/span> &lt;span style="color:#f92672">(&lt;/span>f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">storeFile&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;filename&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> in&lt;span style="color:#f92672">))&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
System&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">out&lt;/span>&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">println&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Upload ok&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">logout&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
f&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">disconnect&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span> &lt;span style="color:#66d9ef">catch&lt;/span> &lt;span style="color:#f92672">(&lt;/span>Exception e&lt;span style="color:#f92672">)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
e&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">printStackTrace&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Print using socket:&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-java" data-lang="java">&lt;span style="color:#f92672">import&lt;/span> java.io.DataOutputStream&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#f92672">import&lt;/span> java.net.Socket&lt;span style="color:#f92672">;&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">class&lt;/span> &lt;span style="color:#a6e22e">SocketPrint&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">public&lt;/span> &lt;span style="color:#66d9ef">static&lt;/span> &lt;span style="color:#66d9ef">void&lt;/span> &lt;span style="color:#a6e22e">main&lt;/span>&lt;span style="color:#f92672">(&lt;/span>String argv&lt;span style="color:#f92672">[])&lt;/span> &lt;span style="color:#66d9ef">throws&lt;/span> Exception &lt;span style="color:#f92672">{&lt;/span>
&lt;span style="color:#66d9ef">for&lt;/span> &lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#66d9ef">int&lt;/span> i &lt;span style="color:#f92672">=&lt;/span> 0&lt;span style="color:#f92672">;&lt;/span> i &lt;span style="color:#f92672">&amp;amp;&lt;/span>lt&lt;span style="color:#f92672">;&lt;/span> 10&lt;span style="color:#f92672">;&lt;/span> i&lt;span style="color:#f92672">++)&lt;/span> &lt;span style="color:#f92672">{&lt;/span>
Socket clientSocket &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> Socket&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;10.1.127.3&amp;#34;&lt;/span>&lt;span style="color:#f92672">,&lt;/span> 9100&lt;span style="color:#f92672">);&lt;/span>
DataOutputStream outToServer &lt;span style="color:#f92672">=&lt;/span> &lt;span style="color:#66d9ef">new&lt;/span> DataOutputStream&lt;span style="color:#f92672">(&lt;/span>clientSocket&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">getOutputStream&lt;/span>&lt;span style="color:#f92672">());&lt;/span>
outToServer&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">writeBytes&lt;/span>&lt;span style="color:#f92672">(&lt;/span>&lt;span style="color:#e6db74">&amp;#34;^XA^FO100,40^BY3^B3,,30^FD123ABC^XZ&amp;#34;&lt;/span>&lt;span style="color:#f92672">);&lt;/span>
clientSocket&lt;span style="color:#f92672">.&lt;/span>&lt;span style="color:#a6e22e">close&lt;/span>&lt;span style="color:#f92672">();&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;span style="color:#f92672">}&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>(I got it from &lt;a href="https://support.zebra.com">Zebra&amp;rsquo;s website&lt;/a>)&lt;/p>
&lt;p>&lt;a href="http://www.zebra.com/id/zebra/na/en/index/products/printers/industrial_commercial/s4m.4.tabs.html">Download guide to ZPL II&lt;/a>&lt;/p></content></item><item><title>Automatically Sign JARs Using Ant and Bash</title><link>https://amree.github.io/2008/04/14/automatically-sign-jars-using-ant-and-bash/</link><pubDate>Mon, 14 Apr 2008 00:00:00 +0000</pubDate><guid>https://amree.github.io/2008/04/14/automatically-sign-jars-using-ant-and-bash/</guid><description>&lt;p>This guide is more towards Netbeans project, but it can be used as a reference
for you to customize the script to suit your needs.&lt;/p></description><content>&lt;p>This guide is more towards Netbeans project, but it can be used as a reference
for you to customize the script to suit your needs.&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-bash" data-lang="bash">&lt;span style="color:#75715e">#!/bin/bash
&lt;/span>&lt;span style="color:#75715e">&lt;/span>&lt;span style="color:#75715e"># signer.bash&lt;/span>
find . -name &lt;span style="color:#e6db74">&amp;#34;*.jar&amp;#34;&lt;/span> -exec jarsigner -keystore /path/to/your/key -storepass yourpassword &lt;span style="color:#e6db74">&amp;#39;{}&amp;#39;&lt;/span> yourkeystorename &lt;span style="color:#ae81ff">\;&lt;/span>
echo &lt;span style="color:#e6db74">&amp;#39;JARs signed&amp;#39;&lt;/span>;
exit &lt;span style="color:#ae81ff">0&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This script &lt;strong>will search all files ending with .jar&lt;/strong> from the current
directory recursively and &lt;strong>then sign it&lt;/strong>. This means, it can be used
separately without ant script. Just make it executable and run it.&lt;/p>
&lt;p>Put this in the last line of your &lt;code>build.xml&lt;/code> but it must before the closing tag
of the &amp;ldquo;project&amp;rdquo; (&lt;code>build.xml&lt;/code> can be found in your main project directory)&lt;/p>
&lt;div class="highlight">&lt;pre style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-xml" data-lang="xml">&lt;span style="color:#75715e">&amp;lt;!-- build.xml --&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;project&amp;gt;&lt;/span>
.
.
.
&lt;span style="color:#f92672">&amp;lt;target&lt;/span> &lt;span style="color:#a6e22e">name=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;-post-jar&amp;#34;&lt;/span>&lt;span style="color:#f92672">&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;exec&lt;/span> &lt;span style="color:#a6e22e">dir=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;${dist.dir}&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">executable=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;/path/to/your/signer.bash&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">os=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Linux&amp;#34;&lt;/span> &lt;span style="color:#f92672">/&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/target&amp;gt;&lt;/span>
&lt;span style="color:#f92672">&amp;lt;/project&amp;gt;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This script will basically sign the jars after all the jars has been build.
Please note that it&amp;rsquo;d better if you set all the path using absolute path.&lt;/p>
&lt;p>After this, you just have to use &lt;strong>Clean and Build&lt;/strong> to generate the jars and
also automatically sign it. This script will also sign all of your included
libraries.&lt;/p></content></item></channel></rss>